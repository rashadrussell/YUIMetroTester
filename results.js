var RESULTS = [
  {
    "name": "ArraySort",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 114,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 71,
      "type": "testcase",
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testMixedStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMixedStrings",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:12 PM"
  },
  {
    "name": "Widget: Autohide",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 173,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 146,
      "type": "testcase",
      "WidgetAutohide should add a `hideOn` attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetAutohide should add a `hideOn` attribute",
        "duration": 47
      },
      "WidgetAutohide should hide when a click occurs outside its `boundingBox`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetAutohide should hide when a click occurs outside its `boundingBox`",
        "duration": 33
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:13 PM"
  },
  {
    "name": "OOP",
    "passed": 37,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 37,
    "duration": 256,
    "type": "report",
    "Core": {
      "name": "Core",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 83,
      "type": "testcase",
      "test_clone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_clone",
        "duration": 2
      },
      "test_clone_node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_clone_node",
        "duration": 2
      },
      "test_each": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_each",
        "duration": 1
      },
      "test_extend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_extend",
        "duration": 1
      },
      "test_merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_merge",
        "duration": 1
      }
    },
    "augment()": {
      "name": "augment()",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 53,
      "type": "testcase",
      "receiver object should be augmented with supplier's prototype properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver object should be augmented with supplier's prototype properties",
        "duration": 1
      },
      "receiver object properties should not be overwritten when `overwrite` is not `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver object properties should not be overwritten when `overwrite` is not `true`",
        "duration": 1
      },
      "receiver object properties should be overwritten when `overwrite` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver object properties should be overwritten when `overwrite` is `true`",
        "duration": 7
      },
      "only whitelisted properties should be copied to a receiver object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "only whitelisted properties should be copied to a receiver object",
        "duration": 1
      },
      "supplier constructor should be called immediately when augmenting a receiver object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "supplier constructor should be called immediately when augmenting a receiver object",
        "duration": 1
      },
      "supplier constructor should receive supplied args when augmenting a receiver object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "supplier constructor should receive supplied args when augmenting a receiver object",
        "duration": 1
      },
      "receiver function prototype should be augmented with supplier's prototype properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver function prototype should be augmented with supplier's prototype properties",
        "duration": 2
      },
      "receiver function prototype properties should not be overwritten when `overwrite` is not `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver function prototype properties should not be overwritten when `overwrite` is not `true`",
        "duration": 1
      },
      "receiver function prototype properties should be overwritten when `overwrite` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver function prototype properties should be overwritten when `overwrite` is `true`",
        "duration": 1
      },
      "only whitelisted properties should be copied to a receiver function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "only whitelisted properties should be copied to a receiver function",
        "duration": 1
      },
      "supplier constructor should receive supplied args when augmenting a receiver function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "supplier constructor should receive supplied args when augmenting a receiver function",
        "duration": 2
      },
      "augmenting a Y.Node instance should not overwrite existing properties by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "augmenting a Y.Node instance should not overwrite existing properties by default",
        "duration": 1
      }
    },
    "mix: default mode (object to object)": {
      "name": "mix: default mode (object to object)",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 38,
      "type": "testcase",
      "test [mode 0]: missing receiver or supplier": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: missing receiver or supplier",
        "duration": 1
      },
      "test [mode 0]: returns receiver": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: returns receiver",
        "duration": 1
      },
      "test [mode 0]: no overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: no overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: no overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: no overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: no overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: no overwrite, no whitelist, merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, no whitelist, merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, whitelist, merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, whitelist, toplevel merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, whitelist, toplevel merge",
        "duration": 1
      }
    },
    "mix: mode 1 (prototype to prototype)": {
      "name": "mix: mode 1 (prototype to prototype)",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 28,
      "type": "testcase",
      "test [mode 1]: no overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: no overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: no overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: no overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: no overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: no overwrite, no whitelist, merge",
        "duration": 2
      },
      "test [mode 1]: overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, no whitelist, merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, whitelist, merge",
        "duration": 1
      }
    },
    "mix: mode 2 (object to object and prototype to prototype)": {
      "name": "mix: mode 2 (object to object and prototype to prototype)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test [mode 2]: basic sanity check": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 2]: basic sanity check",
        "duration": 1
      }
    },
    "mix: mode 3 (prototype to object)": {
      "name": "mix: mode 3 (prototype to object)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "test [mode 3]: basic sanity check": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 3]: basic sanity check",
        "duration": 1
      }
    },
    "mix: mode 4 (object to prototype)": {
      "name": "mix: mode 4 (object to prototype)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test [mode 4]: basic sanity check": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 4]: basic sanity check",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:14 PM"
  },
  {
    "name": "Recordset",
    "passed": 30,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 30,
    "duration": 532,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 505,
      "type": "testcase",
      "testCreateEmptyRecordset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateEmptyRecordset",
        "duration": 16
      },
      "testGetRecords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetRecords",
        "duration": 8
      },
      "testAddSingleRecordToEnd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddSingleRecordToEnd",
        "duration": 9
      },
      "testAddSingleRecordToIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddSingleRecordToIndex",
        "duration": 8
      },
      "testAddMultipleRecordsToEnd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddMultipleRecordsToEnd",
        "duration": 9
      },
      "testAddMultipleRecordsToIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddMultipleRecordsToIndex",
        "duration": 10
      },
      "testDeleteSingleRecordFromEnd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeleteSingleRecordFromEnd",
        "duration": 8
      },
      "testDeleteSingleRecordFromIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeleteSingleRecordFromIndex",
        "duration": 8
      },
      "testDeleteRangeOfRecords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeleteRangeOfRecords",
        "duration": 9
      },
      "testEmptyRecordSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEmptyRecordSet",
        "duration": 8
      },
      "testGetValuesByKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetValuesByKey",
        "duration": 7
      },
      "testGetValuesByKeyWithInvalidKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetValuesByKeyWithInvalidKey",
        "duration": 7
      },
      "testUpdateRecordAtIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUpdateRecordAtIndex",
        "duration": 10
      },
      "testUpdateRecordAtIndices": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUpdateRecordAtIndices",
        "duration": 10
      },
      "testDefaultHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultHash",
        "duration": 17
      },
      "testDefaultSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultSort",
        "duration": 14
      },
      "testResort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testResort",
        "duration": 14
      },
      "testReverseBeforeSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReverseBeforeSort",
        "duration": 16
      },
      "testFlipAfterSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlipAfterSort",
        "duration": 20
      },
      "testCustomSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomSort",
        "duration": 19
      },
      "testSize": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSize",
        "duration": 7
      },
      "testEach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEach",
        "duration": 8
      },
      "testSome": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSome",
        "duration": 8
      },
      "testFilter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilter",
        "duration": 17
      },
      "testReject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReject",
        "duration": 14
      },
      "testMap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMap",
        "duration": 8
      },
      "testCustomHashTableInitialization": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableInitialization",
        "duration": 10
      },
      "testCustomHashTableAddingRecord": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableAddingRecord",
        "duration": 19
      },
      "testCustomHashTableRemovingRecord": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableRemovingRecord",
        "duration": 15
      },
      "testCustomHashTableUpdatingRecord": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableUpdatingRecord",
        "duration": 17
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:16 PM"
  },
  {
    "name": "XML",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 107,
    "type": "report",
    "XML Parse Tests": {
      "name": "XML Parse Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 63,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 6
      }
    },
    "XML Format Tests": {
      "name": "XML Format Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 17,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 4
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 4
      },
      "testFormat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFormat",
        "duration": 5
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:17 PM"
  },
  {
    "name": "SimpleYUI",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 98,
    "type": "report",
    "simpleyui": {
      "name": "simpleyui",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 58,
      "type": "testcase",
      "test global Y": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test global Y",
        "duration": 1
      },
      "test module inclusion": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test module inclusion",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:17 PM"
  },
  {
    "name": "DataTable: Sortable",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 666,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 433,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 35
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 19
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 54
      },
      "test sortable values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sortable values",
        "duration": 127
      },
      "test set('sortable')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('sortable')",
        "duration": 23
      },
      "test sortBy values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sortBy values",
        "duration": 127
      },
      "test set('sortBy')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('sortBy')",
        "duration": 28
      }
    },
    "DataTable.Sortable tests": {
      "name": "DataTable.Sortable tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 158,
      "type": "testcase",
      "test ui triggered sort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ui triggered sort",
        "duration": 106
      },
      "sorting a column with null values should group the nulls": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "sorting a column with null values should group the nulls",
        "duration": 44
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:19 PM"
  },
  {
    "name": "Datatable: Scroll",
    "passed": 21,
    "failed": 0,
    "errors": 0,
    "ignored": 2,
    "total": 23,
    "duration": 2787,
    "type": "report",
    "DataTable: Scroll": {
      "name": "DataTable: Scroll",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 2741,
      "type": "testsuite",
      "lifecycle and instantiation": {
        "name": "lifecycle and instantiation",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 79,
        "type": "testcase",
        "Y.DataTable should be augmented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.DataTable should be augmented",
          "duration": 27
        },
        "Y.DataTable.Base should not be augmented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.DataTable.Base should not be augmented",
          "duration": 27
        },
        "Y.DataTable constructor should not error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.DataTable constructor should not error",
          "duration": 23
        }
      },
      "scrollable attribute": {
        "name": "scrollable attribute",
        "passed": 18,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 18,
        "duration": 2594,
        "type": "testcase",
        "test scrollable values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test scrollable values",
          "duration": 132
        },
        "test set('scrollable')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test set('scrollable')",
          "duration": 29
        },
        "render() with 'scrollable' unset should not include scrolling UI": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with 'scrollable' unset should not include scrolling UI",
          "duration": 140
        },
        "render() with scrollable set, but neither width\/height should not render scroll UI": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable set, but neither width\/height should not render scroll UI",
          "duration": 268
        },
        "render() with scrollable: x + width should render x scroller": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable: x + width should render x scroller",
          "duration": 96
        },
        "render() with scrollable: y + height should render y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable: y + height should render y scroll DOM",
          "duration": 127
        },
        "render() with scrollable: xy + height, width should render x and y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable: xy + height, width should render x and y scroll DOM",
          "duration": 139
        },
        "set('scrollable', 'x') after render() should add x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'x') after render() should add x scroll DOM",
          "duration": 107
        },
        "set('scrollable', 'y') after render() should add y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'y') after render() should add y scroll DOM",
          "duration": 136
        },
        "set('scrollable', 'xy') after render() should add y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'xy') after render() should add y scroll DOM",
          "duration": 141
        },
        "set('scrollable', 'x') from 'xy' should remove y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'x') from 'xy' should remove y scroll DOM",
          "duration": 210
        },
        "set('scrollable', 'y') from 'xy' should remove x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'y') from 'xy' should remove x scroll DOM",
          "duration": 139
        },
        "set('scrollable', false) from 'x' should remove x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', false) from 'x' should remove x scroll DOM",
          "duration": 108
        },
        "set('scrollable', false) from 'y' should remove y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', false) from 'y' should remove y scroll DOM",
          "duration": 126
        },
        "set('scrollable', false) from 'xy' should remove x and y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', false) from 'xy' should remove x and y scroll DOM",
          "duration": 128
        },
        "set('scrollable', 'x') from 'y' should add x scroll DOM and remove y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'x') from 'y' should add x scroll DOM and remove y scroll DOM",
          "duration": 134
        },
        "set('scrollable', 'y') from 'x' should add y scroll DOM and remove x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'y') from 'x' should add y scroll DOM and remove x scroll DOM",
          "duration": 137
        },
        "set('scrollable', 'xy') from 'y' should add x scroll DOM outside y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'xy') from 'y' should add x scroll DOM outside y scroll DOM",
          "duration": 133
        }
      }
    },
    "y scrollable": {
      "name": "y scrollable",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 2,
      "duration": 19,
      "type": "testsuite",
      "y scroll": {
        "name": "y scroll",
        "passed": 0,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 2,
        "duration": 9,
        "type": "testcase",
        "test scroll lock between virtual scrollbar and y scroller": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test scroll lock between virtual scrollbar and y scroller"
        },
        "virtual scrollbar syncs scrollTop with y scroller": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "virtual scrollbar syncs scrollTop with y scroller"
        }
      },
      "xy scroll": {
        "name": "xy scroll",
        "passed": 0,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 0,
        "duration": 1,
        "type": "testcase"
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:23 PM"
  },
  {
    "name": "DataTable: Mutable",
    "passed": 98,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 98,
    "duration": 2728,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 306,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 34
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 17
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 22
      },
      "test autoSync values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test autoSync values",
        "duration": 115
      },
      "test set('autoSync')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('autoSync')",
        "duration": 22
      }
    },
    "addColumn": {
      "name": "addColumn",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 327,
      "type": "testcase",
      "test addColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn() does nothing",
        "duration": 33
      },
      "test addColumn(string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(string)",
        "duration": 64
      },
      "test addColumn(config)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(config)",
        "duration": 21
      },
      "test addColumn(string, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(string, number)",
        "duration": 21
      },
      "test addColumn(config, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(config, number)",
        "duration": 21
      },
      "test addColumn(string, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(string, [number, number])",
        "duration": 22
      },
      "test addColumn(config, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(config, [number, number])",
        "duration": 35
      },
      "addColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event should fire",
        "duration": 20
      },
      "addColumn event should have column config and index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event should have column config and index",
        "duration": 21
      },
      "addColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event should be preventable",
        "duration": 20
      },
      "addColumn event e.index modification should update destination": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event e.index modification should update destination",
        "duration": 21
      },
      "addColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn should be chainable",
        "duration": 21
      }
    },
    "modifyColumn": {
      "name": "modifyColumn",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 223,
      "type": "testcase",
      "test modifyColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn() does nothing",
        "duration": 20
      },
      "test modifyColumn(string) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn(string) does nothing",
        "duration": 25
      },
      "test modifyColumn(string, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn(string, obj)",
        "duration": 25
      },
      "test modifyColumn(number, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn(number, obj)",
        "duration": 26
      },
      "test modifyColumn([number, number], obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn([number, number], obj)",
        "duration": 20
      },
      "modifyColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event should fire",
        "duration": 21
      },
      "modifyColumn event should have column config and newColumnDef": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event should have column config and newColumnDef",
        "duration": 20
      },
      "modifyColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event should be preventable",
        "duration": 21
      },
      "modifyColumn event e.newColumnDef modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event e.newColumnDef modification should apply",
        "duration": 20
      },
      "modifyColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn should be chainable",
        "duration": 21
      }
    },
    "removeColumn": {
      "name": "removeColumn",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 201,
      "type": "testcase",
      "test removeColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn() does nothing",
        "duration": 18
      },
      "test removeColumn(string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn(string)",
        "duration": 24
      },
      "test removeColumn(number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn(number)",
        "duration": 25
      },
      "test removeColumn([number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn([number, number])",
        "duration": 22
      },
      "removeColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event should fire",
        "duration": 22
      },
      "removeColumn event should have column config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event should have column config",
        "duration": 22
      },
      "removeColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event should be preventable",
        "duration": 21
      },
      "removeColumn event e.column modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event e.column modification should apply",
        "duration": 22
      },
      "removeColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn should be chainable",
        "duration": 22
      }
    },
    "moveColumn": {
      "name": "moveColumn",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 326,
      "type": "testcase",
      "test moveColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn() does nothing",
        "duration": 20
      },
      "test moveColumn(name) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(name) does nothing",
        "duration": 23
      },
      "test moveColumn(string, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(string, number)",
        "duration": 26
      },
      "test moveColumn(number, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(number, number)",
        "duration": 23
      },
      "test moveColumn([number, number], number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn([number, number], number)",
        "duration": 22
      },
      "test moveColumn(string, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(string, [number, number])",
        "duration": 22
      },
      "test moveColumn(number, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(number, [number, number])",
        "duration": 21
      },
      "test moveColumn([number, number], [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn([number, number], [number, number])",
        "duration": 22
      },
      "moveColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event should fire",
        "duration": 22
      },
      "moveColumn event should have column and index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event should have column and index",
        "duration": 22
      },
      "moveColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event should be preventable",
        "duration": 21
      },
      "moveColumn event e.column modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event e.column modification should apply",
        "duration": 23
      },
      "moveColumn event e.index modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event e.index modification should apply",
        "duration": 22
      },
      "moveColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn should be chainable",
        "duration": 22
      }
    },
    "addRow": {
      "name": "addRow",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 232,
      "type": "testcase",
      "addRow() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow() should do nothing",
        "duration": 21
      },
      "addRow(data) should create a new Model in the data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data) should create a new Model in the data",
        "duration": 22
      },
      "addRow(data) should fire the data's add event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data) should fire the data's add event",
        "duration": 118
      },
      "addRow(data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data, { sync: true }) should trigger Model sync",
        "duration": 22
      },
      "addRow(data) with autoSync:true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data) with autoSync:true should trigger Model sync",
        "duration": 23
      },
      "addRow(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(...) should be chainable",
        "duration": 22
      }
    },
    "addRows": {
      "name": "addRows",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 149,
      "type": "testcase",
      "addRows() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows() should do nothing",
        "duration": 21
      },
      "addRows([data]) should create a new Model in the data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data]) should create a new Model in the data",
        "duration": 25
      },
      "addRows([data]) should fire the data's add event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data]) should fire the data's add event",
        "duration": 24
      },
      "addRows([data], { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data], { sync: true }) should trigger Model sync",
        "duration": 26
      },
      "addRows([data]) with autoSync:true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data]) with autoSync:true should trigger Model sync",
        "duration": 25
      },
      "addRows(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows(...) should be chainable",
        "duration": 23
      }
    },
    "modifyRow": {
      "name": "modifyRow",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 414,
      "type": "testcase",
      "modifyRow() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow() should do nothing",
        "duration": 23
      },
      "modifyRow(index, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data) should change the Model attributes",
        "duration": 22
      },
      "modifyRow(id, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data) should change the Model attributes",
        "duration": 22
      },
      "modifyRow(clientId, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data) should change the Model attributes",
        "duration": 21
      },
      "modifyRow(model, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data) should change the Model attributes",
        "duration": 23
      },
      "modifyRow(index, data) should fire the model's change event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data) should fire the model's change event",
        "duration": 23
      },
      "modifyRow(id, data) should fire the model's change event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data) should fire the model's change event",
        "duration": 22
      },
      "modifyRow(clientId, data) should fire the model's model event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data) should fire the model's model event",
        "duration": 22
      },
      "modifyRow(model, data) should fire the model's change event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data) should fire the model's change event",
        "duration": 22
      },
      "modifyRow(index, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data, { sync: true }) should trigger Model sync",
        "duration": 22
      },
      "modifyRow(id, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data, { sync: true }) should trigger Model sync",
        "duration": 21
      },
      "modifyRow(clientId, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data, { sync: true }) should trigger Model sync",
        "duration": 21
      },
      "modifyRow(model, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data, { sync: true }) should trigger Model sync",
        "duration": 21
      },
      "modifyRow(index, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data) with autoSync: true should trigger Model sync",
        "duration": 25
      },
      "modifyRow(id, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data) with autoSync: true should trigger Model sync",
        "duration": 22
      },
      "modifyRow(clientId, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data) with autoSync: true should trigger Model sync",
        "duration": 22
      },
      "modifyRow(model, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data) with autoSync: true should trigger Model sync",
        "duration": 22
      },
      "modifyRow(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(...) should be chainable",
        "duration": 22
      }
    },
    "removeRow": {
      "name": "removeRow",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 511,
      "type": "testcase",
      "removeRow() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow() should do nothing",
        "duration": 22
      },
      "removeRow(index) should delete the Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index) should delete the Model",
        "duration": 21
      },
      "removeRow(id) should delete the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id) should delete the Model attributes",
        "duration": 21
      },
      "removeRow(clientId) should delete the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId) should delete the Model attributes",
        "duration": 23
      },
      "removeRow(model) should delete the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model) should delete the Model attributes",
        "duration": 22
      },
      "removeRow(index) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index) should fire the data's remove event",
        "duration": 24
      },
      "removeRow(id, data) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id, data) should fire the data's remove event",
        "duration": 22
      },
      "removeRow(clientId, data) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId, data) should fire the data's remove event",
        "duration": 28
      },
      "removeRow(model, data) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model, data) should fire the data's remove event",
        "duration": 26
      },
      "removeRow(index, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index, { sync: true }) should trigger Model sync",
        "duration": 24
      },
      "removeRow(id, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id, { sync: true }) should trigger Model sync",
        "duration": 23
      },
      "removeRow(clientId, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId, { sync: true }) should trigger Model sync",
        "duration": 25
      },
      "removeRow(model, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model, { sync: true }) should trigger Model sync",
        "duration": 22
      },
      "removeRow(index) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index) with autoSync: true should trigger Model sync",
        "duration": 22
      },
      "removeRow(id) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id) with autoSync: true should trigger Model sync",
        "duration": 77
      },
      "removeRow(clientId) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId) with autoSync: true should trigger Model sync",
        "duration": 55
      },
      "removeRow(model) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model) with autoSync: true should trigger Model sync",
        "duration": 24
      },
      "removeRow(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(...) should be chainable",
        "duration": 22
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:27 PM"
  },
  {
    "name": "DataTable: Message",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 379,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 318,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 25
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 30
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 53
      },
      "test showMessaegs values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessaegs values",
        "duration": 117
      },
      "test set('showMessages')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('showMessages')",
        "duration": 20
      }
    },
    "datatable-message": {
      "name": "datatable-message",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 20,
      "type": "testcase",
      "test showMessage()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessage()",
        "duration": 1
      },
      "test showMessage(string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessage(string)",
        "duration": 1
      },
      "test showMessage(intlString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessage(intlString)",
        "duration": 1
      },
      "test hideMessage()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test hideMessage()",
        "duration": 1
      },
      "adding rows should hide the message": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "adding rows should hide the message",
        "duration": 0
      },
      "removing all rows should show the emptyMessage": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removing all rows should show the emptyMessage",
        "duration": 0
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:28 PM"
  },
  {
    "name": "DataTable: Head",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 303,
    "type": "report",
    "datatable-head": {
      "name": "datatable-head",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 70,
      "type": "testcase",
      "test non-DataTable construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test non-DataTable construction",
        "duration": 3
      }
    },
    "nested headers": {
      "name": "nested headers",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 34,
      "type": "testcase",
      "columns configured with children should result in multiple thead rows": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns configured with children should result in multiple thead rows",
        "duration": 34
      }
    },
    "abbr column config": {
      "name": "abbr column config",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 29,
      "type": "testcase",
      "column abbr should be added to the <th> as attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column abbr should be added to the <th> as attribute",
        "duration": 28
      }
    },
    "className column config": {
      "name": "className column config",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 40,
      "type": "testcase",
      "column className should be added to the <th>'s class attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column className should be added to the <th>'s class attribute",
        "duration": 38
      }
    },
    "_id column config": {
      "name": "_id column config",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 32,
      "type": "testcase",
      "column _id should be added to the <th>'s class attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column _id should be added to the <th>'s class attribute",
        "duration": 29
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 35,
      "type": "testcase",
      "changing columns should rerender headers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changing columns should rerender headers",
        "duration": 34
      }
    },
    "getClassName": {
      "name": "getClassName",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 29,
      "type": "testcase",
      "test standalone getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test standalone getClassName()",
        "duration": 11
      },
      "test host-relayed getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test host-relayed getClassName()",
        "duration": 15
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:29 PM"
  },
  {
    "name": "DataTable: Core",
    "passed": 31,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 34,
    "duration": 1001,
    "type": "report",
    "Class extension": {
      "name": "Class extension",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 108,
      "type": "testcase",
      "testClassExtension": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClassExtension",
        "duration": 43
      }
    },
    "getRecord": {
      "name": "getRecord",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 69,
      "type": "testcase",
      "test getRecord(index)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(index)",
        "duration": 24
      },
      "test getRecord(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(id)",
        "duration": 23
      },
      "test getRecord(clientId)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(clientId)",
        "duration": 22
      }
    },
    "getColumn": {
      "name": "getColumn",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 95,
      "type": "testcase",
      "test getColumn(key)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(key)",
        "duration": 16
      },
      "test getColumn(name)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(name)",
        "duration": 18
      },
      "test getColumn(index)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(index)",
        "duration": 18
      },
      "test getColumn([ index, index ])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn([ index, index ])",
        "duration": 18
      },
      "test getColumn(column)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(column)",
        "duration": 21
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 13,
      "duration": 365,
      "type": "testcase",
      "columns should default from data array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from data array",
        "duration": 20
      },
      "columns should default from data ModelList's model class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from data ModelList's model class",
        "duration": 75
      },
      "columns should default from recordType": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from recordType",
        "duration": 59
      },
      "columns should default from data array after empty instantiation": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "columns should default from data array after empty instantiation"
      },
      "columns should default from data ModelList after empty instantiation": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "columns should default from data ModelList after empty instantiation"
      },
      "columns should default from recordType after empty instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from recordType after empty instantiation",
        "duration": 63
      },
      "string columns should be converted to objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "string columns should be converted to objects",
        "duration": 18
      },
      "test columnset pass through": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test columnset pass through",
        "duration": 18
      },
      "duplicate keys should have unique column ids": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "duplicate keys should have unique column ids",
        "duration": 17
      },
      "child columns should get _parent property pointing to their parent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "child columns should get _parent property pointing to their parent",
        "duration": 20
      },
      "set('columns', VALUE) should update getColumn(NAME) map": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('columns', VALUE) should update getColumn(NAME) map",
        "duration": 18
      },
      "get('columns.KEY') should return column object based on _id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "get('columns.KEY') should return column object based on _id",
        "duration": 18
      },
      "test col.field alias for col.name": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test col.field alias for col.name",
        "duration": 21
      }
    },
    "data attribute": {
      "name": "data attribute",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 215,
      "type": "testcase",
      "test array as data value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test array as data value",
        "duration": 26
      },
      "test ModelList passed as data value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ModelList passed as data value",
        "duration": 20
      },
      "set('data', array) should update the existing ModelList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', array) should update the existing ModelList",
        "duration": 25
      },
      "set('data', modelList) should replace the existing ModelList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', modelList) should replace the existing ModelList",
        "duration": 24
      },
      "set('data', garbage) should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', garbage) should do nothing",
        "duration": 25
      },
      "set('data', modelList) should fire a dataChange": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', modelList) should fire a dataChange",
        "duration": 32
      },
      "test recordset pass through": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test recordset pass through",
        "duration": 37
      }
    },
    "recordType attribute": {
      "name": "recordType attribute",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 5,
      "duration": 119,
      "type": "testcase",
      "test instantiation with recordType: object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test instantiation with recordType: object",
        "duration": 22
      },
      "test instantiation with recordType: array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test instantiation with recordType: array",
        "duration": 21
      },
      "test instantiation with recordType: Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test instantiation with recordType: Model",
        "duration": 23
      },
      "get('recordType') should return the data modelList.model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "get('recordType') should return the data modelList.model",
        "duration": 44
      },
      "recordType should default from keys of first object in data array": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "recordType should default from keys of first object in data array"
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:31 PM"
  },
  {
    "name": "DataTable: Column Widths",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 831,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 161,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 26
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 25
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 47
      }
    },
    "render": {
      "name": "render",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 599,
      "type": "testcase",
      "colgroup should be added for all DataTables": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "colgroup should be added for all DataTables",
        "duration": 301
      },
      "col width should be set from configuration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "col width should be set from configuration",
        "duration": 127
      },
      "column changes should propagate to the <col>s": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column changes should propagate to the <col>s",
        "duration": 136
      }
    },
    "setColumnWidth": {
      "name": "setColumnWidth",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 40,
      "type": "testcase",
      "test setColumnWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test setColumnWidth",
        "duration": 19
      },
      "setColumnWidth should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setColumnWidth should be chainable",
        "duration": 21
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:33 PM"
  },
  {
    "name": "DataTable: Body",
    "passed": 31,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 34,
    "duration": 1236,
    "type": "report",
    "datatable-body": {
      "name": "datatable-body",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 62,
      "type": "testcase",
      "test non-DataTable construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test non-DataTable construction",
        "duration": 7
      }
    },
    "getCell": {
      "name": "getCell",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 383,
      "type": "testcase",
      "getCell([row, col]) should return <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell([row, col]) should return <td>",
        "duration": 29
      },
      "getCell(tdNode) should return <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(tdNode) should return <td>",
        "duration": 45
      },
      "getCell(childNode) should return <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(childNode) should return <td>",
        "duration": 36
      },
      "getCell([row, col], shiftString) should return relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell([row, col], shiftString) should return relative <td>",
        "duration": 31
      },
      "getCell(tdNode, shiftString) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(tdNode, shiftString) should return the relative <td>",
        "duration": 34
      },
      "getCell(childNode, shiftString) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(childNode, shiftString) should return the relative <td>",
        "duration": 32
      },
      "getCell([row, col], shiftArray) should return relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell([row, col], shiftArray) should return relative <td>",
        "duration": 93
      },
      "getCell(tdNode, shiftArray) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(tdNode, shiftArray) should return the relative <td>",
        "duration": 33
      },
      "getCell(childNode, shiftArray) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(childNode, shiftArray) should return the relative <td>",
        "duration": 29
      }
    },
    "getRow": {
      "name": "getRow",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 103,
      "type": "testcase",
      "getRow(index) should return <tr>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRow(index) should return <tr>",
        "duration": 32
      },
      "getRow(model) should return the <tr>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRow(model) should return the <tr>",
        "duration": 34
      },
      "getRow(model.clientId) should return the <tr>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRow(model.clientId) should return the <tr>",
        "duration": 36
      }
    },
    "getRecord": {
      "name": "getRecord",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 7,
      "duration": 155,
      "type": "testcase",
      "getRecord(node) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(node) should return the corresponding Model",
        "duration": 32
      },
      "getRecord(childNode) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(childNode) should return the corresponding Model",
        "duration": 34
      },
      "getRecord(rowId) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(rowId) should return the corresponding Model",
        "duration": 35
      },
      "getRecord(childElId) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(childElId) should return the corresponding Model",
        "duration": 35
      },
      "getRecord(index) should return modelList.item(index)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getRecord(index) should return modelList.item(index)"
      },
      "getRecord(model.id) should return the corresponding Model": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getRecord(model.id) should return the corresponding Model"
      },
      "getRecord(model.clientId) should return the corresponding Model": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getRecord(model.clientId) should return the corresponding Model"
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 215,
      "type": "testcase",
      "formatter adding to o.className should add to cell classes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "formatter adding to o.className should add to cell classes",
        "duration": 31
      },
      "formatter adding to o.rowClass should add to row classes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "formatter adding to o.rowClass should add to row classes",
        "duration": 36
      },
      "nodeFormatter should be able to add classes to o.cell": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "nodeFormatter should be able to add classes to o.cell",
        "duration": 28
      },
      "nodeFormatter should be able to add row classes from o.cell.ancestor()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "nodeFormatter should be able to add row classes from o.cell.ancestor()",
        "duration": 35
      },
      "emptyCellValue should apply for missing, null, or empty string values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "emptyCellValue should apply for missing, null, or empty string values",
        "duration": 36
      },
      "changing columns config propagates to the UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changing columns config propagates to the UI",
        "duration": 39
      }
    },
    "getClassName": {
      "name": "getClassName",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 30,
      "type": "testcase",
      "test standalone getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test standalone getClassName()",
        "duration": 12
      },
      "test host-relayed getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test host-relayed getClassName()",
        "duration": 16
      }
    },
    "modelList changes": {
      "name": "modelList changes",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 254,
      "type": "testcase",
      "replacing the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replacing the modelList should update UI",
        "duration": 40
      },
      "changes to the modelList after replacing it should update the UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changes to the modelList after replacing it should update the UI",
        "duration": 44
      },
      "reset()ing the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "reset()ing the modelList should update UI",
        "duration": 32
      },
      "adding Models to the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "adding Models to the modelList should update UI",
        "duration": 33
      },
      "removing Models from the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removing Models from the modelList should update UI",
        "duration": 65
      },
      "changing Model attributes should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changing Model attributes should update UI",
        "duration": 30
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:35 PM"
  },
  {
    "name": "DataTable: Base",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 961,
    "type": "report",
    "DataTable.Base tests": {
      "name": "DataTable.Base tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 200,
      "type": "testcase",
      "DataTable.Base should implement Core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable.Base should implement Core",
        "duration": 25
      },
      "DataTable.Base should set default view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable.Base should set default view",
        "duration": 19
      },
      "DataTable.Base should preserve properties on the namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable.Base should preserve properties on the namespace",
        "duration": 94
      }
    },
    "DataTable tests": {
      "name": "DataTable tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 90,
      "type": "testcase",
      "DataTable should implement Core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable should implement Core",
        "duration": 28
      },
      "DataTable should be a subclass of Y.DataTable.Base": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable should be a subclass of Y.DataTable.Base",
        "duration": 17
      },
      "DataTable should default view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable should default view",
        "duration": 25
      }
    },
    "DataTable UI tests": {
      "name": "DataTable UI tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 179,
      "type": "testcase",
      "set('data', modelList) should update the table": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', modelList) should update the table",
        "duration": 94
      },
      "set(<core attr>, newVal) should relay to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set(<core attr>, newVal) should relay to view",
        "duration": 67
      }
    },
    "delegate": {
      "name": "delegate",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 79,
      "type": "testcase",
      "test table.delegate() pases through to node.delegate()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test table.delegate() pases through to node.delegate()",
        "duration": 74
      }
    },
    "getCell": {
      "name": "getCell",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 34,
      "type": "testcase",
      "test getCell() passes through to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getCell() passes through to view",
        "duration": 31
      }
    },
    "getRow": {
      "name": "getRow",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 36,
      "type": "testcase",
      "test getRow() passes through to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRow() passes through to view",
        "duration": 33
      }
    },
    "getRecord": {
      "name": "getRecord",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 46,
      "type": "testcase",
      "test getRecord(unknown) passes through to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(unknown) passes through to view",
        "duration": 33
      }
    },
    "render": {
      "name": "render",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 203,
      "type": "testcase",
      "render() should fire the renderView event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire the renderView event",
        "duration": 100
      },
      "render() should fire renderView if view is set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire renderView if view is set",
        "duration": 40
      },
      "render() should bubble renderX events from view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should bubble renderX events from view",
        "duration": 38
      }
    },
    "syncUI": {
      "name": "syncUI",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 38,
      "type": "testcase",
      "syncUI should call render() on the view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "syncUI should call render() on the view",
        "duration": 34
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:37 PM"
  },
  {
    "name": "Widget: Stack",
    "passed": 3,
    "failed": 1,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 265,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 0,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 52,
      "type": "testcase",
      "WidgetStack should add `shim` and `zIndex` attributes": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "WidgetStack should add `shim` and `zIndex` attributes",
        "duration": 45
      }
    },
    "Attributes and Properties": {
      "name": "Attributes and Properties",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 135,
      "type": "testcase",
      "zIndex of \"auto\" parsed from a node should not override the default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "zIndex of \"auto\" parsed from a node should not override the default",
        "duration": 53
      },
      "srcNode in the document with position should have its zIndex parsed from the DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "srcNode in the document with position should have its zIndex parsed from the DOM",
        "duration": 41
      },
      "A user specified zIndex should override the parsed zIndex value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A user specified zIndex should override the parsed zIndex value",
        "duration": 28
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:39 PM"
  },
  {
    "name": "Widget: ParentChild",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 17,
    "duration": 2854,
    "type": "report",
    "Widget Parent API, Widget Child API Tests": {
      "name": "Widget Parent API, Widget Child API Tests",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 2831,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 249
      },
      "testInsert": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInsert",
        "duration": 172
      },
      "testPreRenderedChildWithEmptyParent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPreRenderedChildWithEmptyParent",
        "duration": 46
      },
      "testAddOutOfOrderPreRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddOutOfOrderPreRender",
        "duration": 83
      },
      "testAddOutOfOrderPostRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddOutOfOrderPostRender",
        "duration": 191
      },
      "testRemove": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemove",
        "duration": 101
      },
      "testRemoveSelectedChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSelectedChild",
        "duration": 104
      },
      "testRemoveFocusedChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveFocusedChild",
        "duration": 102
      },
      "testSingleSelection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSelection",
        "duration": 292
      },
      "testMultipleSelection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultipleSelection",
        "duration": 275
      },
      "testAncestorNavigation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAncestorNavigation",
        "duration": 153
      },
      "testSiblingNavigation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSiblingNavigation",
        "duration": 206
      },
      "testActiveDescendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testActiveDescendant",
        "duration": 184
      },
      "testFullDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFullDestroy",
        "duration": 135
      },
      "testRemoveChildOnDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveChildOnDestroy",
        "duration": 128
      },
      "testUIEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUIEvents",
        "duration": 85
      },
      "testCustomAsyncRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomAsyncRender",
        "duration": 117
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:42 PM"
  },
  {
    "name": "TabView",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 222,
    "type": "report",
    "Y.TabviewBase": {
      "name": "Y.TabviewBase",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 68,
      "type": "testcase",
      "should create from existing markup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create from existing markup",
        "duration": 5
      }
    },
    "Y.TabView": {
      "name": "Y.TabView",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 125,
      "type": "testcase",
      "should return the selected tab": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the selected tab",
        "duration": 1
      },
      "should update the selected tab": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should update the selected tab",
        "duration": 5
      },
      "should fire selection change": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire selection change",
        "duration": 4
      },
      "should add the new tab to the tabview": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the new tab to the tabview",
        "duration": 41
      },
      "should remove the selected tab": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the selected tab",
        "duration": 12
      },
      "should fire selectionChange event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire selectionChange event",
        "duration": 6
      },
      "should set the label": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the label",
        "duration": 21
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:43 PM"
  },
  {
    "name": "Widget: Position",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 213,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 187,
      "type": "testcase",
      "WidgetPosition should add `x`, `y`, and `xy` attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetPosition should add `x`, `y`, and `xy` attributes",
        "duration": 85
      },
      "`move()` should move the widget to the new `xy`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`move()` should move the widget to the new `xy`",
        "duration": 37
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:44 PM"
  },
  {
    "name": "Widget",
    "passed": 149,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 149,
    "duration": 4737,
    "type": "report",
    "Widget Core Tests": {
      "name": "Widget Core Tests",
      "passed": 37,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 37,
      "duration": 1233,
      "type": "testcase",
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 15
      },
      "testInitState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitState",
        "duration": 137
      },
      "testNonRenderedStateUpdate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderedStateUpdate",
        "duration": 54
      },
      "testValidationReadonlyWriteonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidationReadonlyWriteonce",
        "duration": 21
      },
      "testStaticClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticClassNameGeneration",
        "duration": 0
      },
      "testInstanceClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstanceClassNameGeneration",
        "duration": 12
      },
      "testCssPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCssPrefix",
        "duration": 12
      },
      "testRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRender",
        "duration": 21
      },
      "testRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderTo",
        "duration": 18
      },
      "testBaseClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClassNames",
        "duration": 22
      },
      "testHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeight",
        "duration": 21
      },
      "testWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidth",
        "duration": 20
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 20
      },
      "testDisableEnable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisableEnable",
        "duration": 20
      },
      "testFocusBlur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusBlur",
        "duration": 24
      },
      "testTabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTabIndex",
        "duration": 20
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 21
      },
      "testVisible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testVisible",
        "duration": 23
      },
      "testShowHide": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShowHide",
        "duration": 21
      },
      "testBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBox",
        "duration": 21
      },
      "testContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBox",
        "duration": 82
      },
      "testBoundingBoxContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBox",
        "duration": 19
      },
      "testBoundingBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxRenderTo",
        "duration": 20
      },
      "testContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBoxRenderTo",
        "duration": 21
      },
      "testBoundingBoxContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBoxRenderTo",
        "duration": 21
      },
      "testSrcNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSrcNode",
        "duration": 21
      },
      "testGetByNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNode",
        "duration": 52
      },
      "testGetByNodeChangedId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNodeChangedId",
        "duration": 25
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 16
      },
      "testLoadingMarker": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLoadingMarker",
        "duration": 22
      },
      "testFocusOnChildFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnChildFocus",
        "duration": 37
      },
      "testFocusOnBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnBoundingBox",
        "duration": 35
      },
      "testMultiWidgetFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiWidgetFocus",
        "duration": 76
      },
      "testWidgetOnFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetOnFocus",
        "duration": 27
      },
      "testDetachFocusOnLastWidgetDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachFocusOnLastWidgetDestroy",
        "duration": 38
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 13
      },
      "testDeprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeprecated",
        "duration": 14
      }
    },
    "MyWidget Core Tests": {
      "name": "MyWidget Core Tests",
      "passed": 37,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 37,
      "duration": 1083,
      "type": "testcase",
      "testLoadingMarker": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLoadingMarker",
        "duration": 19
      },
      "testBaseClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClassNames",
        "duration": 19
      },
      "testCssPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCssPrefix",
        "duration": 25
      },
      "testInstanceClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstanceClassNameGeneration",
        "duration": 17
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 12
      },
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 17
      },
      "testInitState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitState",
        "duration": 13
      },
      "testNonRenderedStateUpdate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderedStateUpdate",
        "duration": 15
      },
      "testValidationReadonlyWriteonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidationReadonlyWriteonce",
        "duration": 39
      },
      "testStaticClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticClassNameGeneration",
        "duration": 0
      },
      "testRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRender",
        "duration": 30
      },
      "testRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderTo",
        "duration": 21
      },
      "testHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeight",
        "duration": 27
      },
      "testWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidth",
        "duration": 20
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 19
      },
      "testDisableEnable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisableEnable",
        "duration": 20
      },
      "testFocusBlur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusBlur",
        "duration": 20
      },
      "testTabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTabIndex",
        "duration": 21
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 20
      },
      "testVisible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testVisible",
        "duration": 25
      },
      "testShowHide": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShowHide",
        "duration": 22
      },
      "testBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBox",
        "duration": 21
      },
      "testContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBox",
        "duration": 23
      },
      "testBoundingBoxContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBox",
        "duration": 20
      },
      "testBoundingBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxRenderTo",
        "duration": 19
      },
      "testContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBoxRenderTo",
        "duration": 33
      },
      "testBoundingBoxContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBoxRenderTo",
        "duration": 33
      },
      "testSrcNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSrcNode",
        "duration": 25
      },
      "testGetByNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNode",
        "duration": 119
      },
      "testGetByNodeChangedId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNodeChangedId",
        "duration": 29
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 16
      },
      "testFocusOnChildFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnChildFocus",
        "duration": 31
      },
      "testFocusOnBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnBoundingBox",
        "duration": 29
      },
      "testMultiWidgetFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiWidgetFocus",
        "duration": 73
      },
      "testWidgetOnFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetOnFocus",
        "duration": 27
      },
      "testDetachFocusOnLastWidgetDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachFocusOnLastWidgetDestroy",
        "duration": 43
      },
      "testDeprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeprecated",
        "duration": 13
      }
    },
    "MySingleBoxWidget Core Tests": {
      "name": "MySingleBoxWidget Core Tests",
      "passed": 33,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 33,
      "duration": 670,
      "type": "testcase",
      "testNonRenderedStateUpdate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderedStateUpdate",
        "duration": 13
      },
      "testCssPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCssPrefix",
        "duration": 9
      },
      "testInstanceClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstanceClassNameGeneration",
        "duration": 8
      },
      "testLoadingMarker": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLoadingMarker",
        "duration": 19
      },
      "testBoundingBoxContentBoxAreTheSame": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBoxAreTheSame",
        "duration": 16
      },
      "testBaseClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClassNames",
        "duration": 15
      },
      "testRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRender",
        "duration": 16
      },
      "testRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderTo",
        "duration": 15
      },
      "testBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBox",
        "duration": 14
      },
      "testBoundingBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxRenderTo",
        "duration": 16
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 11
      },
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 8
      },
      "testInitState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitState",
        "duration": 10
      },
      "testValidationReadonlyWriteonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidationReadonlyWriteonce",
        "duration": 23
      },
      "testStaticClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticClassNameGeneration",
        "duration": 0
      },
      "testHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeight",
        "duration": 15
      },
      "testWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidth",
        "duration": 16
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 15
      },
      "testDisableEnable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisableEnable",
        "duration": 15
      },
      "testFocusBlur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusBlur",
        "duration": 17
      },
      "testTabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTabIndex",
        "duration": 16
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 16
      },
      "testVisible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testVisible",
        "duration": 18
      },
      "testShowHide": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShowHide",
        "duration": 18
      },
      "testGetByNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNode",
        "duration": 47
      },
      "testGetByNodeChangedId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNodeChangedId",
        "duration": 21
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 10
      },
      "testFocusOnChildFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnChildFocus",
        "duration": 24
      },
      "testFocusOnBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnBoundingBox",
        "duration": 17
      },
      "testMultiWidgetFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiWidgetFocus",
        "duration": 64
      },
      "testWidgetOnFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetOnFocus",
        "duration": 19
      },
      "testDetachFocusOnLastWidgetDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachFocusOnLastWidgetDestroy",
        "duration": 31
      },
      "testDeprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeprecated",
        "duration": 9
      }
    },
    "Widget Events": {
      "name": "Widget Events",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 156,
      "type": "testcase",
      "testLifecycleEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleEvents",
        "duration": 21
      },
      "testLifecycleFireOnceEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleFireOnceEvents",
        "duration": 24
      },
      "testAttributeChangeEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAttributeChangeEvents",
        "duration": 40
      },
      "testContentUpdateEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentUpdateEvent",
        "duration": 15
      },
      "testHomogenousBubble": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHomogenousBubble",
        "duration": 46
      }
    },
    "MyWidget Event Tests": {
      "name": "MyWidget Event Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 227,
      "type": "testcase",
      "testLifecycleEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleEvents",
        "duration": 21
      },
      "testLifecycleFireOnceEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleFireOnceEvents",
        "duration": 29
      },
      "testAttributeChangeEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAttributeChangeEvents",
        "duration": 109
      },
      "testContentUpdateEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentUpdateEvent",
        "duration": 14
      },
      "testHomogenousBubble": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHomogenousBubble",
        "duration": 40
      }
    },
    "Widget Lifecycle": {
      "name": "Widget Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 45,
      "type": "testcase",
      "testNonRenderPhases": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderPhases",
        "duration": 16
      },
      "testAllPhases": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAllPhases",
        "duration": 25
      }
    },
    "Custom Widget": {
      "name": "Custom Widget",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 289,
      "type": "testcase",
      "testDefaultParentNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultParentNode",
        "duration": 26
      },
      "testDefaultParentNodeUsingRenderAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultParentNodeUsingRenderAttr",
        "duration": 28
      },
      "testBoundingBoxTemplate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxTemplate",
        "duration": 25
      },
      "testContentBoxTemplate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBoxTemplate",
        "duration": 27
      },
      "testModifyAttr-Visible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttr-Visible",
        "duration": 24
      },
      "testModifyAttr-Strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttr-Strings",
        "duration": 24
      },
      "testNewAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNewAttr",
        "duration": 19
      },
      "testHTMLParser": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParser",
        "duration": 14
      },
      "testHTMLParserWithContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParserWithContentBox",
        "duration": 20
      },
      "testHTMLParserWithNoSrcNodeOrContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParserWithNoSrcNodeOrContentBox",
        "duration": 33
      },
      "testHTMLParserWithEmptyConfig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParserWithEmptyConfig",
        "duration": 23
      },
      "testValueFnNotCalledWhenHTMLParserValueFound": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValueFnNotCalledWhenHTMLParserValueFound",
        "duration": 14
      }
    },
    "getSkinName": {
      "name": "getSkinName",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 69,
      "type": "testcase",
      "getSkinName should return null if not rendered": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return null if not rendered",
        "duration": 18
      },
      "getSkinName should return name from BB if available": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return name from BB if available",
        "duration": 9
      },
      "getSkinName should return name from body or null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return name from body or null",
        "duration": 20
      },
      "getSkinName should return name from ancestor if both ancestor and body are classed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return name from ancestor if both ancestor and body are classed",
        "duration": 18
      }
    },
    "destroy": {
      "name": "destroy",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 102,
      "type": "testcase",
      "testRenderedDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderedDestroy",
        "duration": 20
      },
      "testRenderedDeepDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderedDeepDestroy",
        "duration": 25
      },
      "testUnrenderedDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnrenderedDestroy",
        "duration": 12
      },
      "testSingleBoxDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleBoxDestroy",
        "duration": 15
      },
      "testSingleBoxDeepDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleBoxDeepDestroy",
        "duration": 19
      }
    },
    "UI Events": {
      "name": "UI Events",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 343,
      "type": "testcase",
      "testSingleSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSimple",
        "duration": 26
      },
      "testSingleComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleComplex",
        "duration": 43
      },
      "testNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNested",
        "duration": 63
      },
      "testMultipleInstances": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultipleInstances",
        "duration": 176
      },
      "testPublishDefaultFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPublishDefaultFn",
        "duration": 23
      }
    },
    "clone": {
      "name": "clone",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 494,
      "type": "testcase",
      "testWidgetClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetClone",
        "duration": 159
      },
      "testWidgetHashClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetHashClone",
        "duration": 184
      },
      "testBaseClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClone",
        "duration": 59
      },
      "testBaseHashClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseHashClone",
        "duration": 58
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:50 PM"
  },
  {
    "name": "Y.Dial",
    "passed": 41,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 41,
    "duration": 5336,
    "type": "report",
    "Simple dial test": {
      "name": "Simple dial test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 30,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 19
      }
    },
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 1586,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 71
      },
      "test render(selector)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render(selector)",
        "duration": 290
      },
      "test render( node )": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render( node )",
        "duration": 291
      },
      "test render: selector attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: selector attrib in constructor",
        "duration": 279
      },
      "test render: node attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: node attrib in constructor",
        "duration": 300
      },
      "test render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render off DOM",
        "duration": 133
      },
      "test destroy() before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() before render",
        "duration": 20
      },
      "test destroy() after render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render off DOM",
        "duration": 81
      },
      "test destroy() after render to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render to DOM",
        "duration": 71
      }
    },
    "API": {
      "name": "API",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 442,
      "type": "testcase",
      "test getting a value from an angle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getting a value from an angle",
        "duration": 88
      },
      "test get('value')) and set('value', v) before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test get('value')) and set('value', v) before render",
        "duration": 18
      },
      "test get('value')) and set('value', v) after render() to hidden container": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test get('value')) and set('value', v) after render() to hidden container",
        "duration": 75
      },
      "test get('value')) and set('value', v) after render() to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test get('value')) and set('value', v) after render() to DOM",
        "duration": 86
      },
      "set('value', v) then render() should position _handleNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('value', v) then render() should position _handleNode",
        "duration": 75
      },
      "set('value', v) after render() should move the _handleNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('value', v) after render() should move the _handleNode",
        "duration": 74
      }
    },
    "Attributes": {
      "name": "Attributes",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 419,
      "type": "testcase",
      "test diameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test diameter",
        "duration": 77
      },
      "test handleDiameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test handleDiameter",
        "duration": 73
      },
      "test centerButtonDiameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test centerButtonDiameter",
        "duration": 75
      },
      "test handleDistance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test handleDistance",
        "duration": 74
      },
      "test increments and min max": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test increments and min max",
        "duration": 5
      },
      "test min, max, resetDial, incrMinor, decrMinor, incrMajor, decrMajor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test min, max, resetDial, incrMinor, decrMinor, incrMajor, decrMajor",
        "duration": 90
      },
      "test max": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test max",
        "duration": 9
      },
      "test value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test value",
        "duration": 5
      }
    },
    "String Changes After Render": {
      "name": "String Changes After Render",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 84,
      "type": "testcase",
      "test changing strings after rendering dial": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test changing strings after rendering dial",
        "duration": 71
      }
    },
    "International Strings": {
      "name": "International Strings",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 161,
      "type": "testcase",
      "test international strings from lang files": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test international strings from lang files",
        "duration": 152
      }
    },
    "Change Value by mousedown": {
      "name": "Change Value by mousedown",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 2255,
      "type": "testcase",
      "test md00 centerButton mousedown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md00 centerButton mousedown",
        "duration": 83
      },
      "test md01 min:0 max:100 -- drag past max\/max, then click 11 or 1 o'clock.": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md01 min:0 max:100 -- drag past max\/max, then click 11 or 1 o'clock.",
        "duration": 111
      },
      "test md02 mousedown Range = one revolution. Not at North": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md02 mousedown Range = one revolution. Not at North",
        "duration": 97
      },
      "test md03  min:0 max:100 -- mousedown on and off North. Range = one revolution": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md03  min:0 max:100 -- mousedown on and off North. Range = one revolution",
        "duration": 103
      },
      "test md04 min: 0, max: 200 -- drag past max\/max, then click 11 or 1 o'clock.": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md04 min: 0, max: 200 -- drag past max\/max, then click 11 or 1 o'clock.",
        "duration": 124
      },
      "test md05 min: 0, max: 200 -- click through two revolutions CW": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md05 min: 0, max: 200 -- click through two revolutions CW",
        "duration": 132
      },
      "test md06 min: -35, max: 35 -- drag past max\/max, then click in\/out of range also #2530597.": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md06 min: -35, max: 35 -- drag past max\/max, then click in\/out of range also #2530597.",
        "duration": 383
      },
      "test md07 min: 10, max: 25 -- mousedown text min max and opposite mid angle ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md07 min: 10, max: 25 -- mousedown text min max and opposite mid angle ",
        "duration": 82
      },
      "test md08 min: 75, max: 90 -- mousedown test min max and opposite mid angle ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md08 min: 75, max: 90 -- mousedown test min max and opposite mid angle ",
        "duration": 275
      },
      "test md09 min: 5, max: 80 -- mousedown text min max and opposite mid angle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md09 min: 5, max: 80 -- mousedown text min max and opposite mid angle",
        "duration": 86
      },
      "test md10 drag CW past max, then click 11 O'clock -- min: 0, max: 100": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md10 drag CW past max, then click 11 O'clock -- min: 0, max: 100",
        "duration": 232
      },
      "test md11 drag CCW past min, then click 1 O'clock -- min: 0, max: 100": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md11 drag CCW past min, then click 1 O'clock -- min: 0, max: 100",
        "duration": 72
      },
      "test md12 instantiate dial, increase margin, then click ring": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md12 instantiate dial, increase margin, then click ring",
        "duration": 343
      },
      "test md13 go past max more than maxTimesWrapped. ratchet to maxTimesWrapped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md13 go past max more than maxTimesWrapped. ratchet to maxTimesWrapped",
        "duration": 72
      }
    },
    "Keyboard value changes": {
      "name": "Keyboard value changes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 252,
      "type": "testcase",
      "test changing dial value by keyboard": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test changing dial value by keyboard",
        "duration": 239
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:56 PM"
  },
  {
    "name": "Highlight",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 485,
    "type": "report",
    "API": {
      "name": "API",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 418,
      "type": "testcase",
      "all() should highlight all occurrences of needles in haystack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should highlight all occurrences of needles in haystack",
        "duration": 1
      },
      "all() should escape HTML characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should escape HTML characters",
        "duration": 1
      },
      "all() should not highlight matches inside HTML entities": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should not highlight matches inside HTML entities",
        "duration": 1
      },
      "all() should highlight complete HTML entities when part of a match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should highlight complete HTML entities when part of a match",
        "duration": 1
      },
      "all() should be case-insensitive by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should be case-insensitive by default",
        "duration": 1
      },
      "all() should support a caseSensitive option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should support a caseSensitive option",
        "duration": 1
      },
      "all() should support a startsWith option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should support a startsWith option",
        "duration": 2
      },
      "all() should support caseSensitive and startsWith together": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should support caseSensitive and startsWith together",
        "duration": 1
      },
      "all() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should not attempt to highlight empty needles",
        "duration": 1
      },
      "allCase() should be a shortcut for case-sensitive all()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "allCase() should be a shortcut for case-sensitive all()",
        "duration": 1
      },
      "allFold() should be an accent-folding variant of all()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "allFold() should be an accent-folding variant of all()",
        "duration": 4
      },
      "allFold() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "allFold() should not attempt to highlight empty needles",
        "duration": 3
      },
      "start() should be a shortcut for all() with startsWith option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "start() should be a shortcut for all() with startsWith option",
        "duration": 1
      },
      "startCase() should be a shortcut for caseSensitive + startsWith all()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "startCase() should be a shortcut for caseSensitive + startsWith all()",
        "duration": 1
      },
      "startFold() should be an accent-folding variant of start()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "startFold() should be an accent-folding variant of start()",
        "duration": 4
      },
      "words() should highlight complete words": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should highlight complete words",
        "duration": 3
      },
      "words() should escape HTML characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should escape HTML characters",
        "duration": 2
      },
      "words() should not highlight matches inside HTML entities": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should not highlight matches inside HTML entities",
        "duration": 2
      },
      "words() should be case-insensitive by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should be case-insensitive by default",
        "duration": 1
      },
      "words() should support a caseSensitive option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should support a caseSensitive option",
        "duration": 3
      },
      "words() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should not attempt to highlight empty needles",
        "duration": 2
      },
      "wordsCase() should be a shortcut for case-sensitive words()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "wordsCase() should be a shortcut for case-sensitive words()",
        "duration": 2
      },
      "wordsFold() should be an accent-folding variant of words()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "wordsFold() should be an accent-folding variant of words()",
        "duration": 12
      },
      "wordsFold() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "wordsFold() should not attempt to highlight empty needles",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:58 PM"
  },
  {
    "name": "Widget: Position Align",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 284,
    "type": "report",
    "Methods": {
      "name": "Methods",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 179,
      "type": "testcase",
      "align() with no arguments should not set the `align` Attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with no arguments should not set the `align` Attribute",
        "duration": 27
      },
      "align() with no arguments should call `_syncUIPosAlign()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with no arguments should call `_syncUIPosAlign()",
        "duration": 17
      },
      "align() with arguments should set the `align` Attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with arguments should set the `align` Attribute",
        "duration": 18
      },
      "align() with invalid points Array should throw an error after render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with invalid points Array should throw an error after render",
        "duration": 57
      },
      "align() should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() should be chainable",
        "duration": 15
      },
      "centered() should set the `align` Attribute with center `points`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "centered() should set the `align` Attribute with center `points`",
        "duration": 13
      },
      "centered() should accept a `node` argument and set that as the `align` Node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "centered() should accept a `node` argument and set that as the `align` Node",
        "duration": 14
      },
      "centered() should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "centered() should be chainable",
        "duration": 18
      }
    },
    "timestamp": "Friday, September 28, 2012 3:22:59 PM"
  },
  {
    "name": "Custom Event: AOP",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 5,
    "total": 23,
    "duration": 168,
    "type": "report",
    "Y.Do": {
      "name": "Y.Do",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 18,
      "duration": 118,
      "type": "testcase",
      "test before": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test before",
        "duration": 1
      },
      "test after": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test after",
        "duration": 1
      },
      "test multiple subscribers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test multiple subscribers",
        "duration": 1
      },
      "test multiple methods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test multiple methods",
        "duration": 1
      },
      "test detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test detach",
        "duration": 1
      },
      "test detach multiple methods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test detach multiple methods",
        "duration": 1
      },
      "test context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test context",
        "duration": 1
      },
      "test additional args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test additional args",
        "duration": 1
      },
      "test altered args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test altered args",
        "duration": 2
      },
      "test chained altered args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test chained altered args",
        "duration": 1
      },
      "test altered return": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test altered return",
        "duration": 1
      },
      "test chained altered return": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test chained altered return",
        "duration": 1
      },
      "test originalRetVal not overwritten by nested call": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test originalRetVal not overwritten by nested call"
      },
      "test halt before": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test halt before",
        "duration": 2
      },
      "test halt after": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test halt after",
        "duration": 2
      },
      "test prevent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test prevent",
        "duration": 1
      },
      "test before\/after with falsy context binds args": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test before\/after with falsy context binds args"
      },
      "test ET altered return": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ET altered return",
        "duration": 1
      }
    },
    "EventTarget on\/before\/after": {
      "name": "EventTarget on\/before\/after",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 5,
      "duration": 16,
      "type": "testcase",
      "test target.on(fn, host, methodName)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(fn, host, methodName)",
        "duration": 1
      },
      "test target.on(fn, host, methodName, context)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(fn, host, methodName, context)",
        "duration": 1
      },
      "test target.on(fn, host, noSuchMethod)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on(fn, host, noSuchMethod)"
      },
      "test target.on([fnA, fnB, fnC], host, noSuchMethod)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on([fnA, fnB, fnC], host, noSuchMethod)"
      },
      "test target.before() is an alias for target.on()": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.before() is an alias for target.on()"
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:00 PM"
  },
  {
    "name": "Custom Event: Complex",
    "passed": 55,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 56,
    "duration": 359,
    "type": "report",
    "Custom Event: Complex": {
      "name": "Custom Event: Complex",
      "passed": 28,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 29,
      "duration": 218,
      "type": "testsuite",
      "Custom Event Complex": {
        "name": "Custom Event Complex",
        "passed": 28,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 29,
        "duration": 157,
        "type": "testcase",
        "testAugment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAugment",
          "duration": 14
        },
        "testExtend": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testExtend",
          "duration": 2
        },
        "testPrefix": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPrefix",
          "duration": 2
        },
        "testDetachKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDetachKey",
          "duration": 2
        },
        "testDetachAllByKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDetachAllByKey",
          "duration": 2
        },
        "testChain": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testChain",
          "duration": 16
        },
        "testObjType": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testObjType",
          "duration": 1
        },
        "testBubble": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testBubble",
          "duration": 1
        },
        "testPreventFnOnce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventFnOnce",
          "duration": 1
        },
        "testPreventFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventFromBubbleTarget",
          "duration": 1
        },
        "testPreventedFnOnceFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventedFnOnceFromBubbleTarget",
          "duration": 2
        },
        "testStopFnOnce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStopFnOnce",
          "duration": 1
        },
        "testStopFnFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStopFnFromBubbleTarget",
          "duration": 6
        },
        "testStopFnOnceFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStopFnOnceFromBubbleTarget",
          "duration": 5
        },
        "testDetachHandle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDetachHandle",
          "duration": 3
        },
        "testBroadcast": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testBroadcast",
          "duration": 10
        },
        "test_fire_once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_fire_once",
          "duration": 2
        },
        "test_async_fireonce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_async_fireonce",
          "duration": 0
        },
        "testAlternativeSequencePost300GA": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAlternativeSequencePost300GA",
          "duration": 2
        },
        "testStarSubscriber": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStarSubscriber",
          "duration": 2
        },
        "testPreventBubble": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventBubble",
          "duration": 2
        },
        "test_listen_once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_listen_once",
          "duration": 2
        },
        "test_array_type_param": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_array_type_param",
          "duration": 1
        },
        "test_bubble_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubble_config",
          "duration": 1
        },
        "test_onceAfter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_onceAfter",
          "duration": 2
        },
        "test_multiple_object_publish": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multiple_object_publish",
          "duration": 1
        },
        "testIndividualCustomEventMonitoring": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testIndividualCustomEventMonitoring",
          "duration": 4
        },
        "ignore: Does not work currently due to infinite recursion - testEventTargetMonitoring": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": " Does not work currently due to infinite recursion - testEventTargetMonitoring"
        },
        "test_node_publish": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_node_publish",
          "duration": 6
        }
      }
    },
    "Firing Sequence": {
      "name": "Firing Sequence",
      "passed": 27,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 27,
      "duration": 115,
      "type": "testsuite",
      "Single Event Sequence": {
        "name": "Single Event Sequence",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 26,
        "type": "testcase",
        "test_seqSimple": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqSimple",
          "duration": 1
        },
        "test_seqDefaultFnComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultFnComplete",
          "duration": 1
        },
        "test_seqDefaultFnPrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultFnPrevented",
          "duration": 1
        },
        "test_seqPreventedFnComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqPreventedFnComplete",
          "duration": 2
        },
        "test_seqPreventedFnPrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqPreventedFnPrevented",
          "duration": 1
        },
        "test_seqDefaultAndPreventedFnComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultAndPreventedFnComplete",
          "duration": 1
        },
        "test_seqDefaultAndPreventedFnPrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultAndPreventedFnPrevented",
          "duration": 1
        }
      },
      "Broadcast With Facade": {
        "name": "Broadcast With Facade",
        "passed": 13,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 13,
        "duration": 48,
        "type": "testcase",
        "test_broadcast_0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_0",
          "duration": 2
        },
        "test_broadcast_1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1",
          "duration": 1
        },
        "test_broadcast_2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2",
          "duration": 2
        },
        "test_broadcast_1_complete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_complete",
          "duration": 2
        },
        "test_broadcast_1_prevented_at_YUI_Instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_prevented_at_YUI_Instance",
          "duration": 2
        },
        "test_broadcast_1_stopped_at_source": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_stopped_at_source",
          "duration": 1
        },
        "test_broadcast_1_stopped_at_YUI_Instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_stopped_at_YUI_Instance",
          "duration": 2
        },
        "test_broadcast_2_complete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_complete",
          "duration": 2
        },
        "test_broadcast_2_prevented_at_YUI_Instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_prevented_at_YUI_Instance",
          "duration": 2
        },
        "test_broadcast_2_prevented_at_YUI_global": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_prevented_at_YUI_global",
          "duration": 2
        },
        "test_broadcast_2_stopped_at_source": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_stopped_at_source",
          "duration": 1
        },
        "test_broadcast_2_stopped_at_YUI_instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_stopped_at_YUI_instance",
          "duration": 2
        },
        "test_broadcast_2_stopped_at_YUI_global": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_stopped_at_YUI_global",
          "duration": 2
        }
      },
      "Bubble Single Target": {
        "name": "Bubble Single Target",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 31,
        "type": "testcase",
        "test_bubbleComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleComplete",
          "duration": 2
        },
        "test_bubblePrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubblePrevented",
          "duration": 1
        },
        "test_bubblePreventedOnTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubblePreventedOnTarget",
          "duration": 1
        },
        "test_bubbleStopped": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleStopped",
          "duration": 2
        },
        "test_bubbleStoppedOnTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleStoppedOnTarget",
          "duration": 2
        },
        "test_bubbleHalted": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleHalted",
          "duration": 2
        },
        "test_bubbleHaltedOnTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleHaltedOnTarget",
          "duration": 1
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:01 PM"
  },
  {
    "name": "Custom Event Deprecated: Base",
    "passed": 132,
    "failed": 0,
    "errors": 0,
    "ignored": 13,
    "total": 145,
    "duration": 800,
    "type": "report",
    "Custom Event Deprecated: Base": {
      "name": "Custom Event Deprecated: Base",
      "passed": 129,
      "failed": 0,
      "errors": 0,
      "ignored": 8,
      "total": 137,
      "duration": 731,
      "type": "testsuite",
      "Event Target constructor": {
        "name": "Event Target constructor",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 9,
        "type": "testcase",
        "test new Y.EventTarget()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test new Y.EventTarget()",
          "duration": 1
        },
        "test new Y.EventTarget(config)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test new Y.EventTarget(config)",
          "duration": 1
        },
        "test Y.augment(Clz, Y.EventTarget)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Y.augment(Clz, Y.EventTarget)",
          "duration": 2
        },
        "test Y.extend(Clz, Y.EventTarget)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Y.extend(Clz, Y.EventTarget)",
          "duration": 1
        }
      },
      "target.on()": {
        "name": "target.on()",
        "passed": 18,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 20,
        "duration": 141,
        "type": "testcase",
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.on(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn)",
          "duration": 2
        },
        "test target.on(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn) allows duplicate subs",
          "duration": 1
        },
        "test target.on(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn, obj)",
          "duration": 1
        },
        "test target.on(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn, obj, args)",
          "duration": 1
        },
        "test target.on([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([type], fn)",
          "duration": 2
        },
        "test target.on([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn)",
          "duration": 2
        },
        "test target.on([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeA], fn)",
          "duration": 1
        },
        "test target.on([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([], fn) does nothing",
          "duration": 1
        },
        "test target.on([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.on({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: fn })",
          "duration": 2
        },
        "test target.on({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: true }, fn)",
          "duration": 2
        },
        "test target.on({ type: { fn: wins } }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { fn: wins } }, fn)",
          "duration": 2
        },
        "test target.on({ type: { fn: wins } }, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { fn: wins } }, fn, obj, args)",
          "duration": 1
        },
        "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)",
          "duration": 2
        },
        "test target.on({ type: { context: wins } }, callback, ctx, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { context: wins } }, callback, ctx, args)",
          "duration": 2
        },
        "test target.on(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 5
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 3
        },
        "test target.on('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('click', fn) registers custom event only",
          "duration": 1
        }
      },
      "target.after": {
        "name": "target.after",
        "passed": 14,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 16,
        "duration": 59,
        "type": "testcase",
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.after(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn)",
          "duration": 1
        },
        "test target.after(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn) allows duplicate subs",
          "duration": 2
        },
        "test target.after(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn, obj)",
          "duration": 2
        },
        "test target.after(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn, obj, args)",
          "duration": 1
        },
        "test target.after([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([type], fn)",
          "duration": 1
        },
        "test target.after([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn)",
          "duration": 2
        },
        "test target.after([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeA], fn)",
          "duration": 2
        },
        "test target.after([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([], fn) does nothing",
          "duration": 1
        },
        "test target.after([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.after([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.after({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({ type: fn })",
          "duration": 1
        },
        "test target.after({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({ type: true }, fn)",
          "duration": 2
        },
        "test target.after(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.after(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 4
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 2
        },
        "test target.after('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('click', fn) registers custom event only",
          "duration": 2
        }
      },
      "target.once": {
        "name": "target.once",
        "passed": 14,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 16,
        "duration": 68,
        "type": "testcase",
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.once(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn)",
          "duration": 1
        },
        "test target.once(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn) allows duplicate subs",
          "duration": 1
        },
        "test target.once(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn, obj)",
          "duration": 2
        },
        "test target.once(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn, obj, args)",
          "duration": 2
        },
        "test target.once([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([type], fn)",
          "duration": 1
        },
        "test target.once([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([typeA, typeB], fn)",
          "duration": 1
        },
        "test target.once([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([typeA, typeA], fn)",
          "duration": 1
        },
        "test target.once([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([], fn) does nothing",
          "duration": 1
        },
        "test target.once([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.once([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.once({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once({ type: fn })",
          "duration": 2
        },
        "test target.once({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once({ type: true }, fn)",
          "duration": 2
        },
        "test target.once(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.once(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 5
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 3
        },
        "test target.once('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once('click', fn) registers custom event only",
          "duration": 1
        }
      },
      "target.onceAfter": {
        "name": "target.onceAfter",
        "passed": 15,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 17,
        "duration": 71,
        "type": "testcase",
        "test_onceAfter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_onceAfter",
          "duration": 1
        },
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.onceAfter(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn)",
          "duration": 1
        },
        "test target.onceAfter(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn) allows duplicate subs",
          "duration": 2
        },
        "test target.onceAfter(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn, obj)",
          "duration": 1
        },
        "test target.onceAfter(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn, obj, args)",
          "duration": 1
        },
        "test target.onceAfter([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([type], fn)",
          "duration": 2
        },
        "test target.onceAfter([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([typeA, typeB], fn)",
          "duration": 2
        },
        "test target.onceAfter([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([typeA, typeA], fn)",
          "duration": 2
        },
        "test target.onceAfter([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([], fn) does nothing",
          "duration": 1
        },
        "test target.onceAfter([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.onceAfter([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.onceAfter({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter({ type: fn })",
          "duration": 2
        },
        "test target.onceAfter({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter({ type: true }, fn)",
          "duration": 2
        },
        "test target.onceAfter(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.onceAfter(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 5
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 3
        },
        "test target.onceAfter('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter('click', fn) registers custom event only",
          "duration": 1
        }
      },
      "target.detach": {
        "name": "target.detach",
        "passed": 58,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 58,
        "duration": 288,
        "type": "testcase",
        "test target.detach() with not subs is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.detach() with not subs is harmless",
          "duration": 1
        },
        "test target.detachAll() with not subs is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.detachAll() with not subs is harmless",
          "duration": 1
        },
        "test target.on() + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detach(type, fn)",
          "duration": 1
        },
        "test target.on(type, fn, thisObj) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn, thisObj) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.on() + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detach(type)",
          "duration": 2
        },
        "test target.on() + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detach()",
          "duration": 2
        },
        "test target.on() + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detachAll()",
          "duration": 1
        },
        "test target.on() + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + handle.detach()",
          "duration": 1
        },
        "test target.on('cat|__', fn) + target.detach('cat|___')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('cat|__', fn) + target.detach('cat|___')",
          "duration": 2
        },
        "test target.on('cat|__', fn) + target.detach('cat|___', fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('cat|__', fn) + target.detach('cat|___', fn)",
          "duration": 2
        },
        "test target.on('cat|__', fn) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('cat|__', fn) + target.detach('cat|*')",
          "duration": 2
        },
        "test target.on({...}) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + target.detach(type)",
          "duration": 2
        },
        "test target.on({...}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.on({...}) + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + target.detachAll()",
          "duration": 2
        },
        "test target.on({'cat|type': fn}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({'cat|type': fn}) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.on({'cat|type': fn}) + target.detach('cat|type')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({'cat|type': fn}) + target.detach('cat|type')",
          "duration": 2
        },
        "test target.on({'cat|type': fn}) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({'cat|type': fn}) + target.detach('cat|*')",
          "duration": 2
        },
        "test target.on([type], fn) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([type], fn) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.on([type], fn) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([type], fn) + target.detach(type)",
          "duration": 2
        },
        "test target.on([typeA, typeB], fn) + target.detach(typeA)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn) + target.detach(typeA)",
          "duration": 2
        },
        "test target.on([typeA, typeB], fn) + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn) + target.detach()",
          "duration": 2
        },
        "test target.on({}) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({}) + target.detach() is harmless",
          "duration": 1
        },
        "test target.on([], fn) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([], fn) + target.detach() is harmless",
          "duration": 1
        },
        "test target.on({}) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({}) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.on([], fn) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([], fn) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.on({...}) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + handle.detach()",
          "duration": 2
        },
        "test target.on([typeA, typeB], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn) + handle.detach()",
          "duration": 1
        },
        "test target.on([typeA, typeA], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeA], fn) + handle.detach()",
          "duration": 1
        },
        "test target.on(type) + target.detach(prefix:type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type) + target.detach(prefix:type)",
          "duration": 2
        },
        "test target.after() + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detach(type, fn)",
          "duration": 2
        },
        "test target.after(type, fn, thisObj) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn, thisObj) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.after() + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detach(type)",
          "duration": 1
        },
        "test target.after() + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detach()",
          "duration": 1
        },
        "test target.after() + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detachAll()",
          "duration": 2
        },
        "test target.after() + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + handle.detach()",
          "duration": 1
        },
        "test target.after('cat|__', fn) + target.detach('cat|___')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('cat|__', fn) + target.detach('cat|___')",
          "duration": 2
        },
        "test target.after('cat|__', fn) + target.detach('cat|___', fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('cat|__', fn) + target.detach('cat|___', fn)",
          "duration": 1
        },
        "test target.after('cat|__', fn) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('cat|__', fn) + target.detach('cat|*')",
          "duration": 1
        },
        "test target.after({...}) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + target.detach(type)",
          "duration": 2
        },
        "test target.after({...}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.after({...}) + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + target.detachAll()",
          "duration": 2
        },
        "test target.after({'cat|type': fn}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({'cat|type': fn}) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after({'cat|type': fn}) + target.detach('cat|type')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({'cat|type': fn}) + target.detach('cat|type')",
          "duration": 1
        },
        "test target.after({'cat|type': fn}) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({'cat|type': fn}) + target.detach('cat|*')",
          "duration": 3
        },
        "test target.after([type], fn) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([type], fn) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after([type], fn) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([type], fn) + target.detach(type)",
          "duration": 2
        },
        "test target.after([typeA, typeB], fn) + target.detach(typeA)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn) + target.detach(typeA)",
          "duration": 2
        },
        "test target.after([typeA, typeB], fn) + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn) + target.detach()",
          "duration": 2
        },
        "test target.after({}) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({}) + target.detach() is harmless",
          "duration": 1
        },
        "test target.after([], fn) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([], fn) + target.detach() is harmless",
          "duration": 1
        },
        "test target.after({}) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({}) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.after([], fn) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([], fn) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.after({...}) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + handle.detach()",
          "duration": 2
        },
        "test target.after([typeA, typeB], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn) + handle.detach()",
          "duration": 2
        },
        "test target.after([typeA, typeA], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeA], fn) + handle.detach()",
          "duration": 1
        },
        "test target.after(type) + target.detach(prefix:type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type) + target.detach(prefix:type)",
          "duration": 1
        },
        "test target.on() + target.after() + target.detach(type) detaches both": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.after() + target.detach(type) detaches both",
          "duration": 2
        },
        "test target.detach('~AFTER~')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.detach('~AFTER~')",
          "duration": 1
        }
      },
      "target.fire": {
        "name": "target.fire",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 18,
        "type": "testcase",
        "test target.fire() with no subscribers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.fire() with no subscribers",
          "duration": 1
        },
        "test on() and fire() argument aggregation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test on() and fire() argument aggregation",
          "duration": 2
        },
        "test target.fire(*) arg is passed as is": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.fire(*) arg is passed as is",
          "duration": 4
        },
        "test broadcast": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test broadcast",
          "duration": 3
        }
      },
      "target.publish()": {
        "name": "target.publish()",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "test_fire_once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_fire_once",
          "duration": 1
        },
        "test_async_fireonce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_async_fireonce",
          "duration": 1
        }
      }
    },
    "AOP": {
      "name": "AOP",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 5,
      "total": 8,
      "duration": 43,
      "type": "testsuite",
      "Y.Do": {
        "name": "Y.Do",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "test before\/after with falsy context binds args": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test before\/after with falsy context binds args"
        },
        "test Y.AlterReturn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Y.AlterReturn",
          "duration": 1
        },
        "test originalRetVal not overwritten by nested call": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test originalRetVal not overwritten by nested call"
        }
      },
      "EventTarget on\/before\/after": {
        "name": "EventTarget on\/before\/after",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 3,
        "total": 5,
        "duration": 23,
        "type": "testcase",
        "test target.on(fn, host, methodName)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(fn, host, methodName)",
          "duration": 1
        },
        "test target.on(fn, host, methodName, context)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(fn, host, methodName, context)",
          "duration": 1
        },
        "test target.on(fn, host, noSuchMethod)": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on(fn, host, noSuchMethod)"
        },
        "test target.on([fnA, fnB, fnC], host, noSuchMethod)": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on([fnA, fnB, fnC], host, noSuchMethod)"
        },
        "test target.before() is an alias for target.on()": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.before() is an alias for target.on()"
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:03 PM"
  },
  {
    "name": "Custom Event: Base",
    "passed": 130,
    "failed": 0,
    "errors": 0,
    "ignored": 8,
    "total": 138,
    "duration": 711,
    "type": "report",
    "Event Target Constructor": {
      "name": "Event Target Constructor",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 82,
      "type": "testcase",
      "test new Y.EventTarget()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test new Y.EventTarget()",
        "duration": 1
      },
      "test new Y.EventTarget(config)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test new Y.EventTarget(config)",
        "duration": 1
      },
      "test Y.augment(Clz, Y.EventTarget)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.augment(Clz, Y.EventTarget)",
        "duration": 2
      },
      "test Y.extend(Clz, Y.EventTarget)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.extend(Clz, Y.EventTarget)",
        "duration": 1
      }
    },
    "target.on()": {
      "name": "target.on()",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 20,
      "duration": 96,
      "type": "testcase",
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.on(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn)",
        "duration": 1
      },
      "test target.on(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn) allows duplicate subs",
        "duration": 2
      },
      "test target.on(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn, obj)",
        "duration": 1
      },
      "test target.on(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn, obj, args)",
        "duration": 1
      },
      "test target.on([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([type], fn)",
        "duration": 1
      },
      "test target.on([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn)",
        "duration": 2
      },
      "test target.on([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeA], fn)",
        "duration": 2
      },
      "test target.on([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([], fn) does nothing",
        "duration": 1
      },
      "test target.on([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.on({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: fn })",
        "duration": 3
      },
      "test target.on({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: true }, fn)",
        "duration": 2
      },
      "test target.on({ type: { fn: wins } }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { fn: wins } }, fn)",
        "duration": 2
      },
      "test target.on({ type: { fn: wins } }, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { fn: wins } }, fn, obj, args)",
        "duration": 1
      },
      "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)",
        "duration": 2
      },
      "test target.on({ type: { context: wins } }, callback, ctx, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { context: wins } }, callback, ctx, args)",
        "duration": 2
      },
      "test target.on(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 5
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 3
      },
      "test target.on('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.after": {
      "name": "target.after",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 16,
      "duration": 61,
      "type": "testcase",
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.after(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn)",
        "duration": 1
      },
      "test target.after(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.after(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn, obj)",
        "duration": 1
      },
      "test target.after(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn, obj, args)",
        "duration": 1
      },
      "test target.after([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([type], fn)",
        "duration": 1
      },
      "test target.after([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn)",
        "duration": 1
      },
      "test target.after([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeA], fn)",
        "duration": 1
      },
      "test target.after([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([], fn) does nothing",
        "duration": 1
      },
      "test target.after([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.after([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.after({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({ type: fn })",
        "duration": 2
      },
      "test target.after({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({ type: true }, fn)",
        "duration": 1
      },
      "test target.after(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.after(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 4
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 3
      },
      "test target.after('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.once": {
      "name": "target.once",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 16,
      "duration": 66,
      "type": "testcase",
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.once(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn)",
        "duration": 1
      },
      "test target.once(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.once(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn, obj)",
        "duration": 2
      },
      "test target.once(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn, obj, args)",
        "duration": 1
      },
      "test target.once([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([type], fn)",
        "duration": 1
      },
      "test target.once([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([typeA, typeB], fn)",
        "duration": 1
      },
      "test target.once([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([typeA, typeA], fn)",
        "duration": 2
      },
      "test target.once([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([], fn) does nothing",
        "duration": 1
      },
      "test target.once([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.once([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.once({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once({ type: fn })",
        "duration": 2
      },
      "test target.once({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once({ type: true }, fn)",
        "duration": 2
      },
      "test target.once(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.once(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 5
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 2
      },
      "test target.once('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.onceAfter": {
      "name": "target.onceAfter",
      "passed": 15,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 17,
      "duration": 71,
      "type": "testcase",
      "test_onceAfter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_onceAfter",
        "duration": 2
      },
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.onceAfter(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn)",
        "duration": 1
      },
      "test target.onceAfter(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.onceAfter(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn, obj)",
        "duration": 1
      },
      "test target.onceAfter(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn, obj, args)",
        "duration": 2
      },
      "test target.onceAfter([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([type], fn)",
        "duration": 2
      },
      "test target.onceAfter([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([typeA, typeB], fn)",
        "duration": 1
      },
      "test target.onceAfter([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([typeA, typeA], fn)",
        "duration": 1
      },
      "test target.onceAfter([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([], fn) does nothing",
        "duration": 1
      },
      "test target.onceAfter([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.onceAfter([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.onceAfter({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter({ type: fn })",
        "duration": 2
      },
      "test target.onceAfter({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter({ type: true }, fn)",
        "duration": 2
      },
      "test target.onceAfter(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.onceAfter(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 4
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 3
      },
      "test target.onceAfter('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.detach": {
      "name": "target.detach",
      "passed": 59,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 59,
      "duration": 259,
      "type": "testcase",
      "test target.detach() with not subs is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.detach() with not subs is harmless",
        "duration": 1
      },
      "test target.detachAll() with not subs is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.detachAll() with not subs is harmless",
        "duration": 1
      },
      "test target.on() + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on(type, fn, thisObj) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn, thisObj) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on() + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detach(type)",
        "duration": 1
      },
      "test target.on() + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detach()",
        "duration": 1
      },
      "test target.on() + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detachAll()",
        "duration": 1
      },
      "test target.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + handle.detach()",
        "duration": 2
      },
      "test target.on('cat|__', fn) + target.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('cat|__', fn) + target.detach('cat|___')",
        "duration": 2
      },
      "test target.on('cat|__', fn) + target.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('cat|__', fn) + target.detach('cat|___', fn)",
        "duration": 1
      },
      "test target.on('cat|__', fn) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('cat|__', fn) + target.detach('cat|*')",
        "duration": 1
      },
      "test target.on({...}) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + target.detach(type)",
        "duration": 2
      },
      "test target.on({...}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on({...}) + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + target.detachAll()",
        "duration": 2
      },
      "test target.on({'cat|type': fn}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({'cat|type': fn}) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on({'cat|type': fn}) + target.detach('cat|type')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({'cat|type': fn}) + target.detach('cat|type')",
        "duration": 1
      },
      "test target.on({'cat|type': fn}) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({'cat|type': fn}) + target.detach('cat|*')",
        "duration": 2
      },
      "test target.on([type], fn) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([type], fn) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on([type], fn) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([type], fn) + target.detach(type)",
        "duration": 2
      },
      "test target.on([typeA, typeB], fn) + target.detach(typeA)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn) + target.detach(typeA)",
        "duration": 2
      },
      "test target.on([typeA, typeB], fn) + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn) + target.detach()",
        "duration": 1
      },
      "test target.on({}) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({}) + target.detach() is harmless",
        "duration": 1
      },
      "test target.on([], fn) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([], fn) + target.detach() is harmless",
        "duration": 1
      },
      "test target.on({}) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({}) + handle.detach() is harmless",
        "duration": 2
      },
      "test target.on([], fn) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([], fn) + handle.detach() is harmless",
        "duration": 1
      },
      "test target.on({...}) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + handle.detach()",
        "duration": 17
      },
      "test target.on([typeA, typeB], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn) + handle.detach()",
        "duration": 2
      },
      "test target.on([typeA, typeA], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeA], fn) + handle.detach()",
        "duration": 2
      },
      "test target.on(type) + target.detach(prefix:type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type) + target.detach(prefix:type)",
        "duration": 2
      },
      "test target.after() + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detach(type, fn)",
        "duration": 2
      },
      "test target.after(type, fn, thisObj) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn, thisObj) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.after() + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detach(type)",
        "duration": 2
      },
      "test target.after() + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detach()",
        "duration": 3
      },
      "test target.after() + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detachAll()",
        "duration": 1
      },
      "test target.after() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + handle.detach()",
        "duration": 1
      },
      "test target.after('cat|__', fn) + target.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('cat|__', fn) + target.detach('cat|___')",
        "duration": 1
      },
      "test target.after('cat|__', fn) + target.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('cat|__', fn) + target.detach('cat|___', fn)",
        "duration": 1
      },
      "test target.after('cat|__', fn) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('cat|__', fn) + target.detach('cat|*')",
        "duration": 1
      },
      "test target.after({...}) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + target.detach(type)",
        "duration": 1
      },
      "test target.after({...}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.after({...}) + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + target.detachAll()",
        "duration": 2
      },
      "test target.after({'cat|type': fn}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({'cat|type': fn}) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.after({'cat|type': fn}) + target.detach('cat|type')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({'cat|type': fn}) + target.detach('cat|type')",
        "duration": 1
      },
      "test target.after({'cat|type': fn}) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({'cat|type': fn}) + target.detach('cat|*')",
        "duration": 2
      },
      "test target.after([type], fn) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([type], fn) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.after([type], fn) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([type], fn) + target.detach(type)",
        "duration": 1
      },
      "test target.after([typeA, typeB], fn) + target.detach(typeA)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn) + target.detach(typeA)",
        "duration": 2
      },
      "test target.after([typeA, typeB], fn) + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn) + target.detach()",
        "duration": 1
      },
      "test target.after({}) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({}) + target.detach() is harmless",
        "duration": 1
      },
      "test target.after([], fn) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([], fn) + target.detach() is harmless",
        "duration": 1
      },
      "test target.after({}) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({}) + handle.detach() is harmless",
        "duration": 1
      },
      "test target.after([], fn) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([], fn) + handle.detach() is harmless",
        "duration": 1
      },
      "test target.after({...}) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + handle.detach()",
        "duration": 1
      },
      "test target.after([typeA, typeB], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn) + handle.detach()",
        "duration": 1
      },
      "test target.after([typeA, typeA], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeA], fn) + handle.detach()",
        "duration": 1
      },
      "test target.after(type) + target.detach(prefix:type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type) + target.detach(prefix:type)",
        "duration": 2
      },
      "test target.on() + target.after() + target.detach(type) detaches both": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.after() + target.detach(type) detaches both",
        "duration": 2
      },
      "test target.detach('~AFTER~')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.detach('~AFTER~')",
        "duration": 1
      },
      "test Y.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.detach(type, fn)",
        "duration": 1
      }
    },
    "target.fire": {
      "name": "target.fire",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 19,
      "type": "testcase",
      "test target.fire() with no subscribers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.fire() with no subscribers",
        "duration": 1
      },
      "test on() and fire() argument aggregation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test on() and fire() argument aggregation",
        "duration": 3
      },
      "test target.fire(*) arg is passed as is": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.fire(*) arg is passed as is",
        "duration": 4
      },
      "test broadcast": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test broadcast",
        "duration": 3
      }
    },
    "target.publish()": {
      "name": "target.publish()",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 9,
      "type": "testcase",
      "test_fire_once": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fire_once",
        "duration": 2
      },
      "test_async_fireonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async_fireonce",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:04 PM"
  },
  {
    "name": "QueuePromote",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 110,
    "type": "report",
    "queue-promote API": {
      "name": "queue-promote API",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 83,
      "type": "testcase",
      "methods should exist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "methods should exist",
        "duration": 14
      },
      "promote should move found item to the head": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "promote should move found item to the head",
        "duration": 1
      },
      "remove should remove found item": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "remove should remove found item",
        "duration": 1
      },
      "indexOf should return index or -1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf should return index or -1",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:05 PM"
  },
  {
    "name": "ScrollInfo",
    "passed": 29,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 29,
    "duration": 2693,
    "type": "report",
    "ScrollInfo": {
      "name": "ScrollInfo",
      "passed": 29,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 29,
      "duration": 2663,
      "type": "testcase",
      "should detach events when destroyed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should detach events when destroyed",
        "duration": 11
      },
      "getOffscreenNodes() should return offscreen nodes matching the given selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getOffscreenNodes() should return offscreen nodes matching the given selector",
        "duration": 12
      },
      "body: getOffscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: getOffscreenNodes() should respect the margin parameter",
        "duration": 90
      },
      "div: getOffscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: getOffscreenNodes() should respect the margin parameter",
        "duration": 71
      },
      "getOnscreenNodes() should return onscreen nodes matching the given selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getOnscreenNodes() should return onscreen nodes matching the given selector",
        "duration": 10
      },
      "body: getOnscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: getOnscreenNodes() should respect the margin parameter",
        "duration": 94
      },
      "div: getOnscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: getOnscreenNodes() should respect the margin parameter",
        "duration": 94
      },
      "body: getScrollInfo() should return current scroll information": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: getScrollInfo() should return current scroll information",
        "duration": 119
      },
      "div: getScrollInfo() should return current scroll information": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: getScrollInfo() should return current scroll information",
        "duration": 82
      },
      "refreshDimensions() should refresh cached info on a node's dimensions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "refreshDimensions() should refresh cached info on a node's dimensions",
        "duration": 14
      },
      "body: scroll event should fire on scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scroll event should fire on scroll",
        "duration": 88
      },
      "div: scroll event should fire on scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scroll event should fire on scroll",
        "duration": 77
      },
      "scroll event should be throttled within the scrollDelay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "scroll event should be throttled within the scrollDelay",
        "duration": 328
      },
      "body: scrollLeft event should fire after scrolling down": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollLeft event should fire after scrolling down",
        "duration": 80
      },
      "div: scrollDown event should fire after scrolling down": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollDown event should fire after scrolling down",
        "duration": 82
      },
      "body: scrollLeft event should fire after scrolling left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollLeft event should fire after scrolling left",
        "duration": 90
      },
      "div: scrollLeft event should fire after scrolling left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollLeft event should fire after scrolling left",
        "duration": 83
      },
      "body: scrollRight event should fire after scrolling right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollRight event should fire after scrolling right",
        "duration": 69
      },
      "div: scrollRight event should fire after scrolling right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollRight event should fire after scrolling right",
        "duration": 85
      },
      "body: scrollUp event should fire after scrolling up": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollUp event should fire after scrolling up",
        "duration": 85
      },
      "div: scrollUp event should fire after scrolling up": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollUp event should fire after scrolling up",
        "duration": 74
      },
      "body: scrollToBottom event should fire after scrolling to the bottom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToBottom event should fire after scrolling to the bottom",
        "duration": 72
      },
      "div: scrollToBottom event should fire after scrolling to the bottom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToBottom event should fire after scrolling to the bottom",
        "duration": 76
      },
      "body: scrollToLeft event should fire after scrolling to the extreme left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToLeft event should fire after scrolling to the extreme left",
        "duration": 93
      },
      "div: scrollToLeft event should fire after scrolling to the extreme left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToLeft event should fire after scrolling to the extreme left",
        "duration": 74
      },
      "body: scrollToRight event should fire after scrolling to the extreme right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToRight event should fire after scrolling to the extreme right",
        "duration": 70
      },
      "div: scrollToRight event should fire after scrolling to the extreme right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToRight event should fire after scrolling to the extreme right",
        "duration": 75
      },
      "body: scrollToTop event should fire after scrolling to the top": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToTop event should fire after scrolling to the top",
        "duration": 88
      },
      "div: scrollToTop event should fire after scrolling to the top": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToTop event should fire after scrolling to the top",
        "duration": 83
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:09 PM"
  },
  {
    "name": "Substitute",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 97,
    "type": "report",
    "Substitute tests": {
      "name": "Substitute tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 72,
      "type": "testcase",
      "test_substitute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_substitute",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:10 PM"
  },
  {
    "name": "YUITest",
    "passed": 147,
    "failed": 1,
    "errors": 0,
    "ignored": 1,
    "total": 149,
    "duration": 1315,
    "type": "report",
    "Formatting Tests": {
      "name": "Formatting Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 67,
      "type": "testsuite",
      "Test Results Formatting Tests": {
        "name": "Test Results Formatting Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 9,
        "type": "testcase",
        "testXmlFormat": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testXmlFormat",
          "duration": 1
        },
        "testJUnitXmlFormat": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testJUnitXmlFormat",
          "duration": 1
        },
        "testTAPFormat": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testTAPFormat",
          "duration": 2
        }
      }
    },
    "Mock Tests": {
      "name": "Mock Tests",
      "passed": 53,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 53,
      "duration": 599,
      "type": "testsuite",
      "Call Count Tests": {
        "name": "Call Count Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 38,
        "type": "testcase",
        "Call count should default to 1 and pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count should default to 1 and pass",
          "duration": 1
        },
        "Call count should default to 1 and fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count should default to 1 and fail",
          "duration": 9
        },
        "Call count set to 1 should pass when method is called once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 1 should pass when method is called once",
          "duration": 1
        },
        "Call count set to 1 should fail when method isn't called": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 1 should fail when method isn't called",
          "duration": 7
        },
        "Call count set to 1 should fail when method is called twice": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 1 should fail when method is called twice",
          "duration": 7
        },
        "Call count set to 0 should fail when method is called once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 0 should fail when method is called once",
          "duration": 6
        },
        "Call count set to 0 should pass when method isn't called": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 0 should pass when method isn't called",
          "duration": 1
        }
      },
      "Arguments Tests": {
        "name": "Arguments Tests",
        "passed": 40,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 40,
        "duration": 218,
        "type": "testcase",
        "Passing correct number of arguments should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing correct number of arguments should make the test pass",
          "duration": 2
        },
        "Passing an incorrect number of arguments should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing an incorrect number of arguments should make the test fail",
          "duration": 7
        },
        "Passing the exact argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing the exact argument should make the test pass",
          "duration": 1
        },
        "Passing an inexact argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing an inexact argument should make the test fail",
          "duration": 6
        },
        "Passing a number to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a boolean to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a string to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a object to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a function to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Any argument should make the test pass",
          "duration": 2
        },
        "Passing a null to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a number to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Boolean argument should make the test fail",
          "duration": 7
        },
        "Passing a boolean to an Boolean argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Boolean argument should make the test pass",
          "duration": 1
        },
        "Passing a string to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Boolean argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Boolean argument should make the test fail",
          "duration": 6
        },
        "Passing a function to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Boolean argument should make the test fail",
          "duration": 6
        },
        "Passing a null to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Boolean argument should make the test fail",
          "duration": 6
        },
        "Passing a number to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an String argument should make the test fail",
          "duration": 5
        },
        "Passing a boolean to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an String argument should make the test fail",
          "duration": 5
        },
        "Passing a string to an String argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an String argument should make the test pass",
          "duration": 1
        },
        "Passing a object to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an String argument should make the test fail",
          "duration": 6
        },
        "Passing a function to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an String argument should make the test fail",
          "duration": 6
        },
        "Passing a null to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an String argument should make the test fail",
          "duration": 5
        },
        "Passing a number to an Number argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Number argument should make the test pass",
          "duration": 1
        },
        "Passing a boolean to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Number argument should make the test fail",
          "duration": 5
        },
        "Passing a function to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a null to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a number to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a boolean to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Function argument should make the test fail",
          "duration": 5
        },
        "Passing a object to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Function argument should make the test fail",
          "duration": 5
        },
        "Passing a function to an Function argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Function argument should make the test pass",
          "duration": 0
        },
        "Passing a null to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a number to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Object argument should make the test fail",
          "duration": 5
        },
        "Passing a boolean to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Object argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Object argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Object argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Object argument should make the test pass",
          "duration": 1
        },
        "Passing a function to an Object argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Object argument should make the test pass",
          "duration": 1
        },
        "Passing a null to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Object argument should make the test fail",
          "duration": 6
        }
      },
      "Asynchronous Tests": {
        "name": "Asynchronous Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 314,
        "type": "testcase",
        "A mock method called asynchronously shouldn't cause an error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A mock method called asynchronously shouldn't cause an error",
          "duration": 273
        }
      },
      "Returns Tests": {
        "name": "Returns Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 12,
        "type": "testcase",
        "Value for 'returns' should default to undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Value for 'returns' should default to undefined",
          "duration": 0
        },
        "Value for 'returns' should be used as return value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Value for 'returns' should be used as return value",
          "duration": 1
        },
        "Value for 'returns' should be used rather than run value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Value for 'returns' should be used rather than run value",
          "duration": 1
        }
      },
      "Run Tests": {
        "name": "Run Tests",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "A supplied run function should be invoked": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A supplied run function should be invoked",
          "duration": 1
        },
        "A supplied run function's return value should be used.": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A supplied run function's return value should be used.",
          "duration": 1
        }
      }
    },
    "Object Assert Tests": {
      "name": "Object Assert Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 98,
      "type": "testsuite",
      "hasKey() Tests": {
        "name": "hasKey() Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 16,
        "type": "testcase",
        "hasKey() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKey() should pass for existing key on instance",
          "duration": 1
        },
        "hasKey() should pass for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKey() should pass for existing key on prototype",
          "duration": 1
        },
        "hasKey() should fail for missing key": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKey() should fail for missing key",
          "duration": 4
        }
      },
      "hasKeys() Tests": {
        "name": "hasKeys() Tests",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 19,
        "type": "testcase",
        "hasKeys() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should pass for existing key on instance",
          "duration": 1
        },
        "hasKeys() should pass for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should pass for existing key on prototype",
          "duration": 1
        },
        "hasKeys() should fail for missing key on object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should fail for missing key on object",
          "duration": 4
        },
        "hasKeys() should fail for missing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should fail for missing key on prototype",
          "duration": 4
        }
      },
      "ownsKey() Tests": {
        "name": "ownsKey() Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 15,
        "type": "testcase",
        "ownsKey() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKey() should pass for existing key on instance",
          "duration": 1
        },
        "ownsKey() should fail for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKey() should fail for existing key on prototype",
          "duration": 4
        },
        "ownsKey() should fail for missing key": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKey() should fail for missing key",
          "duration": 3
        }
      },
      "ownsKeys() Tests": {
        "name": "ownsKeys() Tests",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 19,
        "type": "testcase",
        "ownsKeys() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should pass for existing key on instance",
          "duration": 1
        },
        "ownsKeys() should fail for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should fail for existing key on prototype",
          "duration": 4
        },
        "ownsKeys() should fail for missing key on object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should fail for missing key on object",
          "duration": 4
        },
        "ownsKeys() should fail for missing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should fail for missing key on prototype",
          "duration": 4
        }
      },
      "ownsNoKeys() Tests": {
        "name": "ownsNoKeys() Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "ownsNoKeys() should fail for object with one key": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsNoKeys() should fail for object with one key",
          "duration": 3
        },
        "ownsNoKeys() should fail for object with two keys": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsNoKeys() should fail for object with two keys",
          "duration": 3
        },
        "ownsNoKeys() should pass for object with no keys": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsNoKeys() should pass for object with no keys",
          "duration": 1
        }
      },
      "Object Asserts": {
        "name": "Object Asserts",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 5,
        "type": "testcase",
        "test: areEqual()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: areEqual()",
          "duration": 1
        }
      }
    },
    "Array Assert Tests": {
      "name": "Array Assert Tests",
      "passed": 34,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 34,
      "duration": 160,
      "type": "testsuite",
      "Contains Assert Tests": {
        "name": "Contains Assert Tests",
        "passed": 19,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 19,
        "duration": 79,
        "type": "testcase",
        "contains() should pass when the given item exists": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should pass when the given item exists",
          "duration": 1
        },
        "contains() should fail when a similar item exists": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should fail when a similar item exists",
          "duration": 4
        },
        "contains() should fail when the item doesn't exist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should fail when the item doesn't exist",
          "duration": 3
        },
        "contains() should throw a custom error message during failure": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should throw a custom error message during failure",
          "duration": 4
        },
        "test: doesNotContain()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContain()",
          "duration": 1
        },
        "test: doesNotContainItems()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainItems()",
          "duration": 1
        },
        "test: doesNotContainMatch()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainMatch()",
          "duration": 1
        },
        "test: indexOf()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: indexOf()",
          "duration": 1
        },
        "test: indexOf() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: indexOf() fail",
          "duration": 4
        },
        "test: lastIndexOf()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: lastIndexOf()",
          "duration": 1
        },
        "test: lastIndexOf() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: lastIndexOf() fail",
          "duration": 3
        },
        "test: doesNotContain() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContain() fail",
          "duration": 3
        },
        "test: doesNotContainItems() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainItems() fail",
          "duration": 4
        },
        "test: doesNotContainMatch() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainMatch() fail",
          "duration": 4
        },
        "test: doesNotContainMatch() fail 2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainMatch() fail 2",
          "duration": 5
        },
        "test: isEmpty()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isEmpty()",
          "duration": 1
        },
        "test: isNotEmpty()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isNotEmpty()",
          "duration": 1
        },
        "test: isEmpty() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isEmpty() fail",
          "duration": 4
        },
        "test: isNotEmpty() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isNotEmpty() fail",
          "duration": 4
        }
      },
      "ContainsItems Assert Tests": {
        "name": "ContainsItems Assert Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 13,
        "type": "testcase",
        "testExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testExistingItems",
          "duration": 1
        },
        "testSimilarItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testSimilarItems",
          "duration": 3
        },
        "testNonExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testNonExistingItems",
          "duration": 4
        }
      },
      "ContainsMatch Assert Tests": {
        "name": "ContainsMatch Assert Tests",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "testExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testExistingItems",
          "duration": 1
        },
        "testNonExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testNonExistingItems",
          "duration": 3
        }
      },
      "itemsAreSame Assert Tests": {
        "name": "itemsAreSame Assert Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 15,
        "type": "testcase",
        "testItemsAreSame": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testItemsAreSame",
          "duration": 1
        },
        "testMissingItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMissingItem",
          "duration": 4
        },
        "testArrayAgainstObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArrayAgainstObject",
          "duration": 4
        }
      },
      "itemsAreEqual Assert Tests": {
        "name": "itemsAreEqual Assert Tests",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 15,
        "type": "testcase",
        "testItemsAreEqual": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testItemsAreEqual",
          "duration": 1
        },
        "testMissingItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMissingItem",
          "duration": 4
        },
        "testArrayAgainstObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArrayAgainstObject",
          "duration": 4
        },
        "test: Against a NodeList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Against a NodeList",
          "duration": 1
        }
      },
      "itemsAreEquivalent Assert Tests": {
        "name": "itemsAreEquivalent Assert Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 15,
        "type": "testcase",
        "testItemsAreEqual": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testItemsAreEqual",
          "duration": 1
        },
        "testMissingItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMissingItem",
          "duration": 4
        },
        "testArrayAgainstObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArrayAgainstObject",
          "duration": 3
        }
      }
    },
    "YUI Test Bugs": {
      "name": "YUI Test Bugs",
      "passed": 0,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testsuite",
      "TestReporter": {
        "name": "TestReporter",
        "passed": 0,
        "failed": 1,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 14,
        "type": "testcase",
        "creating an iframe should allow its name to be retrieved in the DOM": {
          "result": "fail",
          "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
          "type": "test",
          "name": "creating an iframe should allow its name to be retrieved in the DOM",
          "duration": 10
        }
      }
    },
    "General Tests": {
      "name": "General Tests",
      "passed": 39,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 40,
      "duration": 340,
      "type": "testsuite",
      "Wait\/Resume": {
        "name": "Wait\/Resume",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 120,
        "type": "testcase",
        "test: resume without wait": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: resume without wait",
          "duration": 5
        },
        "test: wait without function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: wait without function",
          "duration": 107
        }
      },
      "Suite\/Case Tests": {
        "name": "Suite\/Case Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 32,
        "type": "testcase",
        "test: suite with no name": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: suite with no name",
          "duration": 1
        },
        "test: case with no name": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: case with no name",
          "duration": 1
        },
        "test: callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: callback",
          "duration": 1
        },
        "test: assert": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: assert",
          "duration": 1
        },
        "test: assert no condition": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: assert no condition",
          "duration": 4
        },
        "test: assert.fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: assert.fail",
          "duration": 4
        }
      },
      "EventTarget": {
        "name": "EventTarget",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 5,
        "type": "testcase",
        "test: attach": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: attach",
          "duration": 1
        }
      },
      "General Asserts": {
        "name": "General Asserts",
        "passed": 15,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 15,
        "duration": 63,
        "type": "testcase",
        "test: asserts": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts",
          "duration": 1
        },
        "test: asserts fail areNotEqual": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail areNotEqual",
          "duration": 3
        },
        "test: asserts fail areNotSame": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail areNotSame",
          "duration": 3
        },
        "test: asserts fail isFalse": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isFalse",
          "duration": 3
        },
        "test: asserts fail isTrue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isTrue",
          "duration": 4
        },
        "test: asserts fail isNaN": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNaN",
          "duration": 3
        },
        "test: asserts fail isNotNaN": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNotNaN",
          "duration": 4
        },
        "test: asserts fail isNull": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNull",
          "duration": 3
        },
        "test: asserts fail isNotNull": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNotNull",
          "duration": 3
        },
        "test: asserts fail isUndefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isUndefined",
          "duration": 4
        },
        "test: asserts fail isNotUndefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNotUndefined",
          "duration": 3
        },
        "test: asserts fail isArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isArray",
          "duration": 3
        },
        "test: asserts fail isInstanceOf": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isInstanceOf",
          "duration": 3
        },
        "test: asserts fail isTypeOf": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isTypeOf",
          "duration": 4
        },
        "test: Y.assert fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Y.assert fail",
          "duration": 4
        }
      },
      "Date Tests": {
        "name": "Date Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 28,
        "type": "testcase",
        "test: datesAreEqual()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: datesAreEqual()",
          "duration": 0
        },
        "test: datesAreEqual() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: datesAreEqual() fail",
          "duration": 3
        },
        "test: timesAreEqual()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: timesAreEqual()",
          "duration": 1
        },
        "test: timesAreEqual() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: timesAreEqual() fail",
          "duration": 4
        },
        "test: should error for not passing dates": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: should error for not passing dates",
          "duration": 5
        },
        "test: should error for not passing times": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: should error for not passing times",
          "duration": 5
        }
      },
      "Runner Tests": {
        "name": "Runner Tests",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 6,
        "duration": 29,
        "type": "testcase",
        "test: set name": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: set name",
          "duration": 1
        },
        "test: ignore": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: ignore"
        },
        "test: running\/waiting": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: running\/waiting",
          "duration": 1
        },
        "test: getResults": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: getResults",
          "duration": 1
        },
        "test: clear": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: clear",
          "duration": 1
        },
        "test: _getCount and reset": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _getCount and reset",
          "duration": 1
        }
      },
      "Error Tests": {
        "name": "Error Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 12,
        "type": "testcase",
        "test: Assert.Error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Assert.Error",
          "duration": 0
        },
        "test: Assert.ComparisonFailure": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Assert.ComparisonFailure",
          "duration": 0
        },
        "test: Assert.UnexpectedValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Assert.UnexpectedValue",
          "duration": 0
        }
      },
      "Reporter": {
        "name": "Reporter",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 35,
        "type": "testcase",
        "test: report": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: report",
          "duration": 19
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:12 PM"
  },
  {
    "name": "Node: Data",
    "passed": 25,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 25,
    "duration": 219,
    "type": "report",
    "Node data": {
      "name": "Node data",
      "passed": 25,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 25,
      "duration": 195,
      "type": "testcase",
      "should return empty object when no data set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty object when no data set",
        "duration": 7
      },
      "should return undefined when no data field set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return undefined when no data field set",
        "duration": 13
      },
      "should set data value to string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to string",
        "duration": 5
      },
      "should set data value to number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to number",
        "duration": 5
      },
      "should set data value to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to zero",
        "duration": 5
      },
      "should set data value to undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to undefined",
        "duration": 5
      },
      "should set data value to null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to null",
        "duration": 5
      },
      "should set field value to string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set field value to string",
        "duration": 5
      },
      "should set field name to number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set field name to number",
        "duration": 5
      },
      "should set field name to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set field name to zero",
        "duration": 5
      },
      "should initialize from HTML attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should initialize from HTML attribute",
        "duration": 5
      },
      "should prefer setData value to HTML attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prefer setData value to HTML attribute",
        "duration": 5
      },
      "should return all set values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all set values",
        "duration": 5
      },
      "should return all html data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all html data",
        "duration": 5
      },
      "should prefer setData values to HTML attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prefer setData values to HTML attributes",
        "duration": 5
      },
      "should setData on all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should setData on all nodes",
        "duration": 5
      },
      "should return all html data from all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all html data from all nodes",
        "duration": 5
      },
      "should prefer setData values to HTML attributes on all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prefer setData values to HTML attributes on all nodes",
        "duration": 5
      },
      "should clear field data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear field data",
        "duration": 5
      },
      "should clear number field data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear number field data",
        "duration": 5
      },
      "should clear number zero field data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear number zero field data",
        "duration": 5
      },
      "should clear data for given field from all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear data for given field from all nodes",
        "duration": 5
      },
      "should clear field data from all nodes and revert to HTML attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear field data from all nodes and revert to HTML attributes",
        "duration": 5
      },
      "should clear all data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear all data",
        "duration": 4
      },
      "should store data for document node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should store data for document node",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:13 PM"
  },
  {
    "name": "Node",
    "passed": 248,
    "failed": 1,
    "errors": 0,
    "ignored": 0,
    "total": 249,
    "duration": 2251,
    "type": "report",
    "Node: Data": {
      "name": "Node: Data",
      "passed": 25,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 25,
      "duration": 229,
      "type": "testsuite",
      "Node data": {
        "name": "Node data",
        "passed": 25,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 25,
        "duration": 176,
        "type": "testcase",
        "should return empty object when no data set": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return empty object when no data set",
          "duration": 6
        },
        "should return undefined when no data field set": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return undefined when no data field set",
          "duration": 13
        },
        "should set data value to string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to string",
          "duration": 5
        },
        "should set data value to number": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to number",
          "duration": 5
        },
        "should set data value to zero": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to zero",
          "duration": 5
        },
        "should set data value to undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to undefined",
          "duration": 13
        },
        "should set data value to null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to null",
          "duration": 6
        },
        "should set field value to string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set field value to string",
          "duration": 7
        },
        "should set field name to number": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set field name to number",
          "duration": 5
        },
        "should set field name to zero": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set field name to zero",
          "duration": 6
        },
        "should initialize from HTML attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should initialize from HTML attribute",
          "duration": 6
        },
        "should prefer setData value to HTML attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should prefer setData value to HTML attribute",
          "duration": 5
        },
        "should return all set values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return all set values",
          "duration": 5
        },
        "should return all html data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return all html data",
          "duration": 5
        },
        "should prefer setData values to HTML attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should prefer setData values to HTML attributes",
          "duration": 5
        },
        "should setData on all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should setData on all nodes",
          "duration": 6
        },
        "should return all html data from all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return all html data from all nodes",
          "duration": 5
        },
        "should prefer setData values to HTML attributes on all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should prefer setData values to HTML attributes on all nodes",
          "duration": 5
        },
        "should clear field data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear field data",
          "duration": 5
        },
        "should clear number field data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear number field data",
          "duration": 5
        },
        "should clear number zero field data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear number zero field data",
          "duration": 5
        },
        "should clear data for given field from all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear data for given field from all nodes",
          "duration": 5
        },
        "should clear field data from all nodes and revert to HTML attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear field data from all nodes and revert to HTML attributes",
          "duration": 22
        },
        "should clear all data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear all data",
          "duration": 5
        },
        "should store data for document node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should store data for document node",
          "duration": 1
        }
      }
    },
    "Y.all": {
      "name": "Y.all",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 117,
      "type": "testcase",
      "should fire the handler once": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the handler once",
        "duration": 4
      },
      "should return a NodeList of size zero from empty string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size zero from empty string",
        "duration": 1
      },
      "should return a NodeList of size zero from non-existant id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size zero from non-existant id",
        "duration": 1
      },
      "should return a NodeList of size zero from non-existant id descendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size zero from non-existant id descendant",
        "duration": 1
      },
      "should return a NodeList of size 1 from id query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size 1 from id query",
        "duration": 1
      },
      "should return the same size as the DOM length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the same size as the DOM length",
        "duration": 1
      },
      "should return the first child element from query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the first child element from query",
        "duration": 7
      },
      "should return the second child element from query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the second child element from query",
        "duration": 1
      },
      "should correctly handle special chars in id attribute query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should correctly handle special chars in id attribute query",
        "duration": 1
      },
      "inserted node should become new first-child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "inserted node should become new first-child",
        "duration": 45
      },
      "should match return value from Y.Selector.query for body :first-child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should match return value from Y.Selector.query for body :first-child",
        "duration": 1
      },
      "should return the OPTIONs from the SELECT input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the OPTIONs from the SELECT input",
        "duration": 2
      },
      "should return 3 OPTIONs from the SELECT input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return 3 OPTIONs from the SELECT input",
        "duration": 1
      },
      "should find 2 FORMs via form query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find 2 FORMs via form query",
        "duration": 1
      },
      "should find all elements with bar className": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all elements with bar className",
        "duration": 2
      },
      "should wrap all DIV elements with NodeList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap all DIV elements with NodeList",
        "duration": 1
      },
      "should match the attribute query from Y.Selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should match the attribute query from Y.Selector",
        "duration": 1
      },
      "should match the className query from Y.Selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should match the className query from Y.Selector",
        "duration": 1
      },
      "should return a NodeList of the body element from a DOM ref": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of the body element from a DOM ref",
        "duration": 1
      }
    },
    "NodeList array methods": {
      "name": "NodeList array methods",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 81,
      "type": "testcase",
      "should pass correct arguments to each node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should pass correct arguments to each node",
        "duration": 1
      },
      "should return true when some function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true when some function returns true",
        "duration": 1
      },
      "should return false when no function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false when no function returns true",
        "duration": 1
      },
      "should return 0 from indexOf BODY": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return 0 from indexOf BODY",
        "duration": 1
      },
      "should return 0 from indexOf the first DIV": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return 0 from indexOf the first DIV",
        "duration": 1
      },
      "should return -1 from indexOf for non-existant node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return -1 from indexOf for non-existant node",
        "duration": 1
      },
      "should return -1 from indexOf for node not in nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return -1 from indexOf for node not in nodelist",
        "duration": 1
      },
      "should pop the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should pop the nodelist",
        "duration": 1
      },
      "should shift the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should shift the nodelist",
        "duration": 1
      },
      "should push the node on nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should push the node on nodelist",
        "duration": 1
      },
      "should unshift the node on nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should unshift the node on nodelist",
        "duration": 1
      },
      "should unshift the dom node on nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should unshift the dom node on nodelist",
        "duration": 1
      },
      "should concat the nodelists": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should concat the nodelists",
        "duration": 1
      },
      "should concat the nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should concat the nodes",
        "duration": 1
      },
      "should return nodelist from empty concat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return nodelist from empty concat",
        "duration": 5
      },
      "should return nodelist from empty slice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return nodelist from empty slice",
        "duration": 5
      },
      "should return nodelist from empty splice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return nodelist from empty splice",
        "duration": 4
      },
      "should slice the nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should slice the nodes",
        "duration": 1
      },
      "should splice the nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should splice the nodes",
        "duration": 1
      },
      "should refresh the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should refresh the nodelist",
        "duration": 2
      }
    },
    "Y.Node get() method": {
      "name": "Y.Node get() method",
      "passed": 23,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 23,
      "duration": 89,
      "type": "testcase",
      "should return null from empty string input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null from empty string input",
        "duration": 1
      },
      "should return null from unfound property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null from unfound property",
        "duration": 1
      },
      "should return null nodeValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null nodeValue",
        "duration": 1
      },
      "should return DIV from nodeName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return DIV from nodeName",
        "duration": 2
      },
      "should return UL from nodeName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return UL from nodeName",
        "duration": 1
      },
      "should return LI from nodeName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return LI from nodeName",
        "duration": 1
      },
      "should return the firstChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the firstChild",
        "duration": 1
      },
      "should return the nextSibling of the firstChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the nextSibling of the firstChild",
        "duration": 1
      },
      "should return the nodeName of the nextSibling of the firstChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the nodeName of the nextSibling of the firstChild",
        "duration": 1
      },
      "should return the nodeName of the of the lastChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the nodeName of the of the lastChild",
        "duration": 1
      },
      "should get the document node from the ownerDocument": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the document node from the ownerDocument",
        "duration": 1
      },
      "should return the OPTIONs from the SElECT": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the OPTIONs from the SElECT",
        "duration": 1
      },
      "should return the text of the new element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the text of the new element",
        "duration": 5
      },
      "should return the updated text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the updated text",
        "duration": 5
      },
      "should return the correct number of children": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct number of children",
        "duration": 1
      },
      "should return zero children from empty node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return zero children from empty node",
        "duration": 1
      },
      "should return matching childNode length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return matching childNode length",
        "duration": 5
      },
      "should return the correct tabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex",
        "duration": 1
      },
      "should return the correct tabIndex when not set (DIV)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex when not set (DIV)",
        "duration": 1
      },
      "should return the correct tabIndex when not set (A)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex when not set (A)",
        "duration": 1
      },
      "should return the correct tabIndex when set to -1 (A)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex when set to -1 (A)",
        "duration": 1
      },
      "should convert live list to static array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should convert live list to static array",
        "duration": 1
      },
      "test_getters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getters",
        "duration": 1
      }
    },
    "Y.NodeList get() method": {
      "name": "Y.NodeList get() method",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 19,
      "type": "testcase",
      "should return an array of tagNames from the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return an array of tagNames from the nodelist",
        "duration": 1
      },
      "should find the id of the first nodes's parentNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find the id of the first nodes's parentNode",
        "duration": 2
      },
      "should find the text of the first item in children collection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find the text of the first item in children collection",
        "duration": 2
      },
      "should convert DOM node return values to NodeList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should convert DOM node return values to NodeList",
        "duration": 1
      }
    },
    "Y.Node.ancestor": {
      "name": "Y.Node.ancestor",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 70,
      "type": "testcase",
      "should return the parent node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the parent node",
        "duration": 1
      },
      "should return the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the same node",
        "duration": 1
      },
      "should return the matching ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor",
        "duration": 1
      },
      "should return the matching ancestor via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor via selector",
        "duration": 1
      },
      "should return the matching ancestor (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self match)",
        "duration": 1
      },
      "should return the matching ancestor (test self match) via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self match) via selector",
        "duration": 1
      },
      "should return the matching ancestor (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self not matched)",
        "duration": 1
      },
      "should return the matching ancestor (test self not matched) via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self not matched) via selector",
        "duration": 2
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should stop when the stop function returns true via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true via selector",
        "duration": 1
      },
      "should stop when the stop function returns true via selector as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true via selector as 2nd arg",
        "duration": 2
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor before stop fn as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop fn as 2nd arg",
        "duration": 1
      },
      "should find ancestor before stop via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop via selector",
        "duration": 1
      },
      "should find ancestor before stop via selector as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop via selector as 2nd arg",
        "duration": 1
      },
      "should find ancestor via selector before stop via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor via selector before stop via selector",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      },
      "should find ancestor when testFn and stop via selector both pass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when testFn and stop via selector both pass",
        "duration": 1
      },
      "should find ancestor when test and stop via selector both pass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when test and stop via selector both pass",
        "duration": 1
      },
      "should find TD ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find TD ancestor",
        "duration": 2
      }
    },
    "Y.Node.ancestors": {
      "name": "Y.Node.ancestors",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 40,
      "type": "testcase",
      "should return an array of one (documentElement)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return an array of one (documentElement)",
        "duration": 1
      },
      "should include the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should include the starting node",
        "duration": 1
      },
      "should omit the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should omit the starting node",
        "duration": 1
      },
      "should return the matching ancestors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors",
        "duration": 1
      },
      "should return the matching ancestors via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors via selector",
        "duration": 2
      },
      "should return the matching ancestors (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self match)",
        "duration": 2
      },
      "should return the matching ancestors (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self not matched)",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      },
      "should stop when the stop function returns true as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true as 2nd arg",
        "duration": 1
      }
    },
    "Y.Node.siblings": {
      "name": "Y.Node.siblings",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 11,
      "type": "testcase",
      "should return all siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all siblings",
        "duration": 1
      },
      "should return all LI siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all LI siblings",
        "duration": 1
      },
      "should return all LI.bar siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all LI.bar siblings",
        "duration": 2
      }
    },
    "Y.Node.previous": {
      "name": "Y.Node.previous",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "should return the correct previous element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct previous element",
        "duration": 1
      }
    },
    "Y.Node.insert": {
      "name": "Y.Node.insert",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 16,
      "type": "testcase",
      "insert should fail silently given null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "insert should fail silently given null input",
        "duration": 1
      },
      "insert should work with 0 (falsy number input)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "insert should work with 0 (falsy number input)",
        "duration": 1
      },
      "insert should replace content when given null input and replace where string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "insert should replace content when given null input and replace where string",
        "duration": 4
      },
      "prepend should fail silently given null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "prepend should fail silently given null input",
        "duration": 1
      }
    },
    "Y.Node.removeAttribute": {
      "name": "Y.Node.removeAttribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "should remove the given attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the given attribute",
        "duration": 4
      },
      "should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be chainable",
        "duration": 4
      },
      "should remove readonly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove readonly",
        "duration": 1
      }
    },
    "Y.Node.ATTRS.children": {
      "name": "Y.Node.ATTRS.children",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "should return children from document fragment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return children from document fragment",
        "duration": 1
      }
    },
    "Y.Node.setHTML": {
      "name": "Y.Node.setHTML",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 27,
      "type": "testcase",
      "should insert html into div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert html into div",
        "duration": 8
      },
      "should insert html into nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert html into nodelist",
        "duration": 5
      },
      "should get html from div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get html from div",
        "duration": 7
      },
      "should get html from nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get html from nodelist",
        "duration": 5
      }
    },
    "Y.Node.getStyle": {
      "name": "Y.Node.getStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "should return undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return undefined when given invalid property",
        "duration": 5
      }
    },
    "Y.Node.getComputedStyle": {
      "name": "Y.Node.getComputedStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 4,
      "type": "testcase",
      "should return undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return undefined when given invalid property",
        "duration": 4
      }
    },
    "Y.NodeList.getStyle": {
      "name": "Y.NodeList.getStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 4,
      "type": "testcase",
      "should return array of undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return array of undefined when given invalid property",
        "duration": 2
      }
    },
    "Y.NodeList.getComputedStyle": {
      "name": "Y.NodeList.getComputedStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "should return array of undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return array of undefined when given invalid property",
        "duration": 4
      }
    },
    "Node": {
      "name": "Node",
      "passed": 106,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 107,
      "duration": 1449,
      "type": "testsuite",
      "Y.one": {
        "name": "Y.one",
        "passed": 95,
        "failed": 1,
        "errors": 0,
        "ignored": 0,
        "total": 96,
        "duration": 1403,
        "type": "testcase",
        "should cache node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should cache node",
          "duration": 5
        },
        "should get fresh node after destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should get fresh node after destroy",
          "duration": 6
        },
        "should return null from empty string input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null from empty string input",
          "duration": 1
        },
        "should return null from null input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null from null input",
          "duration": 1
        },
        "should return null for non-existant id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null for non-existant id",
          "duration": 1
        },
        "should return null for element descendant of non-existant id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null for element descendant of non-existant id",
          "duration": 1
        },
        "should find matching element by id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should find matching element by id",
          "duration": 0
        },
        "should return the correct element from the iframe document": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return the correct element from the iframe document",
          "duration": 1
        },
        "should find id descendant of class selector": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should find id descendant of class selector",
          "duration": 0
        },
        "should find element by selector": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should find element by selector",
          "duration": 5
        },
        "test_create": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_create",
          "duration": 22
        },
        "test_setter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setter",
          "duration": 9
        },
        "test_dom_methods": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_dom_methods",
          "duration": 18
        },
        "test_fragment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_fragment",
          "duration": 1
        },
        "test_screen": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_screen",
          "duration": 7
        },
        "test_region": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_region",
          "duration": 2
        },
        "test_classes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_classes",
          "duration": 20
        },
        "test_toggle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toggle",
          "duration": 2
        },
        "test_setStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setStyle",
          "duration": 2
        },
        "test_getStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getStyle",
          "duration": 3
        },
        "test_getComputedStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getComputedStyle",
          "duration": 16
        },
        "test_setStyles": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setStyles",
          "duration": 1
        },
        "test_selector": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_selector",
          "duration": 2
        },
        "test_window": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_window",
          "duration": 1
        },
        "test_windowSize": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_windowSize",
          "duration": 1
        },
        "test_scroll": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_scroll",
          "duration": 34
        },
        "test_setContent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setContent",
          "duration": 22
        },
        "test_insert": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_insert",
          "duration": 45
        },
        "test_inject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_inject",
          "duration": 11
        },
        "test_getValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getValue",
          "duration": 5
        },
        "test_remove": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_remove",
          "duration": 27
        },
        "test_replace": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replace",
          "duration": 23
        },
        "test_elements": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_elements",
          "duration": 1
        },
        "test_toFrag": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toFrag",
          "duration": 2
        },
        "test_aria": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_aria",
          "duration": 2
        },
        "test_plugin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_plugin",
          "duration": 133
        },
        "test_props": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_props",
          "duration": 4
        },
        "test_one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_one",
          "duration": 3
        },
        "test_all": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_all",
          "duration": 2
        },
        "test_isEmpty": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_isEmpty",
          "duration": 1
        },
        "test_swap": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_swap",
          "duration": 3
        },
        "test_data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_data",
          "duration": 1
        },
        "test_appendStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_appendStyle",
          "duration": 9
        },
        "test_nodelistEvent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_nodelistEvent",
          "duration": 94
        },
        "test_size": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_size",
          "duration": 9
        },
        "test_select": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_select",
          "duration": 9
        },
        "test_label_for": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_label_for",
          "duration": 13
        },
        "test_destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_destroy",
          "duration": 5
        },
        "test_prependFrag": {
          "result": "fail",
          "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
          "type": "test",
          "name": "test_prependFrag",
          "duration": 13
        },
        "test_focus": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_focus",
          "duration": 2
        },
        "should hide the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should hide the node",
          "duration": 1
        },
        "should show the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should show the node",
          "duration": 2
        },
        "should show the node and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should show the node and fire callback",
          "duration": 2
        },
        "should show the node and treat function as callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should show the node and treat function as callback",
          "duration": 2
        },
        "should hide the node and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should hide the node and fire callback",
          "duration": 1
        },
        "should hide the node and treat function as callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should hide the node and treat function as callback",
          "duration": 2
        },
        "should toggle the node view on": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should toggle the node view on",
          "duration": 1
        },
        "should toggle the node view on and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should toggle the node view on and fire callback",
          "duration": 2
        },
        "should force toggle the node view on": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view on",
          "duration": 2
        },
        "should force toggle the node view on and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view on and fire callback",
          "duration": 1
        },
        "should force toggle the node view off": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view off",
          "duration": 1
        },
        "should force toggle the node view off and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view off and fire callback",
          "duration": 2
        },
        "should set text for textNode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set text for textNode",
          "duration": 1
        },
        "should append to the given node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append to the given node",
          "duration": 5
        },
        "should append to the given DOM node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append to the given DOM node",
          "duration": 8
        },
        "should wrap the node with the given html": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the node with the given html",
          "duration": 9
        },
        "should wrap the node with the given DOM node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the node with the given DOM node",
          "duration": 5
        },
        "should wrap the node with the given node instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the node with the given node instance",
          "duration": 11
        },
        "should wrap the paragraph with a div": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the paragraph with a div",
          "duration": 9
        },
        "should remove the node from its parent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should remove the node from its parent",
          "duration": 11
        },
        "should return true for fragment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return true for fragment",
          "duration": 5
        },
        "should create a caption element": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create a caption element",
          "duration": 6
        },
        "should replace node with the given node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given node",
          "duration": 8
        },
        "should replace node with the given dom node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given dom node",
          "duration": 10
        },
        "should replace node with the given html": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given html",
          "duration": 9
        },
        "should replace node with the given html and return the replaced node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given html and return the replaced node",
          "duration": 9
        },
        "should append the given html and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append the given html and return the new node",
          "duration": 8
        },
        "should append the given nodelist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append the given nodelist",
          "duration": 9
        },
        "should append the given nodelist and return a NodeList instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append the given nodelist and return a NodeList instance",
          "duration": 9
        },
        "should insert the given html and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the given html and return the new node",
          "duration": 8
        },
        "should insert the given nodelist before the given node and return the nodelist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the given nodelist before the given node and return the nodelist",
          "duration": 9
        },
        "should insert the node before the given node and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the node before the given node and return the new node",
          "duration": 9
        },
        "should insert the given node before the given dom node and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the given node before the given dom node and return the new node",
          "duration": 5
        },
        "should empty the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should empty the node",
          "duration": 6
        },
        "should empty the node and recursively destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should empty the node and recursively destroy",
          "duration": 6
        },
        "should empty the nodelist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should empty the nodelist",
          "duration": 11
        },
        "should load the content from the given url into the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should load the content from the given url into the node",
          "duration": 21
        },
        "should load the query result from the given url into the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should load the query result from the given url into the node",
          "duration": 17
        },
        "should call method with node context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should call method with node context",
          "duration": 10
        },
        "should clear inline styles": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear inline styles",
          "duration": 8
        },
        "should apply inline opacity": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should apply inline opacity",
          "duration": 6
        },
        "should accept document Node instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should accept document Node instance",
          "duration": 8
        },
        "should destroy recursively": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should destroy recursively",
          "duration": 3
        },
        "should return the DOM node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return the DOM node",
          "duration": 1
        },
        "should return the DOM nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return the DOM nodes",
          "duration": 1
        },
        "should not cache document fragment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should not cache document fragment",
          "duration": 6
        }
      },
      "generateID": {
        "name": "generateID",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "should generate a unique ID": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should generate a unique ID",
          "duration": 5
        },
        "should return exising ID": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return exising ID",
          "duration": 5
        }
      },
      "new Y.Node()": {
        "name": "new Y.Node()",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "should generate a fresh instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should generate a fresh instance",
          "duration": 1
        },
        "compareTo should pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareTo should pass",
          "duration": 2
        }
      },
      "NodeList API": {
        "name": "NodeList API",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 20,
        "type": "testcase",
        "should have the create API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should have the create API",
          "duration": 1
        },
        "should have the view API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should have the view API",
          "duration": 1
        },
        "should have the event API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should have the event API",
          "duration": 1
        },
        "should create empty NodeList from empty arguments": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty arguments",
          "duration": 1
        },
        "should create empty NodeList from empty string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty string",
          "duration": 1
        },
        "should create empty NodeList from empty arguments via Y.all": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty arguments via Y.all",
          "duration": 1
        },
        "should create empty NodeList from empty string via Y.all": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty string via Y.all",
          "duration": 1
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:16 PM"
  },
  {
    "name": "Parallel",
    "passed": 10,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 10,
    "duration": 921,
    "type": "report",
    "Parallel Tests": {
      "name": "Parallel Tests",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 896,
      "type": "testcase",
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 1
      },
      "test_stack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stack",
        "duration": 121
      },
      "test_results": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_results",
        "duration": 117
      },
      "test_returns_data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_returns_data",
        "duration": 117
      },
      "test_nocontext": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_nocontext",
        "duration": 151
      },
      "test_context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_context",
        "duration": 116
      },
      "test_add_nofn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_nofn",
        "duration": 2
      },
      "test_add_nofn_one_arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_nofn_one_arg",
        "duration": 1
      },
      "test_add_nofn_two_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_nofn_two_args",
        "duration": 1
      },
      "test_results_order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_results_order",
        "duration": 105
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:18 PM"
  },
  {
    "name": "Handlebars",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 19,
    "duration": 200,
    "type": "report",
    "Sanity": {
      "name": "Sanity",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 6,
      "duration": 64,
      "type": "testcase",
      "precompile() should precompile a template string to JS": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "precompile() should precompile a template string to JS"
      },
      "compile() should compile a template string to a function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compile() should compile a template string to a function",
        "duration": 5
      },
      "`0` should be considered a non-empty value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`0` should be considered a non-empty value",
        "duration": 2
      },
      "`false` should be considered empty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`false` should be considered empty",
        "duration": 2
      },
      "`null` should be considered empty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`null` should be considered empty",
        "duration": 2
      },
      "`undefined` should be considered empty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`undefined` should be considered empty",
        "duration": 3
      }
    },
    "YUI Extras": {
      "name": "YUI Extras",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 43,
      "type": "testcase",
      "isEmpty() should be true for `false`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for `false`",
        "duration": 1
      },
      "isEmpty() should be true for `null`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for `null`",
        "duration": 1
      },
      "isEmpty() should be true for `undefined`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for `undefined`",
        "duration": 1
      },
      "isEmpty() should be true for empty arrays": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for empty arrays",
        "duration": 1
      },
      "isEmpty() should be false for non-empty arrays": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for non-empty arrays",
        "duration": 1
      },
      "isEmpty() should be false for objects and functions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for objects and functions",
        "duration": 2
      },
      "isEmpty() should be false for all numbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for all numbers",
        "duration": 2
      },
      "isEmpty() should be false for all strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for all strings",
        "duration": 1
      },
      "render() should compile and render a template string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should compile and render a template string",
        "duration": 3
      },
      "malformed template strings should throw an exception": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "malformed template strings should throw an exception",
        "duration": 7
      }
    },
    "Escaping": {
      "name": "Escaping",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "HTML characters should be escaped by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HTML characters should be escaped by default",
        "duration": 2
      },
      "Existing &amp; entities should be double-escaped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Existing &amp; entities should be double-escaped",
        "duration": 2
      },
      "SafeStrings should not be escaped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "SafeStrings should not be escaped",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:19 PM"
  },
  {
    "name": "Focus Manager",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 195,
    "type": "report",
    "FocusManager Tests": {
      "name": "FocusManager Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 185,
      "type": "testcase",
      "testActiveDescendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testActiveDescendant",
        "duration": 43
      },
      "testDescendants": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDescendants",
        "duration": 31
      },
      "testFocusedAttribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusedAttribute",
        "duration": 29
      },
      "testFocusClassAttribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusClassAttribute",
        "duration": 26
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:20 PM"
  },
  {
    "name": "ImageLoader",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 1183,
    "type": "report",
    "Setting Background Urls": {
      "name": "Setting Background Urls",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 27,
      "type": "testcase",
      "testBgImg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBgImg",
        "duration": 6
      }
    },
    "Setting Source Urls": {
      "name": "Setting Source Urls",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 12,
      "type": "testcase",
      "testSrcImg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSrcImg",
        "duration": 7
      }
    },
    "Class Name Fetching": {
      "name": "Class Name Fetching",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClassNames",
        "duration": 7
      }
    },
    "addTrigger test": {
      "name": "addTrigger test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 7,
      "type": "testcase",
      "testAddTrigger": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddTrigger",
        "duration": 6
      }
    },
    "custom trigger test": {
      "name": "custom trigger test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "testCustomTrigger": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomTrigger",
        "duration": 5
      }
    },
    "local object custom trigger test": {
      "name": "local object custom trigger test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testLocalObjectCustomTrigger": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalObjectCustomTrigger",
        "duration": 6
      }
    },
    "Image Sizing": {
      "name": "Image Sizing",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 20,
      "type": "testcase",
      "testImageVisibility": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testImageVisibility",
        "duration": 7
      },
      "testImageSizing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testImageSizing",
        "duration": 5
      }
    },
    "Trigger Removal for Competing Groups' Triggers": {
      "name": "Trigger Removal for Competing Groups' Triggers",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 11,
      "type": "testcase",
      "testCompetingTriggers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCompetingTriggers",
        "duration": 10
      }
    },
    "Fold Conditional Loading": {
      "name": "Fold Conditional Loading",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 12,
      "type": "testcase",
      "testFoldChecks": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFoldChecks",
        "duration": 10
      }
    },
    "time limit test": {
      "name": "time limit test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1046,
      "type": "testcase",
      "testTimeLimit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTimeLimit",
        "duration": 1034
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:22 PM"
  },
  {
    "name": "Profiler",
    "passed": 15,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 15,
    "duration": 141,
    "type": "report",
    "Profiler Registration Tests": {
      "name": "Profiler Registration Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 33,
      "type": "testcase",
      "testInstrument": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstrument",
        "duration": 1
      },
      "testRegisterFunction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterFunction",
        "duration": 1
      },
      "testRegisterGlobalFunction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterGlobalFunction",
        "duration": 1
      },
      "testRegisterGlobalFunctionOnGlobalObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterGlobalFunctionOnGlobalObject",
        "duration": 7
      },
      "testRegisterObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterObject",
        "duration": 1
      },
      "testRegisterConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterConstructor",
        "duration": 1
      },
      "testRegisterConstructorWithInheritance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterConstructorWithInheritance",
        "duration": 1
      },
      "testFunctionAccuracy1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionAccuracy1",
        "duration": 1
      },
      "testFunctionAccuracy2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionAccuracy2",
        "duration": 2
      }
    },
    "Profiler Stopwatch Tests": {
      "name": "Profiler Stopwatch Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 15,
      "type": "testcase",
      "testStartStop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStartStop",
        "duration": 2
      },
      "testStartStopPause": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStartStopPause",
        "duration": 6
      },
      "testStartTwice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStartTwice",
        "duration": 4
      }
    },
    "Profiler Report Data Tests": {
      "name": "Profiler Report Data Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 12,
      "type": "testcase",
      "testGetReport": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetReport",
        "duration": 1
      },
      "testGetCallCount": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetCallCount",
        "duration": 1
      },
      "testGetMath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetMath",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:23:23 PM"
  },
  {
    "name": "Editor",
    "passed": 9,
    "failed": 22,
    "errors": 0,
    "ignored": 0,
    "total": 31,
    "duration": 81307,
    "type": "report",
    "Editor Tests": {
      "name": "Editor Tests",
      "passed": 9,
      "failed": 22,
      "errors": 0,
      "ignored": 0,
      "total": 31,
      "duration": 81231,
      "type": "testcase",
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 1
      },
      "test_frame": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "test_frame",
        "duration": 15
      },
      "test_frame_use": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property '__use' of undefined or null reference",
        "type": "test",
        "name": "test_frame_use",
        "duration": 12
      },
      "test_frame_general": {
        "result": "fail",
        "message": "iframe node getter failed\nExpected: IFRAME ms__id8432 (object)\nActual: null (object)",
        "type": "test",
        "name": "test_frame_general",
        "duration": 19
      },
      "test: _DOMPaste": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'config' of undefined or null reference",
        "type": "test",
        "name": "test: _DOMPaste",
        "duration": 20
      },
      "test_frame_destroy": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'one' of undefined or null reference",
        "type": "test",
        "name": "test_frame_destroy",
        "duration": 24
      },
      "test_editor": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "test_editor",
        "duration": 34
      },
      "test_copy_styles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_copy_styles",
        "duration": 68
      },
      "test_resolve_node": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'one' of undefined or null reference",
        "type": "test",
        "name": "test_resolve_node",
        "duration": 18
      },
      "test_get_content": {
        "result": "fail",
        "message": "getContent failed to get the editor content\nExpected: hello <b>world<\/b>!! (string)\nActual:  (string)",
        "type": "test",
        "name": "test_get_content",
        "duration": 17
      },
      "test_font_size_normalize": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_font_size_normalize",
        "duration": 14
      },
      "test_selection_font_removal": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'Node' of undefined or null reference",
        "type": "test",
        "name": "test_selection_font_removal",
        "duration": 20
      },
      "test_gettext": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'Node' of undefined or null reference",
        "type": "test",
        "name": "test_gettext",
        "duration": 17
      },
      "test_selection_general": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'EditorSelection' of undefined or null reference",
        "type": "test",
        "name": "test_selection_general",
        "duration": 17
      },
      "test_selection_methods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_selection_methods",
        "duration": 6
      },
      "test: EditorSelection": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'EditorSelection' of undefined or null reference",
        "type": "test",
        "name": "test: EditorSelection",
        "duration": 15
      },
      "test_execCommands": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'EditorSelection' of undefined or null reference",
        "type": "test",
        "name": "test_execCommands",
        "duration": 18
      },
      "test_window": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'get' of undefined or null reference",
        "type": "test",
        "name": "test_window",
        "duration": 17
      },
      "test_doc": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'get' of undefined or null reference",
        "type": "test",
        "name": "test_doc",
        "duration": 17
      },
      "test: selection.remove()": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'EditorSelection' of undefined or null reference",
        "type": "test",
        "name": "test: selection.remove()",
        "duration": 17
      },
      "test_destroy": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'one' of undefined or null reference",
        "type": "test",
        "name": "test_destroy",
        "duration": 18
      },
      "test_br_plugin": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "test_br_plugin",
        "duration": 57
      },
      "test_para_plugin": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "test_para_plugin",
        "duration": 36
      },
      "test_double_plug_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_double_plug_setup",
        "duration": 7
      },
      "test_double_plug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_double_plug",
        "duration": 12
      },
      "test_double_down": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "test_double_down",
        "duration": 19
      },
      "test_double_plug_setup2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_double_plug_setup2",
        "duration": 6
      },
      "test_double_plug2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_double_plug2",
        "duration": 8
      },
      "test_double_down2": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "test_double_down2",
        "duration": 20
      },
      "test_bidi_noplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bidi_noplug",
        "duration": 19
      },
      "test_bidi_plug": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'one' of undefined or null reference",
        "type": "test",
        "name": "test_bidi_plug",
        "duration": 14
      }
    },
    "timestamp": "Friday, September 28, 2012 3:24:45 PM"
  },
  {
    "name": "Event: ValueChange",
    "passed": 13,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 16,
    "duration": 2772,
    "type": "report",
    "Basic": {
      "name": "Basic",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 12,
      "duration": 2118,
      "type": "testcase",
      "valuechange event should start polling on mousedown and fire an event when the value changes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange event should start polling on mousedown and fire an event when the value changes",
        "duration": 83
      },
      "valuechange should support textareas as well": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should support textareas as well",
        "duration": 73
      },
      "valuechange should start polling on keydown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should start polling on keydown",
        "duration": 84
      },
      "valuechange should stop polling on blur": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "valuechange should stop polling on blur"
      },
      "valuechange should stop polling on blur - with blur()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should stop polling on blur - with blur()",
        "duration": 430
      },
      "valuechange should start polling on focus": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "valuechange should start polling on focus"
      },
      "valuechange should start polling on focus - with focus()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should start polling on focus - with focus()",
        "duration": 67
      },
      "valuechange should not report stale changes that occurred while a node was not focused": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "valuechange should not report stale changes that occurred while a node was not focused"
      },
      "valuechange should not report stale changes that occurred while a node was not focused - with focus() and blur()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should not report stale changes that occurred while a node was not focused - with focus() and blur()",
        "duration": 235
      },
      "valuechange should start polling on keyup for IME keystrokes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should start polling on keyup for IME keystrokes",
        "duration": 638
      },
      "valuechange should stop polling after timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should stop polling after timeout",
        "duration": 252
      },
      "valueChange should be an alias for valuechange for backcompat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valueChange should be an alias for valuechange for backcompat",
        "duration": 68
      }
    },
    "Delegation": {
      "name": "Delegation",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 577,
      "type": "testcase",
      "delegation should be supported on input nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegation should be supported on input nodes",
        "duration": 109
      },
      "delegation should be supported on textareas": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegation should be supported on textareas",
        "duration": 88
      },
      "delegate filters should work properly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegate filters should work properly",
        "duration": 92
      },
      "multiple delegated handlers should be supported": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "multiple delegated handlers should be supported",
        "duration": 256
      }
    },
    "timestamp": "Friday, September 28, 2012 3:24:49 PM"
  },
  {
    "name": "Loader: Static",
    "passed": 62,
    "failed": 10,
    "errors": 0,
    "ignored": 0,
    "total": 72,
    "duration": 110373,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 62,
      "failed": 10,
      "errors": 0,
      "ignored": 0,
      "total": 72,
      "duration": 110295,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 22
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 75
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 74
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 48
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 89
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 103
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 65
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 62
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 60
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 61
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 17
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 15
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 59
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 54
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 61
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 63
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 41
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 57
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 64
      },
      "test_group_filters": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_group_filters",
        "duration": 10109
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 64
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 51
      },
      "test_iter": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_iter",
        "duration": 66
      },
      "test_progress": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_progress",
        "duration": 92
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 24
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 20
      },
      "test_condpattern": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_condpattern",
        "duration": 10080
      },
      "test_cond_with_test_function": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 10080
      },
      "test_cond_no_test_or_ua": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 10086
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 18
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 17
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 17
      },
      "test_css_stamp": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 10156
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 2
      },
      "testing fetchCSS false": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 10239
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 38
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 95
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 13
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 13
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 12
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 51
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 41
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 42
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 19
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 19
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 47
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 44
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 45
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 45
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 42
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 55
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 64
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 52
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 47
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 57
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 42
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 42
      },
      "test: gallery skinnable": {
        "result": "fail",
        "message": "Failed to load css for gallery module\nExpected: 9 (number)\nActual: 8 (number)",
        "type": "test",
        "name": "test: gallery skinnable",
        "duration": 26
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 27
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 229
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 127
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 128
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 22
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 42
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 41
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 41
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 40
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 43
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 135
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 38
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 47
      },
      "test external lang 1": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test external lang 1",
        "duration": 10174
      }
    },
    "timestamp": "Friday, September 28, 2012 3:26:40 PM"
  },
  {
    "name": "Loader: On Page",
    "passed": 62,
    "failed": 10,
    "errors": 0,
    "ignored": 0,
    "total": 72,
    "duration": 150954,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 62,
      "failed": 10,
      "errors": 0,
      "ignored": 0,
      "total": 72,
      "duration": 150880,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 22
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 96
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 62
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 36
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 62
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 62
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 98
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 64
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 60
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 60
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 16
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 15
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 60
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 53
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 59
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 58
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 37
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 57
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 62
      },
      "test_group_filters": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_group_filters",
        "duration": 10111
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 61
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 51
      },
      "test_iter": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_iter",
        "duration": 63
      },
      "test_progress": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_progress",
        "duration": 102
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 30
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 20
      },
      "test_condpattern": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_condpattern",
        "duration": 10164
      },
      "test_cond_with_test_function": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 10063
      },
      "test_cond_no_test_or_ua": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 10081
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 23
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 26
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 30
      },
      "test_css_stamp": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 10169
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 2
      },
      "testing fetchCSS false": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 10173
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 38
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 95
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 13
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 13
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 13
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 50
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 41
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 42
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 20
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 20
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 45
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 43
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 44
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 44
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 41
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 62
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 69
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 49
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 49
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 58
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 43
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 43
      },
      "test: gallery skinnable": {
        "result": "fail",
        "message": "Failed to load css for gallery module\nExpected: 9 (number)\nActual: 8 (number)",
        "type": "test",
        "name": "test: gallery skinnable",
        "duration": 28
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 26
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 134
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 192
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 130
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 22
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 42
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 42
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 41
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 41
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 43
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 137
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 38
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 46
      },
      "test external lang 1": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test external lang 1",
        "duration": 10153
      }
    },
    "timestamp": "Friday, September 28, 2012 3:29:12 PM"
  },
  {
    "name": "Loader: Full",
    "passed": 62,
    "failed": 10,
    "errors": 0,
    "ignored": 0,
    "total": 72,
    "duration": 189137,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 62,
      "failed": 10,
      "errors": 0,
      "ignored": 0,
      "total": 72,
      "duration": 189104,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 20
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 56
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 62
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 36
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 62
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 60
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 63
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 105
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 60
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 60
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 16
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 14
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 59
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 53
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 60
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 58
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 38
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 53
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 61
      },
      "test_group_filters": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_group_filters",
        "duration": 10106
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 60
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 44
      },
      "test_iter": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_iter",
        "duration": 54
      },
      "test_progress": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_progress",
        "duration": 86
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 23
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 19
      },
      "test_condpattern": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_condpattern",
        "duration": 10070
      },
      "test_cond_with_test_function": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 10067
      },
      "test_cond_no_test_or_ua": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 10084
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 22
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 25
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 28
      },
      "test_css_stamp": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 10168
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 2
      },
      "testing fetchCSS false": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 10169
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 38
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 96
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 12
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 11
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 11
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 51
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 42
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 42
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 18
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 18
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 45
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 43
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 44
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 44
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 45
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 57
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 67
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 48
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 48
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 58
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 43
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 43
      },
      "test: gallery skinnable": {
        "result": "fail",
        "message": "Failed to load css for gallery module\nExpected: 9 (number)\nActual: 8 (number)",
        "type": "test",
        "name": "test: gallery skinnable",
        "duration": 25
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 23
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 131
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 188
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 129
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 20
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 43
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 42
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 41
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 41
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 43
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 134
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 35
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 46
      },
      "test external lang 1": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test external lang 1",
        "duration": 10164
      }
    },
    "timestamp": "Friday, September 28, 2012 3:32:22 PM"
  },
  {
    "name": "Loader: Fetch",
    "passed": 62,
    "failed": 10,
    "errors": 0,
    "ignored": 0,
    "total": 72,
    "duration": 125361,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 62,
      "failed": 10,
      "errors": 0,
      "ignored": 0,
      "total": 72,
      "duration": 125326,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 23
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 63
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 60
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 36
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 62
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 62
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 63
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 100
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 63
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 60
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 17
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 16
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 60
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 54
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 59
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 59
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 38
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 53
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 59
      },
      "test_group_filters": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_group_filters",
        "duration": 10099
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 61
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 56
      },
      "test_iter": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_iter",
        "duration": 55
      },
      "test_progress": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'VERSION' of undefined or null reference",
        "type": "test",
        "name": "test_progress",
        "duration": 90
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 24
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 19
      },
      "test_condpattern": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_condpattern",
        "duration": 10086
      },
      "test_cond_with_test_function": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 10050
      },
      "test_cond_no_test_or_ua": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 10081
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 25
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 26
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 31
      },
      "test_css_stamp": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 10161
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 2
      },
      "testing fetchCSS false": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 10180
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 38
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 95
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 14
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 13
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 12
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 51
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 42
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 42
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 20
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 19
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 48
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 44
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 45
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 44
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 42
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 55
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 63
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 48
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 47
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 58
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 43
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 43
      },
      "test: gallery skinnable": {
        "result": "fail",
        "message": "Failed to load css for gallery module\nExpected: 9 (number)\nActual: 8 (number)",
        "type": "test",
        "name": "test: gallery skinnable",
        "duration": 27
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 27
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 138
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 206
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 128
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 22
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 42
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 41
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 41
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 41
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 42
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 136
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 38
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 47
      },
      "test external lang 1": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test external lang 1",
        "duration": 10175
      }
    },
    "timestamp": "Friday, September 28, 2012 3:34:28 PM"
  },
  {
    "name": "Event: Simulate",
    "passed": 67,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 67,
    "duration": 771,
    "type": "report",
    "MouseEvent Tests": {
      "name": "MouseEvent Tests",
      "passed": 44,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 44,
      "duration": 443,
      "type": "testsuite",
      "Event 'click' Tests": {
        "name": "Event 'click' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 39,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 2
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'dblclick' Tests": {
        "name": "Event 'dblclick' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 34,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 3
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 1
        }
      },
      "Event 'mousedown' Tests": {
        "name": "Event 'mousedown' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 25,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 1
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 1
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'mouseup' Tests": {
        "name": "Event 'mouseup' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 90,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 1
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 1
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 1
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 2
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'mouseover' Tests": {
        "name": "Event 'mouseover' Tests",
        "passed": 8,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 8,
        "duration": 139,
        "type": "testcase",
        "testRelatedTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRelatedTarget",
          "duration": 2
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 3
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 1
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 2
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 1
        }
      },
      "Event 'mouseout' Tests": {
        "name": "Event 'mouseout' Tests",
        "passed": 8,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 8,
        "duration": 29,
        "type": "testcase",
        "testRelatedTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRelatedTarget",
          "duration": 2
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 1
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 1
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 1
        }
      }
    },
    "KeyEvent Tests": {
      "name": "KeyEvent Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 252,
      "type": "testsuite",
      "Event 'keyup' Tests": {
        "name": "Event 'keyup' Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 63,
        "type": "testcase",
        "testKeyCode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testKeyCode",
          "duration": 5
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 4
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 6
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 5
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 4
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 5
        }
      },
      "Event 'keydown' Tests": {
        "name": "Event 'keydown' Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 136,
        "type": "testcase",
        "testKeyCode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testKeyCode",
          "duration": 5
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 4
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 5
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 17
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 35
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 15
        }
      },
      "Event 'keypress' Tests": {
        "name": "Event 'keypress' Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 45,
        "type": "testcase",
        "testCharCode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCharCode",
          "duration": 5
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 6
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 4
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 4
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 9
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 5
        }
      }
    },
    "UIEvents Tests": {
      "name": "UIEvents Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 41,
      "type": "testsuite",
      "Event 'change' Tests": {
        "name": "Event 'change' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 7,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        }
      },
      "Event 'select' Tests": {
        "name": "Event 'select' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        }
      },
      "Event 'submit' Tests": {
        "name": "Event 'submit' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        }
      },
      "Event 'blur' Tests": {
        "name": "Event 'blur' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 8,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        }
      },
      "Event 'focus' Tests": {
        "name": "Event 'focus' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 7,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:34:30 PM"
  },
  {
    "name": "YUI: User Agent",
    "passed": 199,
    "failed": 1,
    "errors": 0,
    "ignored": 0,
    "total": 200,
    "duration": 1007,
    "type": "report",
    "Node.js": {
      "name": "Node.js",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 75,
      "type": "testcase",
      "test: Node.js version": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Node.js version",
        "duration": 1
      },
      "test: Node.js platform": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Node.js platform",
        "duration": 1
      }
    },
    "IE 10\/Windows 8 App": {
      "name": "IE 10\/Windows 8 App",
      "passed": 1,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 13,
      "type": "testcase",
      "test: win8 app": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: win8 app",
        "duration": 1
      },
      "test: not win8 app": {
        "result": "fail",
        "message": "Value should be false.\nExpected: false (boolean)\nActual: true (boolean)",
        "type": "test",
        "name": "test: not win8 app",
        "duration": 7
      }
    },
    "General": {
      "name": "General",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 16,
      "type": "testcase",
      "compareVersions() should compare major versions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should compare major versions",
        "duration": 1
      },
      "compareVersions() should compare major + minor versions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should compare major + minor versions",
        "duration": 1
      },
      "compareVersions() should compare major + minor + build versions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should compare major + minor + build versions",
        "duration": 1
      },
      "compareVersions() should handle null\/undefined\/empty input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should handle null\/undefined\/empty input",
        "duration": 1
      }
    },
    "User Agent: Chrome": {
      "name": "User Agent: Chrome",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 73,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0",
        "duration": 1
      }
    },
    "User Agent: Chromium": {
      "name": "User Agent: Chromium",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 33,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2",
        "duration": 1
      }
    },
    "User Agent: Firefox": {
      "name": "User Agent: Firefox",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 63,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3",
        "duration": 3
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre",
        "duration": 1
      }
    },
    "User Agent: Firefox (BonEcho)": {
      "name": "User Agent: Firefox (BonEcho)",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0",
        "duration": 1
      }
    },
    "User Agent: Firefox (GranParadiso)": {
      "name": "User Agent: Firefox (GranParadiso)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8",
        "duration": 1
      }
    },
    "User Agent: Firefox (Lorentz)": {
      "name": "User Agent: Firefox (Lorentz)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0",
        "duration": 1
      }
    },
    "User Agent: Firefox (Minefield)": {
      "name": "User Agent: Firefox (Minefield)",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 10,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre",
        "duration": 1
      }
    },
    "User Agent: Firefox (Namoroka)": {
      "name": "User Agent: Firefox (Namoroka)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre",
        "duration": 1
      }
    },
    "User Agent: Firefox (Shiretoko)": {
      "name": "User Agent: Firefox (Shiretoko)",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre",
        "duration": 1
      }
    },
    "User Agent: IE": {
      "name": "User Agent: IE",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 66,
      "type": "testcase",
      "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "duration": 1
      },
      "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)",
        "duration": 1
      }
    },
    "User Agent: Opera": {
      "name": "User Agent: Opera",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 66,
      "type": "testcase",
      "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00",
        "duration": 1
      },
      "test: Opera\/7.03 (Windows NT 5.0; U) [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/7.03 (Windows NT 5.0; U) [en]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24",
        "duration": 1
      },
      "test: Opera\/6.0 (Windows 2000; U) [fr]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/6.0 (Windows 2000; U) [fr]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]",
        "duration": 1
      },
      "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)",
        "duration": 1
      },
      "test: Opera\/5.11 (Windows 98; U) [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/5.11 (Windows 98; U) [en]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00",
        "duration": 1
      },
      "test: Opera\/9.02 (Windows XP; U; ru)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.02 (Windows XP; U; ru)",
        "duration": 1
      },
      "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]",
        "duration": 1
      }
    },
    "User Agent: Safari": {
      "name": "User Agent: Safari",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 70,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7",
        "duration": 1
      }
    },
    "User Agent: Android Webkit": {
      "name": "User Agent: Android Webkit",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1",
        "duration": 1
      }
    },
    "User Agent: IE Mobile": {
      "name": "User Agent: IE Mobile",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 26,
      "type": "testcase",
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)",
        "duration": 1
      },
      "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)",
        "duration": 1
      },
      "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)",
        "duration": 1
      }
    },
    "User Agent: Mobile Firefox": {
      "name": "User Agent: Mobile Firefox",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre",
        "duration": 1
      }
    },
    "User Agent: Mobile Safari": {
      "name": "User Agent: Mobile Safari",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 29,
      "type": "testcase",
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5",
        "duration": 1
      },
      "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+",
        "duration": 1
      }
    },
    "User Agent: Opera Mini": {
      "name": "User Agent: Opera Mini",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 29,
      "type": "testcase",
      "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30",
        "duration": 1
      },
      "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)",
        "duration": 1
      },
      "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)",
        "duration": 1
      },
      "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15",
        "duration": 1
      },
      "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0",
        "duration": 1
      },
      "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0",
        "duration": 1
      }
    },
    "User Agent: Opera Mobile": {
      "name": "User Agent: Opera Mobile",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 29,
      "type": "testcase",
      "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00",
        "duration": 1
      },
      "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00",
        "duration": 1
      },
      "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00",
        "duration": 1
      },
      "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00",
        "duration": 1
      },
      "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)",
        "duration": 1
      },
      "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5",
        "duration": 1
      }
    },
    "User Agent: Palm Pre web browser": {
      "name": "User Agent: Palm Pre web browser",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 9,
      "type": "testcase",
      "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0",
        "duration": 1
      }
    },
    "User Agent: YUI Internal": {
      "name": "User Agent: YUI Internal",
      "passed": 67,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 67,
      "duration": 269,
      "type": "testcase",
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
        "duration": 2
      },
      "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0",
        "duration": 2
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 2
      },
      "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
        "duration": 2
      },
      "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3",
        "duration": 1
      },
      "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
        "duration": 2
      },
      "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:34:32 PM"
  },
  {
    "name": "YUI: Object",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 198,
    "type": "report",
    "Core": {
      "name": "Core",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 103,
      "type": "testcase",
      "test_create": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create",
        "duration": 1
      },
      "test_each": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_each",
        "duration": 1
      },
      "test_getValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getValue",
        "duration": 1
      },
      "test_hasKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_hasKey",
        "duration": 1
      },
      "test_hasValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_hasValue",
        "duration": 1
      },
      "test_isEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_isEmpty",
        "duration": 1
      },
      "test: isEmpty() should work on non-objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isEmpty() should work on non-objects",
        "duration": 0
      },
      "test_keys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_keys",
        "duration": 0
      },
      "test_keys_dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_keys_dom",
        "duration": 1
      },
      "test_owns": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_owns",
        "duration": 1
      },
      "test_setValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_setValue",
        "duration": 0
      },
      "test_size": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_size",
        "duration": 0
      },
      "size() should return 0 for non-objects [legacy behavior]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "size() should return 0 for non-objects [legacy behavior]",
        "duration": 36
      },
      "test_some": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_some",
        "duration": 1
      },
      "test_values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_values",
        "duration": 1
      },
      "test_people_messing_up_object_prototype": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_people_messing_up_object_prototype",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:34:33 PM"
  },
  {
    "name": "YUI: Lang",
    "passed": 21,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 21,
    "duration": 177,
    "type": "report",
    "Lang tests": {
      "name": "Lang tests",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 133,
      "type": "testcase",
      "_isNative() should return true for native functions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_isNative() should return true for native functions",
        "duration": 1
      },
      "_isNative() should return false for non-native functions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_isNative() should return false for non-native functions",
        "duration": 1
      },
      "test_is_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_array",
        "duration": 1
      },
      "test_is_array_dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_array_dom",
        "duration": 1
      },
      "test_is_boolean": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_boolean",
        "duration": 1
      },
      "test_is_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_function",
        "duration": 1
      },
      "test_is_function_dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_function_dom",
        "duration": 1
      },
      "test_is_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_null",
        "duration": 0
      },
      "test_is_number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_number",
        "duration": 0
      },
      "test_is_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_object",
        "duration": 1
      },
      "test_is_object_dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_object_dom",
        "duration": 1
      },
      "test_is_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_string",
        "duration": 1
      },
      "test_is_undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_undefined",
        "duration": 0
      },
      "test_trim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_trim",
        "duration": 1
      },
      "test_trim_left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_trim_left",
        "duration": 1
      },
      "test_trim_right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_trim_right",
        "duration": 1
      },
      "test_is_value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_value",
        "duration": 1
      },
      "test_is_date": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_date",
        "duration": 1
      },
      "test_is_date_dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_date_dom",
        "duration": 1
      },
      "test_now": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_now",
        "duration": 1
      },
      "test_sub": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_sub",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:34:34 PM"
  },
  {
    "name": "YUI: All",
    "passed": 301,
    "failed": 6,
    "errors": 0,
    "ignored": 2,
    "total": 309,
    "duration": 43295,
    "type": "report",
    "YUI: User Agent": {
      "name": "YUI: User Agent",
      "passed": 198,
      "failed": 1,
      "errors": 0,
      "ignored": 1,
      "total": 200,
      "duration": 1005,
      "type": "testsuite",
      "Node.js": {
        "name": "Node.js",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 2,
        "duration": 28,
        "type": "testcase",
        "test: Node.js version": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Node.js version",
          "duration": 5
        },
        "test: Node.js platform": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: Node.js platform"
        }
      },
      "IE 10\/Windows 8 App": {
        "name": "IE 10\/Windows 8 App",
        "passed": 1,
        "failed": 1,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 12,
        "type": "testcase",
        "test: win8 app": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: win8 app",
          "duration": 1
        },
        "test: not win8 app": {
          "result": "fail",
          "message": "Value should be false.\nExpected: false (boolean)\nActual: true (boolean)",
          "type": "test",
          "name": "test: not win8 app",
          "duration": 7
        }
      },
      "General": {
        "name": "General",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 19,
        "type": "testcase",
        "compareVersions() should compare major versions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should compare major versions",
          "duration": 1
        },
        "compareVersions() should compare major + minor versions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should compare major + minor versions",
          "duration": 2
        },
        "compareVersions() should compare major + minor + build versions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should compare major + minor + build versions",
          "duration": 1
        },
        "compareVersions() should handle null\/undefined\/empty input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should handle null\/undefined\/empty input",
          "duration": 1
        }
      },
      "User Agent: Chrome": {
        "name": "User Agent: Chrome",
        "passed": 19,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 19,
        "duration": 79,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0",
          "duration": 1
        }
      },
      "User Agent: Chromium": {
        "name": "User Agent: Chromium",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 34,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7",
          "duration": 2
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30",
          "duration": 2
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2",
          "duration": 1
        }
      },
      "User Agent: Firefox": {
        "name": "User Agent: Firefox",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 103,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5",
          "duration": 2
        },
        "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre",
          "duration": 2
        }
      },
      "User Agent: Firefox (BonEcho)": {
        "name": "User Agent: Firefox (BonEcho)",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 9,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0",
          "duration": 1
        }
      },
      "User Agent: Firefox (GranParadiso)": {
        "name": "User Agent: Firefox (GranParadiso)",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8",
          "duration": 1
        }
      },
      "User Agent: Firefox (Lorentz)": {
        "name": "User Agent: Firefox (Lorentz)",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0",
          "duration": 1
        }
      },
      "User Agent: Firefox (Minefield)": {
        "name": "User Agent: Firefox (Minefield)",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre",
          "duration": 1
        }
      },
      "User Agent: Firefox (Namoroka)": {
        "name": "User Agent: Firefox (Namoroka)",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 16,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre",
          "duration": 1
        }
      },
      "User Agent: Firefox (Shiretoko)": {
        "name": "User Agent: Firefox (Shiretoko)",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 9,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre",
          "duration": 1
        }
      },
      "User Agent: IE": {
        "name": "User Agent: IE",
        "passed": 16,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 16,
        "duration": 69,
        "type": "testcase",
        "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
          "duration": 1
        },
        "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)",
          "duration": 1
        }
      },
      "User Agent: Opera": {
        "name": "User Agent: Opera",
        "passed": 16,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 16,
        "duration": 66,
        "type": "testcase",
        "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/7.03 (Windows NT 5.0; U) [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/7.03 (Windows NT 5.0; U) [en]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24",
          "duration": 1
        },
        "test: Opera\/6.0 (Windows 2000; U) [fr]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/6.0 (Windows 2000; U) [fr]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]",
          "duration": 1
        },
        "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)",
          "duration": 1
        },
        "test: Opera\/5.11 (Windows 98; U) [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/5.11 (Windows 98; U) [en]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00",
          "duration": 1
        },
        "test: Opera\/9.02 (Windows XP; U; ru)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.02 (Windows XP; U; ru)",
          "duration": 1
        },
        "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]",
          "duration": 1
        }
      },
      "User Agent: Safari": {
        "name": "User Agent: Safari",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 38,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7",
          "duration": 1
        }
      },
      "User Agent: Android Webkit": {
        "name": "User Agent: Android Webkit",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1",
          "duration": 1
        }
      },
      "User Agent: IE Mobile": {
        "name": "User Agent: IE Mobile",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 26,
        "type": "testcase",
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)",
          "duration": 1
        },
        "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)",
          "duration": 1
        },
        "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)",
          "duration": 1
        }
      },
      "User Agent: Mobile Firefox": {
        "name": "User Agent: Mobile Firefox",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 13,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre",
          "duration": 1
        }
      },
      "User Agent: Mobile Safari": {
        "name": "User Agent: Mobile Safari",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 31,
        "type": "testcase",
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5",
          "duration": 1
        },
        "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+",
          "duration": 1
        }
      },
      "User Agent: Opera Mini": {
        "name": "User Agent: Opera Mini",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 26,
        "type": "testcase",
        "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30",
          "duration": 1
        },
        "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)",
          "duration": 1
        },
        "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)",
          "duration": 1
        },
        "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15",
          "duration": 1
        },
        "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0",
          "duration": 1
        },
        "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0",
          "duration": 1
        }
      },
      "User Agent: Opera Mobile": {
        "name": "User Agent: Opera Mobile",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 31,
        "type": "testcase",
        "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00",
          "duration": 1
        },
        "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)",
          "duration": 1
        },
        "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5",
          "duration": 1
        }
      },
      "User Agent: Palm Pre web browser": {
        "name": "User Agent: Palm Pre web browser",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0",
          "duration": 1
        }
      },
      "User Agent: YUI Internal": {
        "name": "User Agent: YUI Internal",
        "passed": 67,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 67,
        "duration": 271,
        "type": "testcase",
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
          "duration": 1
        },
        "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
          "duration": 1
        },
        "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3",
          "duration": 1
        }
      }
    },
    "YUI: All": {
      "name": "YUI: All",
      "passed": 46,
      "failed": 5,
      "errors": 0,
      "ignored": 1,
      "total": 52,
      "duration": 41986,
      "type": "testsuite",
      "Core tests": {
        "name": "Core tests",
        "passed": 28,
        "failed": 5,
        "errors": 0,
        "ignored": 1,
        "total": 34,
        "duration": 40216,
        "type": "testcase",
        "test: double skin loading from seed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: double skin loading from seed",
          "duration": 59
        },
        "test: pattern requires order": {
          "result": "fail",
          "message": "Unexpected error: Unable to get property 'util' of undefined or null reference",
          "type": "test",
          "name": "test: pattern requires order",
          "duration": 37
        },
        "cached functions should execute only once per input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "cached functions should execute only once per input",
          "duration": 1
        },
        "getLocation() should return the location object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getLocation() should return the location object",
          "duration": 1
        },
        "getLocation() should return `null` when executing in node.js": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "getLocation() should return `null` when executing in node.js"
        },
        "test_cached_undefined_null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_cached_undefined_null",
          "duration": 1
        },
        "test_guid": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_guid",
          "duration": 15
        },
        "test_stamp": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stamp",
          "duration": 24
        },
        "test_use_array": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_use_array",
          "duration": 27
        },
        "test_use_strings": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_use_strings",
          "duration": 18
        },
        "test_one_submodule": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_one_submodule",
          "duration": 33
        },
        "test_base_path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_base_path",
          "duration": 2
        },
        "test_log_params": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_log_params",
          "duration": 14
        },
        "test_global_apply_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_global_apply_config",
          "duration": 2
        },
        "test_old_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_old_config",
          "duration": 14
        },
        "test_applyTo": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_applyTo",
          "duration": 14
        },
        "test_global_config": {
          "result": "fail",
          "message": "Timeout: wait() called but resume() never called.",
          "type": "test",
          "name": "test_global_config",
          "duration": 3103
        },
        "test_multiple_ua": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multiple_ua",
          "duration": 24
        },
        "test_conditional": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_conditional",
          "duration": 18
        },
        "test_missed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_missed",
          "duration": 19
        },
        "test_attach_error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_attach_error",
          "duration": 21
        },
        "test_attach_error_silent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_attach_error_silent",
          "duration": 21
        },
        "test_attach_error_errFn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_attach_error_errFn",
          "duration": 27
        },
        "test_dump_core": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_dump_core",
          "duration": 13
        },
        "test_destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_destroy",
          "duration": 13
        },
        "test_features": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_features",
          "duration": 13
        },
        "test: requirements defined in external module": {
          "result": "fail",
          "message": "Timeout: wait() called but resume() never called.",
          "type": "test",
          "name": "test: requirements defined in external module",
          "duration": 10125
        },
        "test: domready delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: domready delay",
          "duration": 60
        },
        "test: window.onload delay": {
          "result": "fail",
          "message": "Timeout: wait() called but resume() never called.",
          "type": "test",
          "name": "test: window.onload delay",
          "duration": 10124
        },
        "test: available delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: available delay",
          "duration": 3005
        },
        "test: contentready delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: contentready delay",
          "duration": 3026
        },
        "status should be true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "status should be true",
          "duration": 75
        },
        "status should be false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "status should be false",
          "duration": 19
        },
        "test: fetch with external dependencies redefined in external file": {
          "result": "fail",
          "message": "Timeout: wait() called but resume() never called.",
          "type": "test",
          "name": "test: fetch with external dependencies redefined in external file",
          "duration": 10146
        }
      },
      "Config tests": {
        "name": "Config tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 70,
        "type": "testcase",
        "test: YUI_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: YUI_config",
          "duration": 18
        },
        "test: local config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: local config",
          "duration": 1
        },
        "test_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_config",
          "duration": 34
        }
      },
      "Later tests": {
        "name": "Later tests",
        "passed": 12,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 12,
        "duration": 1664,
        "type": "testcase",
        "test later(10, null, callback)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback)",
          "duration": 166
        },
        "test later(10, obj, callback)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, callback)",
          "duration": 182
        },
        "test later(10, obj, methodString)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, methodString)",
          "duration": 181
        },
        "test later(10, null, callback, argArray)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback, argArray)",
          "duration": 185
        },
        "test later(0, null, callback, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(0, null, callback, obj)",
          "duration": 16
        },
        "test later(o, null, setTimeout, [fn, 0])": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(o, null, setTimeout, [fn, 0])",
          "duration": 19
        },
        "test cancel later(100, null, callback)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test cancel later(100, null, callback)",
          "duration": 333
        },
        "test later(10, null, callback, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback, null, true)",
          "duration": 33
        },
        "test later(10, obj, callback, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, callback, null, true)",
          "duration": 26
        },
        "test later(10, obj, methodString, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, methodString, null, true)",
          "duration": 27
        },
        "test later(10, null, callback, argArray, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback, argArray, true)",
          "duration": 26
        },
        "test cancel later(10, null, callback, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test cancel later(10, null, callback, null, true)",
          "duration": 343
        }
      },
      "Namespace tests": {
        "name": "Namespace tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 26,
        "type": "testcase",
        "test_create_namespace": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_create_namespace",
          "duration": 1
        },
        "test_multi_args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multi_args",
          "duration": 1
        },
        "test_multi_args_dotted": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multi_args_dotted",
          "duration": 1
        }
      }
    },
    "YUI: Array": {
      "name": "YUI: Array",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 87,
      "type": "testsuite",
      "Array tests": {
        "name": "Array tests",
        "passed": 20,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 20,
        "duration": 84,
        "type": "testcase",
        "testArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArray",
          "duration": 1
        },
        "testDedupe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDedupe",
          "duration": 1
        },
        "dedupe() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "dedupe() should work on array-like objects",
          "duration": 1
        },
        "testEach": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testEach",
          "duration": 1
        },
        "each() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should handle sparse arrays correctly",
          "duration": 0
        },
        "each() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should work on array-like objects",
          "duration": 0
        },
        "testHash": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testHash",
          "duration": 1
        },
        "hash() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hash() should handle sparse arrays correctly",
          "duration": 1
        },
        "hash() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hash() should work on array-like objects",
          "duration": 0
        },
        "testIndexOf": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testIndexOf",
          "duration": 1
        },
        "indexOf() should support an ES5-compatible fromIndex arg": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should support an ES5-compatible fromIndex arg",
          "duration": 0
        },
        "indexOf() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should handle sparse arrays correctly",
          "duration": 1
        },
        "indexOf() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should work on array-like objects",
          "duration": 1
        },
        "testNumericSort": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testNumericSort",
          "duration": 0
        },
        "testSome": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testSome",
          "duration": 0
        },
        "some() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should handle sparse arrays correctly",
          "duration": 0
        },
        "some() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should work on array-like objects",
          "duration": 1
        },
        "test Array.test": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Array.test",
          "duration": 1
        },
        "test Array.test with window": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Array.test with window",
          "duration": 0
        },
        "test Array.test with dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Array.test with dom",
          "duration": 1
        }
      }
    },
    "YUI: Object": {
      "name": "YUI: Object",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 96,
      "type": "testsuite",
      "Core": {
        "name": "Core",
        "passed": 16,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 16,
        "duration": 94,
        "type": "testcase",
        "test_create": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_create",
          "duration": 1
        },
        "test_each": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_each",
          "duration": 1
        },
        "test_getValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getValue",
          "duration": 0
        },
        "test_hasKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_hasKey",
          "duration": 0
        },
        "test_hasValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_hasValue",
          "duration": 1
        },
        "test_isEmpty": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_isEmpty",
          "duration": 1
        },
        "test: isEmpty() should work on non-objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isEmpty() should work on non-objects",
          "duration": 0
        },
        "test_keys": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_keys",
          "duration": 0
        },
        "test_keys_dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_keys_dom",
          "duration": 0
        },
        "test_owns": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_owns",
          "duration": 1
        },
        "test_setValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setValue",
          "duration": 1
        },
        "test_size": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_size",
          "duration": 0
        },
        "size() should return 0 for non-objects [legacy behavior]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "size() should return 0 for non-objects [legacy behavior]",
          "duration": 29
        },
        "test_some": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_some",
          "duration": 1
        },
        "test_values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_values",
          "duration": 1
        },
        "test_people_messing_up_object_prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_people_messing_up_object_prototype",
          "duration": 1
        }
      }
    },
    "YUI: Lang": {
      "name": "YUI: Lang",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 88,
      "type": "testsuite",
      "Lang tests": {
        "name": "Lang tests",
        "passed": 21,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 21,
        "duration": 87,
        "type": "testcase",
        "_isNative() should return true for native functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_isNative() should return true for native functions",
          "duration": 1
        },
        "_isNative() should return false for non-native functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_isNative() should return false for non-native functions",
          "duration": 0
        },
        "test_is_array": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_array",
          "duration": 1
        },
        "test_is_array_dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_array_dom",
          "duration": 1
        },
        "test_is_boolean": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_boolean",
          "duration": 0
        },
        "test_is_function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_function",
          "duration": 0
        },
        "test_is_function_dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_function_dom",
          "duration": 1
        },
        "test_is_null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_null",
          "duration": 1
        },
        "test_is_number": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_number",
          "duration": 1
        },
        "test_is_object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_object",
          "duration": 0
        },
        "test_is_object_dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_object_dom",
          "duration": 1
        },
        "test_is_string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_string",
          "duration": 0
        },
        "test_is_undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_undefined",
          "duration": 1
        },
        "test_trim": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_trim",
          "duration": 1
        },
        "test_trim_left": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_trim_left",
          "duration": 0
        },
        "test_trim_right": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_trim_right",
          "duration": 0
        },
        "test_is_value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_value",
          "duration": 0
        },
        "test_is_date": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_date",
          "duration": 1
        },
        "test_is_date_dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_date_dom",
          "duration": 1
        },
        "test_now": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_now",
          "duration": 0
        },
        "test_sub": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_sub",
          "duration": 1
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:35:18 PM"
  },
  {
    "name": "YUI: Static",
    "passed": 46,
    "failed": 5,
    "errors": 0,
    "ignored": 1,
    "total": 52,
    "duration": 42132,
    "type": "report",
    "Core tests": {
      "name": "Core tests",
      "passed": 28,
      "failed": 5,
      "errors": 0,
      "ignored": 1,
      "total": 34,
      "duration": 40272,
      "type": "testcase",
      "test: double skin loading from seed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: double skin loading from seed",
        "duration": 71
      },
      "test: pattern requires order": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'util' of undefined or null reference",
        "type": "test",
        "name": "test: pattern requires order",
        "duration": 39
      },
      "cached functions should execute only once per input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cached functions should execute only once per input",
        "duration": 2
      },
      "getLocation() should return the location object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getLocation() should return the location object",
        "duration": 1
      },
      "getLocation() should return `null` when executing in node.js": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getLocation() should return `null` when executing in node.js"
      },
      "test_cached_undefined_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cached_undefined_null",
        "duration": 2
      },
      "test_guid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_guid",
        "duration": 14
      },
      "test_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stamp",
        "duration": 22
      },
      "test_use_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_array",
        "duration": 24
      },
      "test_use_strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_strings",
        "duration": 18
      },
      "test_one_submodule": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_one_submodule",
        "duration": 35
      },
      "test_base_path": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_base_path",
        "duration": 2
      },
      "test_log_params": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_log_params",
        "duration": 13
      },
      "test_global_apply_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_apply_config",
        "duration": 2
      },
      "test_old_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_old_config",
        "duration": 14
      },
      "test_applyTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_applyTo",
        "duration": 13
      },
      "test_global_config": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_global_config",
        "duration": 3106
      },
      "test_multiple_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_ua",
        "duration": 23
      },
      "test_conditional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_conditional",
        "duration": 17
      },
      "test_missed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_missed",
        "duration": 18
      },
      "test_attach_error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error",
        "duration": 21
      },
      "test_attach_error_silent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_silent",
        "duration": 20
      },
      "test_attach_error_errFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_errFn",
        "duration": 26
      },
      "test_dump_core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump_core",
        "duration": 13
      },
      "test_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_destroy",
        "duration": 12
      },
      "test_features": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_features",
        "duration": 12
      },
      "test: requirements defined in external module": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: requirements defined in external module",
        "duration": 10103
      },
      "test: domready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: domready delay",
        "duration": 67
      },
      "test: window.onload delay": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: window.onload delay",
        "duration": 10117
      },
      "test: available delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: available delay",
        "duration": 3043
      },
      "test: contentready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: contentready delay",
        "duration": 3005
      },
      "status should be true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be true",
        "duration": 67
      },
      "status should be false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be false",
        "duration": 19
      },
      "test: fetch with external dependencies redefined in external file": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: fetch with external dependencies redefined in external file",
        "duration": 10138
      }
    },
    "Config tests": {
      "name": "Config tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 70,
      "type": "testcase",
      "test: YUI_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: YUI_config",
        "duration": 18
      },
      "test: local config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local config",
        "duration": 1
      },
      "test_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_config",
        "duration": 32
      }
    },
    "Later tests": {
      "name": "Later tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1661,
      "type": "testcase",
      "test later(10, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback)",
        "duration": 177
      },
      "test later(10, obj, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback)",
        "duration": 181
      },
      "test later(10, obj, methodString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString)",
        "duration": 180
      },
      "test later(10, null, callback, argArray)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray)",
        "duration": 181
      },
      "test later(0, null, callback, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(0, null, callback, obj)",
        "duration": 17
      },
      "test later(o, null, setTimeout, [fn, 0])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(o, null, setTimeout, [fn, 0])",
        "duration": 19
      },
      "test cancel later(100, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(100, null, callback)",
        "duration": 332
      },
      "test later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, null, true)",
        "duration": 32
      },
      "test later(10, obj, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback, null, true)",
        "duration": 26
      },
      "test later(10, obj, methodString, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString, null, true)",
        "duration": 24
      },
      "test later(10, null, callback, argArray, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray, true)",
        "duration": 27
      },
      "test cancel later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(10, null, callback, null, true)",
        "duration": 346
      }
    },
    "Namespace tests": {
      "name": "Namespace tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 27,
      "type": "testcase",
      "test_create_namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create_namespace",
        "duration": 1
      },
      "test_multi_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args",
        "duration": 1
      },
      "test_multi_args_dotted": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args_dotted",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:36:01 PM"
  },
  {
    "name": "YUI: Full",
    "passed": 46,
    "failed": 5,
    "errors": 0,
    "ignored": 1,
    "total": 52,
    "duration": 42079,
    "type": "report",
    "Core tests": {
      "name": "Core tests",
      "passed": 28,
      "failed": 5,
      "errors": 0,
      "ignored": 1,
      "total": 34,
      "duration": 40301,
      "type": "testcase",
      "test: double skin loading from seed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: double skin loading from seed",
        "duration": 107
      },
      "test: pattern requires order": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'util' of undefined or null reference",
        "type": "test",
        "name": "test: pattern requires order",
        "duration": 47
      },
      "cached functions should execute only once per input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cached functions should execute only once per input",
        "duration": 2
      },
      "getLocation() should return the location object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getLocation() should return the location object",
        "duration": 1
      },
      "getLocation() should return `null` when executing in node.js": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getLocation() should return `null` when executing in node.js"
      },
      "test_cached_undefined_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cached_undefined_null",
        "duration": 2
      },
      "test_guid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_guid",
        "duration": 14
      },
      "test_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stamp",
        "duration": 23
      },
      "test_use_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_array",
        "duration": 24
      },
      "test_use_strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_strings",
        "duration": 16
      },
      "test_one_submodule": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_one_submodule",
        "duration": 35
      },
      "test_base_path": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_base_path",
        "duration": 1
      },
      "test_log_params": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_log_params",
        "duration": 12
      },
      "test_global_apply_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_apply_config",
        "duration": 1
      },
      "test_old_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_old_config",
        "duration": 12
      },
      "test_applyTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_applyTo",
        "duration": 12
      },
      "test_global_config": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_global_config",
        "duration": 3081
      },
      "test_multiple_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_ua",
        "duration": 25
      },
      "test_conditional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_conditional",
        "duration": 29
      },
      "test_missed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_missed",
        "duration": 19
      },
      "test_attach_error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error",
        "duration": 39
      },
      "test_attach_error_silent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_silent",
        "duration": 20
      },
      "test_attach_error_errFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_errFn",
        "duration": 28
      },
      "test_dump_core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump_core",
        "duration": 11
      },
      "test_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_destroy",
        "duration": 12
      },
      "test_features": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_features",
        "duration": 13
      },
      "test: requirements defined in external module": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: requirements defined in external module",
        "duration": 10083
      },
      "test: domready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: domready delay",
        "duration": 58
      },
      "test: window.onload delay": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: window.onload delay",
        "duration": 10127
      },
      "test: available delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: available delay",
        "duration": 3040
      },
      "test: contentready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: contentready delay",
        "duration": 2998
      },
      "status should be true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be true",
        "duration": 56
      },
      "status should be false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be false",
        "duration": 45
      },
      "test: fetch with external dependencies redefined in external file": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: fetch with external dependencies redefined in external file",
        "duration": 10144
      }
    },
    "Config tests": {
      "name": "Config tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 54,
      "type": "testcase",
      "test: YUI_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: YUI_config",
        "duration": 17
      },
      "test: local config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local config",
        "duration": 1
      },
      "test_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_config",
        "duration": 30
      }
    },
    "Later tests": {
      "name": "Later tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1660,
      "type": "testcase",
      "test later(10, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback)",
        "duration": 178
      },
      "test later(10, obj, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback)",
        "duration": 180
      },
      "test later(10, obj, methodString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString)",
        "duration": 181
      },
      "test later(10, null, callback, argArray)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray)",
        "duration": 181
      },
      "test later(0, null, callback, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(0, null, callback, obj)",
        "duration": 17
      },
      "test later(o, null, setTimeout, [fn, 0])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(o, null, setTimeout, [fn, 0])",
        "duration": 19
      },
      "test cancel later(100, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(100, null, callback)",
        "duration": 332
      },
      "test later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, null, true)",
        "duration": 26
      },
      "test later(10, obj, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback, null, true)",
        "duration": 43
      },
      "test later(10, obj, methodString, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString, null, true)",
        "duration": 26
      },
      "test later(10, null, callback, argArray, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray, true)",
        "duration": 27
      },
      "test cancel later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(10, null, callback, null, true)",
        "duration": 343
      }
    },
    "Namespace tests": {
      "name": "Namespace tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 26,
      "type": "testcase",
      "test_create_namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create_namespace",
        "duration": 1
      },
      "test_multi_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args",
        "duration": 1
      },
      "test_multi_args_dotted": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args_dotted",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:36:44 PM"
  },
  {
    "name": "YUI: Fetch",
    "passed": 46,
    "failed": 5,
    "errors": 0,
    "ignored": 1,
    "total": 52,
    "duration": 42126,
    "type": "report",
    "Core tests": {
      "name": "Core tests",
      "passed": 28,
      "failed": 5,
      "errors": 0,
      "ignored": 1,
      "total": 34,
      "duration": 40291,
      "type": "testcase",
      "test: double skin loading from seed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: double skin loading from seed",
        "duration": 87
      },
      "test: pattern requires order": {
        "result": "fail",
        "message": "Unexpected error: Unable to get property 'util' of undefined or null reference",
        "type": "test",
        "name": "test: pattern requires order",
        "duration": 37
      },
      "cached functions should execute only once per input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cached functions should execute only once per input",
        "duration": 1
      },
      "getLocation() should return the location object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getLocation() should return the location object",
        "duration": 1
      },
      "getLocation() should return `null` when executing in node.js": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getLocation() should return `null` when executing in node.js"
      },
      "test_cached_undefined_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cached_undefined_null",
        "duration": 1
      },
      "test_guid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_guid",
        "duration": 13
      },
      "test_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stamp",
        "duration": 24
      },
      "test_use_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_array",
        "duration": 27
      },
      "test_use_strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_strings",
        "duration": 18
      },
      "test_one_submodule": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_one_submodule",
        "duration": 27
      },
      "test_base_path": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_base_path",
        "duration": 2
      },
      "test_log_params": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_log_params",
        "duration": 14
      },
      "test_global_apply_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_apply_config",
        "duration": 1
      },
      "test_old_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_old_config",
        "duration": 14
      },
      "test_applyTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_applyTo",
        "duration": 13
      },
      "test_global_config": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test_global_config",
        "duration": 3118
      },
      "test_multiple_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_ua",
        "duration": 23
      },
      "test_conditional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_conditional",
        "duration": 17
      },
      "test_missed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_missed",
        "duration": 18
      },
      "test_attach_error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error",
        "duration": 21
      },
      "test_attach_error_silent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_silent",
        "duration": 21
      },
      "test_attach_error_errFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_errFn",
        "duration": 27
      },
      "test_dump_core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump_core",
        "duration": 13
      },
      "test_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_destroy",
        "duration": 13
      },
      "test_features": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_features",
        "duration": 13
      },
      "test: requirements defined in external module": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: requirements defined in external module",
        "duration": 10093
      },
      "test: domready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: domready delay",
        "duration": 59
      },
      "test: window.onload delay": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: window.onload delay",
        "duration": 10122
      },
      "test: available delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: available delay",
        "duration": 3004
      },
      "test: contentready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: contentready delay",
        "duration": 3025
      },
      "status should be true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be true",
        "duration": 68
      },
      "status should be false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be false",
        "duration": 19
      },
      "test: fetch with external dependencies redefined in external file": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "test: fetch with external dependencies redefined in external file",
        "duration": 10142
      }
    },
    "Config tests": {
      "name": "Config tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 60,
      "type": "testcase",
      "test: YUI_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: YUI_config",
        "duration": 18
      },
      "test: local config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local config",
        "duration": 1
      },
      "test_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_config",
        "duration": 33
      }
    },
    "Later tests": {
      "name": "Later tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1711,
      "type": "testcase",
      "test later(10, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback)",
        "duration": 195
      },
      "test later(10, obj, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback)",
        "duration": 181
      },
      "test later(10, obj, methodString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString)",
        "duration": 181
      },
      "test later(10, null, callback, argArray)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray)",
        "duration": 181
      },
      "test later(0, null, callback, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(0, null, callback, obj)",
        "duration": 17
      },
      "test later(o, null, setTimeout, [fn, 0])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(o, null, setTimeout, [fn, 0])",
        "duration": 18
      },
      "test cancel later(100, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(100, null, callback)",
        "duration": 330
      },
      "test later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, null, true)",
        "duration": 69
      },
      "test later(10, obj, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback, null, true)",
        "duration": 27
      },
      "test later(10, obj, methodString, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString, null, true)",
        "duration": 27
      },
      "test later(10, null, callback, argArray, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray, true)",
        "duration": 27
      },
      "test cancel later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(10, null, callback, null, true)",
        "duration": 346
      }
    },
    "Namespace tests": {
      "name": "Namespace tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 26,
      "type": "testcase",
      "test_create_namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create_namespace",
        "duration": 1
      },
      "test_multi_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args",
        "duration": 1
      },
      "test_multi_args_dotted": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args_dotted",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:27 PM"
  },
  {
    "name": "YUI: Array",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 197,
    "type": "report",
    "Array tests": {
      "name": "Array tests",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 145,
      "type": "testcase",
      "testArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArray",
        "duration": 1
      },
      "testDedupe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDedupe",
        "duration": 1
      },
      "dedupe() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "dedupe() should work on array-like objects",
        "duration": 1
      },
      "testEach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEach",
        "duration": 1
      },
      "each() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "each() should handle sparse arrays correctly",
        "duration": 1
      },
      "each() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "each() should work on array-like objects",
        "duration": 1
      },
      "testHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHash",
        "duration": 1
      },
      "hash() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "hash() should handle sparse arrays correctly",
        "duration": 1
      },
      "hash() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "hash() should work on array-like objects",
        "duration": 1
      },
      "testIndexOf": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIndexOf",
        "duration": 1
      },
      "indexOf() should support an ES5-compatible fromIndex arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf() should support an ES5-compatible fromIndex arg",
        "duration": 1
      },
      "indexOf() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf() should handle sparse arrays correctly",
        "duration": 1
      },
      "indexOf() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf() should work on array-like objects",
        "duration": 1
      },
      "testNumericSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumericSort",
        "duration": 1
      },
      "testSome": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSome",
        "duration": 2
      },
      "some() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "some() should handle sparse arrays correctly",
        "duration": 0
      },
      "some() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "some() should work on array-like objects",
        "duration": 1
      },
      "test Array.test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Array.test",
        "duration": 1
      },
      "test Array.test with window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Array.test with window",
        "duration": 2
      },
      "test Array.test with dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Array.test with dom",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:29 PM"
  },
  {
    "name": "DataSource: XMLSchema",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 217,
    "type": "report",
    "DataSource XMLSchema Plugin Tests": {
      "name": "DataSource XMLSchema Plugin Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 177,
      "type": "testcase",
      "testXMLSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLSchema",
        "duration": 101
      },
      "testSchemaError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSchemaError",
        "duration": 5
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:30 PM"
  },
  {
    "name": "DataSource: TextSchema",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 88,
    "type": "report",
    "DataSource TextSchema Plugin Tests": {
      "name": "DataSource TextSchema Plugin Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 62,
      "type": "testcase",
      "testTextSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextSchema",
        "duration": 5
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:31 PM"
  },
  {
    "name": "DataSource: Polling",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 1767,
    "type": "report",
    "DataSource Polling Tests": {
      "name": "DataSource Polling Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1741,
      "type": "testcase",
      "testClass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClass",
        "duration": 2
      },
      "testSetAndClear": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetAndClear",
        "duration": 632
      },
      "testClearAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClearAll",
        "duration": 619
      },
      "setInterval should fire first sendRequest immediately, async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setInterval should fire first sendRequest immediately, async",
        "duration": 396
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:34 PM"
  },
  {
    "name": "DataSource: Local",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 118,
    "type": "report",
    "DataSource.Local Tests": {
      "name": "DataSource.Local Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 92,
      "type": "testcase",
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 2
      },
      "testLocalDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalDefaults",
        "duration": 3
      },
      "testLocalEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalEvents",
        "duration": 3
      },
      "testLocalError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalError",
        "duration": 4
      },
      "test sendRequest({ callback: { ... }}) is alias for on: { ... }": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sendRequest({ callback: { ... }}) is alias for on: { ... }",
        "duration": 5
      },
      "test sendRequest() does not throw an error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sendRequest() does not throw an error",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:34 PM"
  },
  {
    "name": "DataSource: JSONSchema",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 108,
    "type": "report",
    "DataSource JSONSchema Plugin Tests": {
      "name": "DataSource JSONSchema Plugin Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 81,
      "type": "testcase",
      "testJSONSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONSchema",
        "duration": 5
      },
      "testSchemaError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSchemaError",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:35 PM"
  },
  {
    "name": "DataSource: IO",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 97,
    "type": "report",
    "DataSource.IO Tests": {
      "name": "DataSource.IO Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 72,
      "type": "testcase",
      "testConstructorIO": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructorIO",
        "duration": 3
      },
      "testIODefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIODefaults",
        "duration": 3
      },
      "testIOConfig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOConfig",
        "duration": 3
      },
      "testIOPost": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOPost",
        "duration": 3
      },
      "testIOEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOEvents",
        "duration": 4
      },
      "testIOError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOError",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:36 PM"
  },
  {
    "name": "DataSource: Get",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 108,
    "type": "report",
    "DataSource.Get Tests": {
      "name": "DataSource.Get Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 82,
      "type": "testcase",
      "testGetDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetDefaults",
        "duration": 4
      },
      "testGetEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetEvents",
        "duration": 4
      },
      "testGetError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetError",
        "duration": 4
      },
      "testGetTimeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetTimeout",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:38 PM"
  },
  {
    "name": "DataSource: Function",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 101,
    "type": "report",
    "DataSource.Function Tests": {
      "name": "DataSource.Function Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 75,
      "type": "testcase",
      "testFunctionDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionDefaults",
        "duration": 3
      },
      "testFunctionEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionEvents",
        "duration": 3
      },
      "testFunctionError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionError",
        "duration": 4
      },
      "testFunctionException": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionException",
        "duration": 7
      },
      "success or failure callback should not cause data event to fire again": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "success or failure callback should not cause data event to fire again",
        "duration": 3
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:39 PM"
  },
  {
    "name": "Datasource: Cache",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 116,
    "type": "report",
    "DataSource Caching Tests": {
      "name": "DataSource Caching Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 91,
      "type": "testcase",
      "testCacheDefaultMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCacheDefaultMax",
        "duration": 5
      },
      "testCacheInitMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCacheInitMax",
        "duration": 4
      },
      "testCacheSetMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCacheSetMax",
        "duration": 4
      },
      "testLocalCache": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalCache",
        "duration": 6
      },
      "testLocalCacheUnplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalCacheUnplug",
        "duration": 8
      },
      "cache retrieval should not overwrite callback": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cache retrieval should not overwrite callback",
        "duration": 6
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:39 PM"
  },
  {
    "name": "DataSource: ArraySchema",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 93,
    "type": "report",
    "DataSource ArraySchema Plugin Tests": {
      "name": "DataSource ArraySchema Plugin Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 67,
      "type": "testcase",
      "testArraySchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArraySchema",
        "duration": 5
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:40 PM"
  },
  {
    "name": "Throttle",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 236,
    "type": "report",
    "Throttle Tests": {
      "name": "Throttle Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 198,
      "type": "testcase",
      "test_throttle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_throttle",
        "duration": 119
      },
      "test_throttle_negative": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_throttle_negative",
        "duration": 16
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:41 PM"
  },
  {
    "name": "Widget: Modality",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 328,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 301,
      "type": "testcase",
      "WidgetModality should add a `modal` attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetModality should add a `modal` attribute",
        "duration": 109
      },
      "WidgetModality should add a mask node when `modal` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetModality should add a mask node when `modal` is `true`",
        "duration": 37
      },
      "WidgetModality should correctly handle one mask node for multiple modal widgets": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetModality should correctly handle one mask node for multiple modal widgets",
        "duration": 67
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:43 PM"
  },
  {
    "name": "AutoComplete",
    "passed": 113,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 113,
    "duration": 3750,
    "type": "report",
    "Base": {
      "name": "Base",
      "passed": 52,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 52,
      "duration": 1734,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 68,
        "type": "testcase",
        "Initializer should accept an inputNode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Initializer should accept an inputNode",
          "duration": 42
        },
        "destructor should detach events": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should detach events",
          "duration": 17
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 27,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 27,
        "duration": 839,
        "type": "testcase",
        "Browser autocomplete should be off by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Browser autocomplete should be off by default",
          "duration": 70
        },
        "Browser autocomplete should be turned on when enabled": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Browser autocomplete should be turned on when enabled",
          "duration": 27
        },
        "Browser autocomplete should be settable after init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Browser autocomplete should be settable after init",
          "duration": 26
        },
        "inputNode should be writable only on init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "inputNode should be writable only on init",
          "duration": 24
        },
        "maxResults should enforce a maximum number of results": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "maxResults should enforce a maximum number of results",
          "duration": 21
        },
        "maxResults should do nothing if <= 0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "maxResults should do nothing if <= 0",
          "duration": 22
        },
        "minQueryLength should enforce a minimum query length": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "minQueryLength should enforce a minimum query length",
          "duration": 23
        },
        "minQueryLength should allow empty queries if set to 0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "minQueryLength should allow empty queries if set to 0",
          "duration": 23
        },
        "minQueryLength should prevent queries if negative": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "minQueryLength should prevent queries if negative",
          "duration": 48
        },
        "queryDelay should delay query events": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "queryDelay should delay query events",
          "duration": 63
        },
        "_parseValue should return the rightmost token when using a queryDelimiter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_parseValue should return the rightmost token when using a queryDelimiter",
          "duration": 25
        },
        "requestTemplate should accept a custom template function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate should accept a custom template function",
          "duration": 20
        },
        "requestTemplate should generate a template function when set to a string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate should generate a template function when set to a string",
          "duration": 20
        },
        "requestTemplate function should replace {query} with the URI-encoded query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate function should replace {query} with the URI-encoded query",
          "duration": 24
        },
        "`this` object in requestTemplate functions should be the AutoComplete instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`this` object in requestTemplate functions should be the AutoComplete instance",
          "duration": 23
        },
        "resultFilters should accept a function, array of functions, string, array of strings, or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultFilters should accept a function, array of functions, string, array of strings, or null",
          "duration": 22
        },
        "result filters should receive the query and an array of result objects as parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "result filters should receive the query and an array of result objects as parameters",
          "duration": 22
        },
        "resultFormatter should accept a function or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultFormatter should accept a function or null",
          "duration": 22
        },
        "result formatters should receive the query and an array of result objects as parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "result formatters should receive the query and an array of result objects as parameters",
          "duration": 22
        },
        "resultHighlighter should accept a function, string, or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultHighlighter should accept a function, string, or null",
          "duration": 22
        },
        "result highlighters should receive the query and an array of result objects as parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "result highlighters should receive the query and an array of result objects as parameters",
          "duration": 24
        },
        "resultListLocator should accept a function, string, or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultListLocator should accept a function, string, or null",
          "duration": 21
        },
        "resultListLocator should locate results": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultListLocator should locate results",
          "duration": 22
        },
        "resultTextLocator should locate result text": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultTextLocator should locate result text",
          "duration": 22
        },
        "_parseResponse should preserve duplicates in text when using resultTextLocator": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_parseResponse should preserve duplicates in text when using resultTextLocator",
          "duration": 22
        },
        "value attribute should update the inputNode value and query attribute when set via the API, but should not fire a query event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "value attribute should update the inputNode value and query attribute when set via the API, but should not fire a query event",
          "duration": 24
        },
        "_functionValidator() should accept a function or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_functionValidator() should accept a function or null",
          "duration": 22
        }
      },
      "Events": {
        "name": "Events",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 200,
        "type": "testcase",
        "clear event should fire when the query is cleared": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clear event should fire when the query is cleared",
          "duration": 27
        },
        "clear event should fire when the value attribute is cleared via the API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clear event should fire when the value attribute is cleared via the API",
          "duration": 26
        },
        "clear event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clear event should be preventable",
          "duration": 23
        },
        "query event should fire when the value attribute is changed via the UI": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "query event should fire when the value attribute is changed via the UI",
          "duration": 27
        },
        "query event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "query event should be preventable",
          "duration": 22
        },
        "results event should fire when a source returns results": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "results event should fire when a source returns results",
          "duration": 26
        },
        "results event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "results event should be preventable",
          "duration": 24
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 26,
        "type": "testcase",
        "sendRequest should provide a complete request object to source.sendRequest": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sendRequest should provide a complete request object to source.sendRequest",
          "duration": 24
        }
      },
      "Built-in sources": {
        "name": "Built-in sources",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 256,
        "type": "testcase",
        "Array sources should return the full array regardless of query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Array sources should return the full array regardless of query",
          "duration": 28
        },
        "DataSource sources should work": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "DataSource sources should work",
          "duration": 25
        },
        "Function sources should support synchronous return values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Function sources should support synchronous return values",
          "duration": 24
        },
        "Function sources should support asynchronous return values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Function sources should support asynchronous return values",
          "duration": 46
        },
        "Object sources should work": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Object sources should work",
          "duration": 26
        },
        "sourceType should override source type detection for built-in types": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sourceType should override source type detection for built-in types",
          "duration": 60
        }
      },
      "Extra sources (autocomplete-sources)": {
        "name": "Extra sources (autocomplete-sources)",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 279,
        "type": "testcase",
        "<select> nodes should be turned into select source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "<select> nodes should be turned into select source objects",
          "duration": 41
        },
        "A <select> result should be an object with convenient properties": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A <select> result should be an object with convenient properties",
          "duration": 29
        },
        "XHR strings should be turned into IO source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "XHR strings should be turned into IO source objects",
          "duration": 22
        },
        "JSONP strings should be turned into JSONP source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "JSONP strings should be turned into JSONP source objects",
          "duration": 22
        },
        "Y.JSONPRequest instances should be turned into JSONP source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.JSONPRequest instances should be turned into JSONP source objects",
          "duration": 21
        },
        "YQL strings should be turned into YQL source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "YQL strings should be turned into YQL source objects",
          "duration": 23
        },
        "sourceType should override source type detection for extra types": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sourceType should override source type detection for extra types",
          "duration": 22
        },
        "_jsonpFormatter should correctly format URLs both with and without a requestTemplate set": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_jsonpFormatter should correctly format URLs both with and without a requestTemplate set",
          "duration": 20
        },
        "requestTemplate should be appended to XHR source URLs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate should be appended to XHR source URLs",
          "duration": 20
        }
      }
    },
    "Filters": {
      "name": "Filters",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 76,
      "type": "testsuite",
      "API": {
        "name": "API",
        "passed": 20,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 20,
        "duration": 74,
        "type": "testcase",
        "charMatch() should match all characters in the query, in any order": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should match all characters in the query, in any order",
          "duration": 1
        },
        "charMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should be case-insensitive",
          "duration": 0
        },
        "charMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchCase() should be case-sensitive",
          "duration": 1
        },
        "charMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "phraseMatch() should match the complete query as a phrase": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should match the complete query as a phrase",
          "duration": 1
        },
        "phraseMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should be case-insensitive",
          "duration": 1
        },
        "phraseMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchCase() should be case-sensitive",
          "duration": 0
        },
        "phraseMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchFold() should match accent-folded characters",
          "duration": 3
        },
        "startsWith() should match the complete query at the start of a result": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should match the complete query at the start of a result",
          "duration": 1
        },
        "startsWith() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should be case-insensitive",
          "duration": 1
        },
        "startsWithCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithCase() should be case-sensitive",
          "duration": 1
        },
        "startsWithFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithFold() should match accent-folded characters",
          "duration": 3
        },
        "subWordMatch() should match results where all words in the query - ignoring whitespace and punctuation - occur partially in the text": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should match results where all words in the query - ignoring whitespace and punctuation - occur partially in the text",
          "duration": 2
        },
        "subWordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should be case-insensitive",
          "duration": 0
        },
        "subWordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "subWordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "wordMatch() should match results that contain all words in the query in any order": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should match results that contain all words in the query in any order",
          "duration": 3
        },
        "wordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should be case-insensitive",
          "duration": 1
        },
        "wordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "wordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchFold() should match accent-folded characters",
          "duration": 4
        }
      }
    },
    "Highlighters": {
      "name": "Highlighters",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 88,
      "type": "testsuite",
      "API": {
        "name": "API",
        "passed": 20,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 20,
        "duration": 87,
        "type": "testcase",
        "charMatch() should highlight all characters in the query, in any order": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should highlight all characters in the query, in any order",
          "duration": 1
        },
        "charMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should be case-insensitive",
          "duration": 1
        },
        "charMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchCase() should be case-sensitive",
          "duration": 1
        },
        "charMatchFold() should highlight accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchFold() should highlight accent-folded characters",
          "duration": 4
        },
        "phraseMatch() should highlight the complete query as a phrase": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should highlight the complete query as a phrase",
          "duration": 2
        },
        "phraseMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should be case-insensitive",
          "duration": 1
        },
        "phraseMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchCase() should be case-sensitive",
          "duration": 1
        },
        "phraseMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "startsWith() should highlight the complete query at the start of a result": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should highlight the complete query at the start of a result",
          "duration": 1
        },
        "startsWith() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should be case-insensitive",
          "duration": 1
        },
        "startsWithCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithCase() should be case-sensitive",
          "duration": 1
        },
        "startsWithFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithFold() should match accent-folded characters",
          "duration": 4
        },
        "subWordMatch() should highlight partial words in the query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should highlight partial words in the query",
          "duration": 2
        },
        "subWordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should be case-insensitive",
          "duration": 1
        },
        "subWordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "subWordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchFold() should match accent-folded characters",
          "duration": 7
        },
        "wordMatch() should highlight complete words in the query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should highlight complete words in the query",
          "duration": 2
        },
        "wordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should be case-insensitive",
          "duration": 1
        },
        "wordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "wordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchFold() should match accent-folded characters",
          "duration": 5
        }
      }
    },
    "List": {
      "name": "List",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 1607,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 440,
        "type": "testcase",
        "List should render inside the same parent as the inputNode by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List should render inside the same parent as the inputNode by default",
          "duration": 56
        },
        "List width should match the width of the inputNode by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List width should match the width of the inputNode by default",
          "duration": 54
        },
        "Explicit list widths should be supported": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Explicit list widths should be supported",
          "duration": 55
        },
        "List should default to a sane width if the inputNode width is 0 or unknown": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List should default to a sane width if the inputNode width is 0 or unknown",
          "duration": 51
        },
        "List should not appear automatically when attached to an inputNode with text": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List should not appear automatically when attached to an inputNode with text",
          "duration": 65
        },
        "test: verify list markup": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: verify list markup",
          "duration": 54
        },
        "test: verify result item markup": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: verify result item markup",
          "duration": 77
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 776,
        "type": "testcase",
        "test: activateFirstItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: activateFirstItem",
          "duration": 105
        },
        "test: activeItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: activeItem",
          "duration": 95
        },
        "test: alwaysShowList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: alwaysShowList",
          "duration": 74
        },
        "test: circular": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: circular",
          "duration": 168
        },
        "test: hoveredItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: hoveredItem",
          "duration": 93
        },
        "test: tabSelect": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: tabSelect",
          "duration": 105
        },
        "test: visible": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: visible",
          "duration": 77
        }
      },
      "Events": {
        "name": "Events",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 192,
        "type": "testcase",
        "select event should fire when a result is selected": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "select event should fire when a result is selected",
          "duration": 94
        },
        "list events should be detached when the list is destroyed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "list events should be detached when the list is destroyed",
          "duration": 74
        }
      },
      "API": {
        "name": "API",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 190,
        "type": "testcase",
        "hide() should hide the list, except when alwaysShowList is true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hide() should hide the list, except when alwaysShowList is true",
          "duration": 79
        },
        "_ariaSay() should insert text only, not HTML": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_ariaSay() should insert text only, not HTML",
          "duration": 97
        }
      }
    },
    "Plugin": {
      "name": "Plugin",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 216,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 214,
        "type": "testcase",
        "inputNode.ac should be an instance of Y.Plugin.AutoComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "inputNode.ac should be an instance of Y.Plugin.AutoComplete",
          "duration": 59
        },
        "inputNode.ac should extend Y.AutoCompleteList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "inputNode.ac should extend Y.AutoCompleteList",
          "duration": 67
        },
        "The plugin should render itself immediately": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "The plugin should render itself immediately",
          "duration": 63
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:48 PM"
  },
  {
    "name": "Widget: StdMod",
    "passed": 8,
    "failed": 0,
    "errors": 1,
    "ignored": 0,
    "total": 8,
    "duration": 431,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 97,
      "type": "testcase",
      "WidgetStdMod should add `headerContent`, `bodyContent`, `footerContent`, and `fillHeight` attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetStdMod should add `headerContent`, `bodyContent`, `footerContent`, and `fillHeight` attributes",
        "duration": 42
      }
    },
    "Methods": {
      "name": "Methods",
      "passed": 7,
      "failed": 0,
      "errors": 1,
      "ignored": 0,
      "total": 7,
      "duration": 306,
      "type": "testcase",
      "getStdModNode() should return the section node if there is content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getStdModNode() should return the section node if there is content",
        "duration": 36
      },
      "getStdModNode() should create the section node when `forceCreate` is truthy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getStdModNode() should create the section node when `forceCreate` is truthy",
        "duration": 36
      },
      "setStdModContent() should update the body section of the standard module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setStdModContent() should update the body section of the standard module",
        "duration": 36
      },
      "setStdModContent() should also accept Node objects as input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setStdModContent() should also accept Node objects as input",
        "duration": 46
      },
      "fillHeight() should fill the a widget height using the provided node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fillHeight() should fill the a widget height using the provided node",
        "duration": 32
      },
      "fillHeight() should fill up the widget correctly with multiple nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fillHeight() should fill up the widget correctly with multiple nodes",
        "duration": 61
      },
      "HTML_PARSER rules should return the proper inner HTML contents from markup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HTML_PARSER rules should return the proper inner HTML contents from markup",
        "duration": 33
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:49 PM"
  },
  {
    "name": "Widget: Position Constrain",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 123,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 97,
      "type": "testcase",
      "WidgetPositionConstrain should add `constrain` and `preventOverlap` attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetPositionConstrain should add `constrain` and `preventOverlap` attributes",
        "duration": 41
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:50 PM"
  },
  {
    "name": "Widget: Buttons",
    "passed": 56,
    "failed": 4,
    "errors": 0,
    "ignored": 0,
    "total": 60,
    "duration": 2835,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 6,
      "failed": 3,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 304,
      "type": "testcase",
      "Initialization should fail if `WidgetStdMod` has not been added": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Initialization should fail if `WidgetStdMod` has not been added",
        "duration": 38
      },
      "Initialization should fail if `WidgetStdMod` has been added after `WidgetButtons`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Initialization should fail if `WidgetStdMod` has been added after `WidgetButtons`",
        "duration": 17
      },
      "`buttons` should default to an empty Object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should default to an empty Object",
        "duration": 19
      },
      "`buttons` should be accessible within a subclass initializer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be accessible within a subclass initializer",
        "duration": 25
      },
      "`buttons` should be parsed from a `srcNode`": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "`buttons` should be parsed from a `srcNode`",
        "duration": 11
      },
      "`buttons` parsed from a `srcNode` should inherit any defaults": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "`buttons` parsed from a `srcNode` should inherit any defaults",
        "duration": 18
      },
      "`buttons` parsed from a `srcNode` should be overridden by user-provided `buttons`": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "`buttons` parsed from a `srcNode` should be overridden by user-provided `buttons`",
        "duration": 21
      },
      "`defaultButton` should default to `null`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should default to `null`",
        "duration": 17
      },
      "`destory()` should remove all buttons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`destory()` should remove all buttons",
        "duration": 64
      }
    },
    "Attributes and Properties": {
      "name": "Attributes and Properties",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 1001,
      "type": "testcase",
      "`buttons` should be able to be specified as an Array of Objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Array of Objects",
        "duration": 83
      },
      "`buttons` should be able to be specified as an Object of Arrays of Objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Object of Arrays of Objects",
        "duration": 30
      },
      "`buttons` specified as an Object of section-Arrays should override a button specific section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` specified as an Object of section-Arrays should override a button specific section",
        "duration": 30
      },
      "`buttons` specified without a section should default to the footer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` specified without a section should default to the footer",
        "duration": 29
      },
      "`buttons` should be able to be specified as an Array of Y.Nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Array of Y.Nodes",
        "duration": 30
      },
      "`buttons` should be able to be specified as an Object of Arrays of Y.Nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Object of Arrays of Y.Nodes",
        "duration": 25
      },
      "`buttons` should be able to be specified as an Array of Y.Nodes from another YUI instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Array of Y.Nodes from another YUI instance",
        "duration": 68
      },
      "`buttons` should be able to be specified as a mixture of all possibile configurations": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as a mixture of all possibile configurations",
        "duration": 41
      },
      "`buttons` should be settable to a new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be settable to a new value",
        "duration": 55
      },
      "`buttons` should be settable to the same value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be settable to the same value",
        "duration": 55
      },
      "Default `BUTTONS` should be usable by only providing their string name": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Default `BUTTONS` should be usable by only providing their string name",
        "duration": 61
      },
      "User-provided `buttons` should override defaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "User-provided `buttons` should override defaults",
        "duration": 70
      },
      "A button configured with a `name` should be accessible by that `name`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button configured with a `name` should be accessible by that `name`",
        "duration": 25
      },
      "Last button in should win when multiple `buttons` have the same `name`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Last button in should win when multiple `buttons` have the same `name`",
        "duration": 50
      },
      "A button with an `action` String should be called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button with an `action` String should be called",
        "duration": 25
      },
      "A button configured with a `isDefault` should be the `defaultButton`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button configured with a `isDefault` should be the `defaultButton`",
        "duration": 24
      },
      "Last button in should win when multiple `buttons` are `isDefault`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Last button in should win when multiple `buttons` are `isDefault`",
        "duration": 28
      },
      "`isDefault` should only be considered when it is `true` or \"true\" (any case)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`isDefault` should only be considered when it is `true` or \"true\" (any case)",
        "duration": 67
      },
      "`defaultButton` should be read-only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be read-only",
        "duration": 28
      },
      "`defaultButton` should be updated when a new button that `isDefault` is added": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be updated when a new button that `isDefault` is added",
        "duration": 39
      },
      "`defaultButton` should be updated when a new button that `isDefault` is added and receive visual styling": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be updated when a new button that `isDefault` is added and receive visual styling",
        "duration": 48
      },
      "`defaultButton` should be updated when a button that is the default is removed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be updated when a button that is the default is removed",
        "duration": 24
      }
    },
    "Methods": {
      "name": "Methods",
      "passed": 13,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 13,
      "duration": 635,
      "type": "testcase",
      "`addButton()` should add and render a new button": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` should add and render a new button",
        "duration": 68
      },
      "`addButton()` should default the new button to the end of the footer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` should default the new button to the end of the footer",
        "duration": 40
      },
      "`addButton()` without an `index` should default the new button to the end of the section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` without an `index` should default the new button to the end of the section",
        "duration": 38
      },
      "`addButton()` with an `index` should insert the new button at the correct location": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` with an `index` should insert the new button at the correct location",
        "duration": 43
      },
      "`addButton()` with an `index` that is too large should insert the new button at the end of the section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` with an `index` that is too large should insert the new button at the end of the section",
        "duration": 43
      },
      "`addButton()` with a negative `index` should insert the new button that many items from the end of the section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` with a negative `index` should insert the new button that many items from the end of the section",
        "duration": 93
      },
      "`getButton()` should return a button by name": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton()` should return a button by name",
        "duration": 48
      },
      "`getButton()` should return a button by name for a section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton()` should return a button by name for a section",
        "duration": 29
      },
      "`getButton()` should return a button by index and section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton()` should return a button by index and section",
        "duration": 60
      },
      "`removeButton()` should remove a button from the colleciton and the DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button from the colleciton and the DOM",
        "duration": 48
      },
      "`removeButton()` should remove a button by name for a section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button by name for a section",
        "duration": 31
      },
      "`removeButton()` should remove a button by `index` and default to the footer section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button by `index` and default to the footer section",
        "duration": 32
      },
      "`removeButton()` should remove a button by `index` and `section`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button by `index` and `section`",
        "duration": 29
      }
    },
    "Rendering": {
      "name": "Rendering",
      "passed": 5,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 317,
      "type": "testcase",
      "`buttons` should render their `value` as text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should render their `value` as text",
        "duration": 44
      },
      "`buttons` should render their `label` as text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should render their `label` as text",
        "duration": 46
      },
      "`buttons` should render in the correction section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should render in the correction section",
        "duration": 57
      },
      "`buttons` should move to the correct position": {
        "result": "fail",
        "message": "Unexpected error: Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property to add script or malformed HTML will generate this exception. Use the toStaticHTML method to filter dynamic content, or explicitly create elements and attributes with a method such as createElement.  For more information, see http:\/\/go.microsoft.com\/fwlink\/?LinkID=247104.",
        "type": "test",
        "name": "`buttons` should move to the correct position",
        "duration": 12
      },
      "Default button should be focused on `visibleChange`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Default button should be focused on `visibleChange`",
        "duration": 49
      },
      "Updating section content should not remove a button": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Updating section content should not remove a button",
        "duration": 57
      }
    },
    "Events": {
      "name": "Events",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 546,
      "type": "testcase",
      "`buttonsChange` should fire when setting new `buttons`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should fire when setting new `buttons`",
        "duration": 63
      },
      "`buttonsChange` should fire when calling `addButton()`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should fire when calling `addButton()`",
        "duration": 65
      },
      "`buttonsChange` should fire when calling `removeButton()`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should fire when calling `removeButton()`",
        "duration": 49
      },
      "`buttonsChange` should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should be preventable",
        "duration": 45
      },
      "Preventing `buttonsChange` should cause `addButton()` to not have side-effects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Preventing `buttonsChange` should cause `addButton()` to not have side-effects",
        "duration": 45
      },
      "Preventing `buttonsChange` should cause `removeButton()` to not have side-effects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Preventing `buttonsChange` should cause `removeButton()` to not have side-effects",
        "duration": 52
      },
      "`contentUpdate` should fire when the buttons change in the DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should fire when the buttons change in the DOM",
        "duration": 54
      },
      "`contentUpdate` should fire when a button is added": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should fire when a button is added",
        "duration": 54
      },
      "`contentUpdate` should fire when a button is removed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should fire when a button is removed",
        "duration": 45
      },
      "`contentUpdate` should not fire when the buttons in the DOM do not actually change": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should not fire when the buttons in the DOM do not actually change",
        "duration": 48
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:54 PM"
  },
  {
    "name": "Widget: Anim",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 705,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 671,
      "type": "testcase",
      "A widget should be pluggable with Y.Plugin.WidgetAnim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A widget should be pluggable with Y.Plugin.WidgetAnim",
        "duration": 138
      },
      "A widget should animate on `visibleChange` when plugged with Y.Plugin.WidgetAnim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A widget should animate on `visibleChange` when plugged with Y.Plugin.WidgetAnim",
        "duration": 468
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:55 PM"
  },
  {
    "name": "Text: Wordbreak",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 167,
    "type": "report",
    "Text.WordBreak": {
      "name": "Text.WordBreak",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 141,
      "type": "testcase",
      "isWordBoundary() should not break between most letters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break between most letters",
        "duration": 1
      },
      "isWordBoundary() should not break letters across certain punctuation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break letters across certain punctuation",
        "duration": 1
      },
      "isWordBoundary() should not break across sequences of digits or digits adjacent to letters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break across sequences of digits or digits adjacent to letters",
        "duration": 1
      },
      "isWordBoundary() should not break inside numeric sequences": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break inside numeric sequences",
        "duration": 1
      },
      "isWordBoundary() should ignore format and extend characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should ignore format and extend characters",
        "duration": 1
      },
      "isWordBoundary() should not break inside CRLF": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break inside CRLF",
        "duration": 1
      },
      "isWordBoundary() should break before newlines": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should break before newlines",
        "duration": 1
      },
      "isWordBoundary() should break after newlines": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should break after newlines",
        "duration": 1
      },
      "isWordBoundary() should not break between Katakana characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break between Katakana characters",
        "duration": 1
      },
      "isWordBoundary() should not break from extenders": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break from extenders",
        "duration": 0
      },
      "isWordBoundary() should break everywhere else": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should break everywhere else",
        "duration": 1
      },
      "isWordBoundary() should return false when given an out-of-bounds index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should return false when given an out-of-bounds index",
        "duration": 1
      },
      "isWordBoundary() should return true for index 0 of an empty string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should return true for index 0 of an empty string",
        "duration": 1
      },
      "getWords() should split a string into words": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should split a string into words",
        "duration": 1
      },
      "getWords() should preserve case by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should preserve case by default",
        "duration": 1
      },
      "getWords() should support an ignoreCase option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should support an ignoreCase option",
        "duration": 1
      },
      "getWords() should exclude punctuation-only words by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should exclude punctuation-only words by default",
        "duration": 2
      },
      "getWords() should support an includePunctuation option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should support an includePunctuation option",
        "duration": 2
      },
      "getWords() should support an includeWhitespace option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should support an includeWhitespace option",
        "duration": 2
      },
      "getUniqueWords() should only return unique words": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getUniqueWords() should only return unique words",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:56 PM"
  },
  {
    "name": "Text: Accentfold",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 111,
    "type": "report",
    "Text.AccentFold": {
      "name": "Text.AccentFold",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 85,
      "type": "testcase",
      "canFold() should return true if any characters can be folded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "canFold() should return true if any characters can be folded",
        "duration": 1
      },
      "canFold() should return false when no characters can be folded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "canFold() should return false when no characters can be folded",
        "duration": 1
      },
      "compare() should return true when folded strings match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compare() should return true when folded strings match",
        "duration": 2
      },
      "compare() should return false when folded strings don't match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compare() should return false when folded strings don't match",
        "duration": 2
      },
      "compare() should support a custom comparison function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compare() should support a custom comparison function",
        "duration": 1
      },
      "filter() should pass accent-folded items to the supplied function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should pass accent-folded items to the supplied function",
        "duration": 1
      },
      "filter() should filter the supplied array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should filter the supplied array",
        "duration": 2
      },
      "fold() should fold lowercase accented letters to ASCII": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fold() should fold lowercase accented letters to ASCII",
        "duration": 2
      },
      "fold() should fold uppercase accented letters to lowercase ASCII": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fold() should fold uppercase accented letters to lowercase ASCII",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:37:57 PM"
  },
  {
    "name": "Slider",
    "passed": 35,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 35,
    "duration": 3411,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 1344,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 33
      },
      "test SliderBase construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test SliderBase construction",
        "duration": 19
      },
      "test render(selector)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render(selector)",
        "duration": 263
      },
      "test render( node )": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render( node )",
        "duration": 203
      },
      "test render: selector attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: selector attrib in constructor",
        "duration": 218
      },
      "test render: node attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: node attrib in constructor",
        "duration": 236
      },
      "test render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render off DOM",
        "duration": 64
      },
      "test destroy() before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() before render",
        "duration": 28
      },
      "test destroy() after render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render off DOM",
        "duration": 64
      },
      "test destroy() after render to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render to DOM",
        "duration": 59
      }
    },
    "API": {
      "name": "API",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 457,
      "type": "testcase",
      "test getValue() and setValue(v) before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getValue() and setValue(v) before render",
        "duration": 29
      },
      "test getValue() and setValue(v) after render() to hidden container": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getValue() and setValue(v) after render() to hidden container",
        "duration": 66
      },
      "test getValue() and setValue(v) after render() to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getValue() and setValue(v) after render() to DOM",
        "duration": 65
      },
      "setValue(v) then render() should position thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setValue(v) then render() should position thumb",
        "duration": 156
      },
      "setValue(v) after render() should move the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setValue(v) after render() should move the thumb",
        "duration": 58
      },
      "setValue(v) when hidden should still move the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setValue(v) when hidden should still move the thumb",
        "duration": 61
      }
    },
    "Attributes": {
      "name": "Attributes",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 1010,
      "type": "testcase",
      "test axis": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test axis",
        "duration": 105
      },
      "axis should be writeOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "axis should be writeOnce",
        "duration": 41
      },
      "axis should only accept 'x', 'X', 'y', and 'Y'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "axis should only accept 'x', 'X', 'y', and 'Y'",
        "duration": 28
      },
      "test length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test length",
        "duration": 217
      },
      "thumbUrl should default at render()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "thumbUrl should default at render()",
        "duration": 62
      },
      "thumbUrl should default to sam skin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "thumbUrl should default to sam skin",
        "duration": 63
      },
      "thumbUrl should default from the current skin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "thumbUrl should default from the current skin",
        "duration": 64
      },
      "test clickableRail": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test clickableRail",
        "duration": 126
      },
      "test min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test min",
        "duration": 22
      },
      "test max": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test max",
        "duration": 23
      },
      "test value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test value",
        "duration": 38
      },
      "setting the value outside the min or max should constrain it": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setting the value outside the min or max should constrain it",
        "duration": 21
      },
      "setting the min or max should update the value if necessary": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setting the min or max should update the value if necessary",
        "duration": 60
      },
      "instantiating with disabled: true should lock the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "instantiating with disabled: true should lock the thumb",
        "duration": 54
      }
    },
    "Mouse": {
      "name": "Mouse",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 161,
      "type": "testcase",
      "clicking on the rail should move the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "clicking on the rail should move the thumb",
        "duration": 134
      }
    },
    "Keyboard": {
      "name": "Keyboard",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 407,
      "type": "testcase",
      "test keyboard input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test keyboard input",
        "duration": 187
      },
      "test focus on thumb by click": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test focus on thumb by click",
        "duration": 62
      },
      "test keyboard input and resultant value change, when Slider length is less than max - min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test keyboard input and resultant value change, when Slider length is less than max - min",
        "duration": 58
      },
      "test ARIA attributes while values change by keyboard input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ARIA attributes while values change by keyboard input",
        "duration": 65
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:02 PM"
  },
  {
    "name": "Scrollview Paginator Test Suite",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 5,
    "total": 9,
    "duration": 1638,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 5,
      "total": 9,
      "duration": 1449,
      "type": "testcase",
      "Ensure rendering & initial state are correct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure rendering & initial state are correct",
        "duration": 44
      },
      "sv.next() should advance to the next page": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "sv.next() should advance to the next page"
      },
      "sv.next() on last index should do nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "sv.next() on last index should do nothing"
      },
      "sv.prev() should advance to the previous page": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "sv.prev() should advance to the previous page",
        "duration": 404
      },
      "sv.prev() on index 0 should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "sv.prev() on index 0 should do nothing",
        "duration": 553
      },
      "scrollToIndex should animate to the specified index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "scrollToIndex should animate to the specified index",
        "duration": 374
      },
      "Move x should advance 1 page right": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move x should advance 1 page right"
      },
      "Move left on X should snap back": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move left on X should snap back"
      },
      "optimizeMemory should hide nodes not near the viewport": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "optimizeMemory should hide nodes not near the viewport"
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:04 PM"
  },
  {
    "name": "Scrollview: List",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 291,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 264,
      "type": "testcase",
      "testBasicScrollviewList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBasicScrollviewList",
        "duration": 125
      },
      "testScrollviewListWithDiv": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testScrollviewListWithDiv",
        "duration": 22
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:05 PM"
  },
  {
    "name": "Scrollview: Base",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 6,
    "total": 13,
    "duration": 831,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 6,
      "total": 13,
      "duration": 797,
      "type": "testcase",
      "Ensure rendering & initial state are correct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure rendering & initial state are correct",
        "duration": 31
      },
      "Ensure set('scrollX') works properly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure set('scrollX') works properly",
        "duration": 31
      },
      "Ensure the 'scrollEnd' event fires": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure the 'scrollEnd' event fires",
        "duration": 32
      },
      "Flick x should provide the correct reaction": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Flick x should provide the correct reaction"
      },
      "lastScrolledAmt should be correct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "lastScrolledAmt should be correct",
        "duration": 44
      },
      "Disabled flick should not scroll": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Disabled flick should not scroll"
      },
      "Move right on X should move the content right": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move right on X should move the content right"
      },
      "Move left on X should snap back": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move left on X should snap back"
      },
      "Move down on Y should move the content at least that distance": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move down on Y should move the content at least that distance"
      },
      "Move up on Y should bounce back": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move up on Y should bounce back"
      },
      "Disabled drag should not scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Disabled drag should not scroll",
        "duration": 224
      },
      "Disabled scrollview should not scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Disabled scrollview should not scroll",
        "duration": 125
      },
      "Widget resize should trigger heightChange": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Widget resize should trigger heightChange",
        "duration": 150
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:07 PM"
  },
  {
    "name": "Resize",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 885,
    "type": "report",
    "Resize Test": {
      "name": "Resize Test",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 857,
      "type": "testcase",
      "test: loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: loading",
        "duration": 1
      },
      "test: instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: instantiation",
        "duration": 118
      },
      "test: handles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: handles",
        "duration": 1
      },
      "test: moving top": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving top",
        "duration": 118
      },
      "test: moving right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving right",
        "duration": 64
      },
      "test: moving bottom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving bottom",
        "duration": 61
      },
      "test: moving left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving left",
        "duration": 62
      },
      "test: moving tr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving tr",
        "duration": 68
      },
      "test: moving tl": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving tl",
        "duration": 67
      },
      "test: moving br": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving br",
        "duration": 68
      },
      "test: moving bl": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving bl",
        "duration": 66
      },
      "test: destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: destroy",
        "duration": 14
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:09 PM"
  },
  {
    "name": "Sortable",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 232,
    "type": "report",
    "Sortable Test": {
      "name": "Sortable Test",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 206,
      "type": "testcase",
      "test: loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: loading",
        "duration": 2
      },
      "test: instantiate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: instantiate",
        "duration": 65
      },
      "test: getSortable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: getSortable",
        "duration": 2
      },
      "test: full join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: full join",
        "duration": 1
      },
      "test: outer join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: outer join",
        "duration": 2
      },
      "test: inner join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: inner join",
        "duration": 2
      },
      "test: no join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: no join",
        "duration": 1
      },
      "test: ordering": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: ordering",
        "duration": 2
      },
      "test: dragging start": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: dragging start",
        "duration": 2
      },
      "test: startDrag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: startDrag",
        "duration": 2
      },
      "test: onDrag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: onDrag",
        "duration": 3
      },
      "test: dragEnd event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: dragEnd event",
        "duration": 3
      },
      "test: DD passthru for errors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: DD passthru for errors",
        "duration": 2
      },
      "test: destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: destroy",
        "duration": 13
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:10 PM"
  },
  {
    "name": "Panel",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 645,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 618,
      "type": "testcase",
      "testBasicPanel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBasicPanel",
        "duration": 84
      },
      "testModalPanel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModalPanel",
        "duration": 84
      },
      "testPanelWithHeaderButtons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPanelWithHeaderButtons",
        "duration": 78
      },
      "testPanelWithFooterButtons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPanelWithFooterButtons",
        "duration": 132
      },
      "testPanelWithChangingButtons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPanelWithChangingButtons",
        "duration": 107
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:12 PM"
  },
  {
    "name": "QueryString",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 142,
    "type": "report",
    "Parse Query Strings": {
      "name": "Parse Query Strings",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 86,
      "type": "testcase",
      "testParseBasic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseBasic",
        "duration": 4
      },
      "testParseColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseColon",
        "duration": 2
      },
      "testParseWeird": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseWeird",
        "duration": 2
      },
      "testNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNested",
        "duration": 2
      },
      "testNestedColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNestedColon",
        "duration": 2
      }
    },
    "Query Stringify Objects": {
      "name": "Query Stringify Objects",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 28,
      "type": "testcase",
      "testStringifyBasic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyBasic",
        "duration": 3
      },
      "testStringifyColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyColon",
        "duration": 1
      },
      "testStringifyWeird": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyWeird",
        "duration": 2
      },
      "testStringifyCyclical": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyCyclical",
        "duration": 6
      },
      "testNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNested",
        "duration": 1
      },
      "testNestedColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNestedColon",
        "duration": 1
      },
      "testArrayKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArrayKey",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:13 PM"
  },
  {
    "name": "Number",
    "passed": 13,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 13,
    "duration": 125,
    "type": "report",
    "Number Parse Tests": {
      "name": "Number Parse Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 61,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      }
    },
    "Number Format Tests": {
      "name": "Number Format Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 37,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      },
      "testPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrefix",
        "duration": 1
      },
      "testSuffix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSuffix",
        "duration": 1
      },
      "testDecimalPlaces": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDecimalPlaces",
        "duration": 1
      },
      "testThousandsSeparator": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testThousandsSeparator",
        "duration": 1
      },
      "testComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplex",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:14 PM"
  },
  {
    "name": "Pjax",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 11,
    "total": 35,
    "duration": 459,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 73,
      "type": "testcase",
      "should plug into a Node instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should plug into a Node instance",
        "duration": 8
      }
    },
    "Attributes and Properties": {
      "name": "Attributes and Properties",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 4,
      "total": 13,
      "duration": 104,
      "type": "testcase",
      "`addPjaxParam` should be true by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addPjaxParam` should be true by default",
        "duration": 7
      },
      "Pjax param should be added when `addPjaxParam` is true": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should be added when `addPjaxParam` is true"
      },
      "Pjax param should be appended to an existing query string when `addPjaxParam` is true": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should be appended to an existing query string when `addPjaxParam` is true"
      },
      "Pjax param should be added before the fragment when `addPjaxParam` is true": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should be added before the fragment when `addPjaxParam` is true"
      },
      "Pjax param should not be added when `addPjaxParam` is false": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should not be added when `addPjaxParam` is false"
      },
      "`container` should be null by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`container` should be null by default",
        "duration": 13
      },
      "container` should always be `null` or a Node instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "container` should always be `null` or a Node instance",
        "duration": 13
      },
      "`contentSelector` should be null by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentSelector` should be null by default",
        "duration": 7
      },
      "`linkSelector` should select links with class \"yui3-pjax\" by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`linkSelector` should select links with class \"yui3-pjax\" by default",
        "duration": 7
      },
      "`navigateOnHash` should be false by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigateOnHash` should be false by default",
        "duration": 7
      },
      "`scrollToTop` should be true by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`scrollToTop` should be true by default",
        "duration": 7
      },
      "`timeout` should default to 30000ms": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`timeout` should default to 30000ms",
        "duration": 7
      },
      "`titleSelector` should select the title tag by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`titleSelector` should select the title tag by default",
        "duration": 8
      }
    },
    "Events": {
      "name": "Events",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 15,
      "duration": 127,
      "type": "testcase",
      "should attach events on init in HTML5 browsers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should attach events on init in HTML5 browsers",
        "duration": 7
      },
      "`error` event should fire on Ajax failure": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`error` event should fire on Ajax failure"
      },
      "`error` event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`error` event should be preventable",
        "duration": 7
      },
      "`load` event should fire on Ajax success": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`load` event should fire on Ajax success"
      },
      "`load` event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`load` event should be preventable",
        "duration": 8
      },
      "`navigate` event facade should contain the options passed to `navigate()`": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`navigate` event facade should contain the options passed to `navigate()`"
      },
      "`navigate` event should fire when a pjax link is clicked": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should fire when a pjax link is clicked",
        "duration": 9
      },
      "`navigate` event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should be preventable",
        "duration": 8
      },
      "`navigate` event should not fire when a link is clicked with a button other than the left button": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a link is clicked with a button other than the left button",
        "duration": 7
      },
      "`navigate` event should not fire when a modifier key is pressed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a modifier key is pressed",
        "duration": 7
      },
      "`navigate` event should not fire when a click element is not an anchor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a click element is not an anchor",
        "duration": 7
      },
      "`navigate` event should not fire when a link is clicked with a URL from another origin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a link is clicked with a URL from another origin",
        "duration": 8
      },
      "`navigate` event should not fire for a hash URL that resolves to the current page": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire for a hash URL that resolves to the current page",
        "duration": 8
      },
      "`navigate` event should fire for a hash-less URL that resolves to the current page": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should fire for a hash-less URL that resolves to the current page",
        "duration": 9
      },
      "`navigate` event should fire for a hash URL that resolves to the current page when `navigateOnHash` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should fire for a hash URL that resolves to the current page when `navigateOnHash` is `true`",
        "duration": 10
      }
    },
    "Methods": {
      "name": "Methods",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 3,
      "duration": 52,
      "type": "testcase",
      "`navigate()` should load the specified URL and fire a `load` event": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`navigate()` should load the specified URL and fire a `load` event"
      },
      "`navigate()` should normalize the specified URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate()` should normalize the specified URL",
        "duration": 32
      },
      "`navigate()` should throw an error when the specified URL is not of the same origin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate()` should throw an error when the specified URL is not of the same origin",
        "duration": 16
      }
    },
    "General Behavior": {
      "name": "General Behavior",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 3,
      "duration": 71,
      "type": "testcase",
      "Page title should be updated if the `titleSelector` matches an element": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Page title should be updated if the `titleSelector` matches an element"
      },
      "Host element content should be updated with page content when `contentSelector` is null": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Host element content should be updated with page content when `contentSelector` is null"
      },
      "Host element content should be updated with partial content when `contentSelector` selects a node": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Host element content should be updated with partial content when `contentSelector` selects a node"
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:16 PM"
  },
  {
    "name": "Overlay",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 172,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 94,
      "type": "testcase",
      "Y.Overlay() should create a new overlay widget": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Overlay() should create a new overlay widget",
        "duration": 82
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:17 PM"
  },
  {
    "name": "Plugin Host",
    "passed": 19,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 19,
    "duration": 184,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 158,
      "type": "testcase",
      "testPlugDuringConstruction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugDuringConstruction",
        "duration": 9
      },
      "testPlugUsingPlug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugUsingPlug",
        "duration": 9
      },
      "testUnplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnplug",
        "duration": 6
      },
      "testUnplugNonExistant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnplugNonExistant",
        "duration": 3
      },
      "testUnplugPlug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnplugPlug",
        "duration": 6
      },
      "testPluginHost": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginHost",
        "duration": 3
      },
      "testPlugFormatsDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsDefault",
        "duration": 3
      },
      "testPlugFormatsCustom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsCustom",
        "duration": 3
      },
      "testPlugFormatsCustomLiteral": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsCustomLiteral",
        "duration": 4
      },
      "testPlugFormatsArrayDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsArrayDefault",
        "duration": 4
      },
      "testPlugFormatsArrayCustom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsArrayCustom",
        "duration": 5
      },
      "testPlugFormatsArrayMixed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsArrayMixed",
        "duration": 4
      },
      "testPlugSamePluginTwice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugSamePluginTwice",
        "duration": 5
      },
      "testPlugSameNonAttrPluginTwice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugSameNonAttrPluginTwice",
        "duration": 2
      },
      "testPluginHostReference": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginHostReference",
        "duration": 3
      },
      "testPluginEventListeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginEventListeners",
        "duration": 7
      },
      "testPluginMethodInjection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginMethodInjection",
        "duration": 4
      },
      "testStaticPlug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticPlug",
        "duration": 12
      },
      "testHostDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHostDestroy",
        "duration": 7
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:18 PM"
  },
  {
    "name": "Matrix",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 122,
    "type": "report",
    "MatrixUtil tests": {
      "name": "MatrixUtil tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 84,
      "type": "testcase",
      "testGet3x3Determinant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet3x3Determinant",
        "duration": 1
      },
      "testGet4x4Determinant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet4x4Determinant",
        "duration": 2
      },
      "testGet3x3Inverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet3x3Inverse",
        "duration": 2
      },
      "test4x4Inverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test4x4Inverse",
        "duration": 6
      },
      "test3x3Transpose": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test3x3Transpose",
        "duration": 1
      },
      "test4x4Transpose": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test4x4Transpose",
        "duration": 2
      }
    },
    "Matrix tests": {
      "name": "Matrix tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 11,
      "type": "testcase",
      "testGetDeterminant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetDeterminant",
        "duration": 1
      },
      "testGetInverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInverse",
        "duration": 3
      },
      "testGetTranspose": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetTranspose",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:19 PM"
  },
  {
    "name": "History: HTML5",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 332,
    "type": "report",
    "HistoryHTML5": {
      "name": "HistoryHTML5",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 306,
      "type": "testcase",
      "Y.HistoryHTML5 constructor should accept an initialState config property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.HistoryHTML5 constructor should accept an initialState config property",
        "duration": 3
      },
      "Y.History should === Y.HistoryHTML5 by default except when not supported": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.History should === Y.HistoryHTML5 by default except when not supported",
        "duration": 1
      },
      "Y.config.useHistoryHTML5 should specify the behavior of the Y.History alias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.config.useHistoryHTML5 should specify the behavior of the Y.History alias",
        "duration": 230
      },
      "add() should change state": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should change state",
        "duration": 3
      },
      "add() should set a custom URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should set a custom URL",
        "duration": 3
      },
      "replace() should change state without a new history entry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should change state without a new history entry",
        "duration": 2
      },
      "replace() should set a custom URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should set a custom URL",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:20 PM"
  },
  {
    "name": "History: Hash",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 18,
    "duration": 1167,
    "type": "report",
    "HistoryHash": {
      "name": "HistoryHash",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 18,
      "duration": 1140,
      "type": "testcase",
      "synthetic hashchange event should fire when the hash changes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "synthetic hashchange event should fire when the hash changes",
        "duration": 69
      },
      "hashchange should be case-sensitive (except in IE8+)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "hashchange should be case-sensitive (except in IE8+)"
      },
      "hashchange should NOT be case-sensitive in IE8+": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "hashchange should NOT be case-sensitive in IE8+",
        "duration": 132
      },
      "createHash() should create a hash string from an object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "createHash() should create a hash string from an object",
        "duration": 2
      },
      "decode() should decode URI components with + for space": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "decode() should decode URI components with + for space",
        "duration": 2
      },
      "encode() should encode URI components with + for space": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "encode() should encode URI components with + for space",
        "duration": 2
      },
      "setHash() should set the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setHash() should set the hash",
        "duration": 4
      },
      "getHash() should get the current raw (not decoded) hash string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getHash() should get the current raw (not decoded) hash string",
        "duration": 3
      },
      "getUrl() should get the current URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getUrl() should get the current URL",
        "duration": 2
      },
      "parseHash() should parse a hash string into an object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "parseHash() should parse a hash string into an object",
        "duration": 2
      },
      "parseHash() should use the current hash if no argument is provided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "parseHash() should use the current hash if no argument is provided",
        "duration": 2
      },
      "replaceHash() should replace the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceHash() should replace the hash",
        "duration": 4
      },
      "bookmarked state should be merged into initialState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "bookmarked state should be merged into initialState",
        "duration": 71
      },
      "add() should change the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should change the hash",
        "duration": 8
      },
      "replace() should replace the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should replace the hash",
        "duration": 5
      },
      "Setting an unencoded hash value outside of HistoryHash should not result in two history entries": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Setting an unencoded hash value outside of HistoryHash should not result in two history entries",
        "duration": 187
      },
      "Setting a non-string value should not result in two history entries": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Setting a non-string value should not result in two history entries",
        "duration": 304
      },
      "Subscribers of hashchange should not be called once for every YUI instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Subscribers of hashchange should not be called once for every YUI instance",
        "duration": 128
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:22 PM"
  },
  {
    "name": "History: Base",
    "passed": 22,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 22,
    "duration": 159,
    "type": "report",
    "HistoryBase": {
      "name": "HistoryBase",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 133,
      "type": "testcase",
      "Initial state should be an empty object by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Initial state should be an empty object by default",
        "duration": 1
      },
      "Constructor should accept a config object containing an initial state": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Constructor should accept a config object containing an initial state",
        "duration": 2
      },
      "Constructor should ignore an argument that isn't an object hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Constructor should ignore an argument that isn't an object hash",
        "duration": 1
      },
      "HistoryBase should have a static boolean html5 property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HistoryBase should have a static boolean html5 property",
        "duration": 1
      },
      "HistoryBase should have a static boolean nativeHashChange property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HistoryBase should have a static boolean nativeHashChange property",
        "duration": 1
      },
      "_resolveChanges() should change the state and fire events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_resolveChanges() should change the state and fire events",
        "duration": 3
      },
      "_resolveChanges() should pass the src param to events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_resolveChanges() should pass the src param to events",
        "duration": 2
      },
      "_resolveChanges() should not fire events when there are no changes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_resolveChanges() should not fire events when there are no changes",
        "duration": 1
      },
      "local events should not fire for changes in other HistoryBase instances": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "local events should not fire for changes in other HistoryBase instances",
        "duration": 3
      },
      "add() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should change state with the correct event src",
        "duration": 2
      },
      "add() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "add() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should not merge states when the \"merge\" option is false",
        "duration": 2
      },
      "add() should allow non-object states": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should allow non-object states",
        "duration": 2
      },
      "addValue() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addValue() should change state with the correct event src",
        "duration": 2
      },
      "addValue() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addValue() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "addValue() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addValue() should not merge states when the \"merge\" option is false",
        "duration": 2
      },
      "replace() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should change state with the correct event src",
        "duration": 1
      },
      "replace() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "replace() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should not merge states when the \"merge\" option is false",
        "duration": 2
      },
      "replaceValue() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceValue() should change state with the correct event src",
        "duration": 2
      },
      "replaceValue() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceValue() should merge states when the \"merge\" option is true",
        "duration": 1
      },
      "replaceValue() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceValue() should not merge states when the \"merge\" option is false",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:23 PM"
  },
  {
    "name": "Graphics: Set Shape Fill And Stroke",
    "passed": 501,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 501,
    "duration": 11329,
    "type": "report",
    "SetShapeFillAndStrokeTests": {
      "name": "SetShapeFillAndStrokeTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 20
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:35 PM"
  },
  {
    "name": "Graphics: Path",
    "passed": 41,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 41,
    "duration": 1060,
    "type": "report",
    "testCase_yui_3_5_0_1_1348871916016_64": {
      "name": "testCase_yui_3_5_0_1_1348871916016_64",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 87,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_65": {
      "name": "testCase_yui_3_5_0_1_1348871916016_65",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 13
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_66": {
      "name": "testCase_yui_3_5_0_1_1348871916016_66",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_67": {
      "name": "testCase_yui_3_5_0_1_1348871916016_67",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 13
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_68": {
      "name": "testCase_yui_3_5_0_1_1348871916016_68",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_69": {
      "name": "testCase_yui_3_5_0_1_1348871916016_69",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_70": {
      "name": "testCase_yui_3_5_0_1_1348871916016_70",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_71": {
      "name": "testCase_yui_3_5_0_1_1348871916016_71",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_72": {
      "name": "testCase_yui_3_5_0_1_1348871916016_72",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_73": {
      "name": "testCase_yui_3_5_0_1_1348871916016_73",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 21
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_74": {
      "name": "testCase_yui_3_5_0_1_1348871916016_74",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_75": {
      "name": "testCase_yui_3_5_0_1_1348871916016_75",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 38,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 37
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_76": {
      "name": "testCase_yui_3_5_0_1_1348871916016_76",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_77": {
      "name": "testCase_yui_3_5_0_1_1348871916016_77",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_78": {
      "name": "testCase_yui_3_5_0_1_1348871916016_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_79": {
      "name": "testCase_yui_3_5_0_1_1348871916016_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_80": {
      "name": "testCase_yui_3_5_0_1_1348871916016_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_81": {
      "name": "testCase_yui_3_5_0_1_1348871916016_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 27,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 25
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_82": {
      "name": "testCase_yui_3_5_0_1_1348871916016_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 91,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 88
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_83": {
      "name": "testCase_yui_3_5_0_1_1348871916016_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_84": {
      "name": "testCase_yui_3_5_0_1_1348871916016_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_85": {
      "name": "testCase_yui_3_5_0_1_1348871916016_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_86": {
      "name": "testCase_yui_3_5_0_1_1348871916016_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_87": {
      "name": "testCase_yui_3_5_0_1_1348871916016_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_88": {
      "name": "testCase_yui_3_5_0_1_1348871916016_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 34,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_89": {
      "name": "testCase_yui_3_5_0_1_1348871916016_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 25,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 24
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_90": {
      "name": "testCase_yui_3_5_0_1_1348871916016_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_91": {
      "name": "testCase_yui_3_5_0_1_1348871916016_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_92": {
      "name": "testCase_yui_3_5_0_1_1348871916016_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_93": {
      "name": "testCase_yui_3_5_0_1_1348871916016_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_94": {
      "name": "testCase_yui_3_5_0_1_1348871916016_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 23,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 21
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_95": {
      "name": "testCase_yui_3_5_0_1_1348871916016_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_96": {
      "name": "testCase_yui_3_5_0_1_1348871916016_96",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_97": {
      "name": "testCase_yui_3_5_0_1_1348871916016_97",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_98": {
      "name": "testCase_yui_3_5_0_1_1348871916016_98",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 25,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 23
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_99": {
      "name": "testCase_yui_3_5_0_1_1348871916016_99",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_100": {
      "name": "testCase_yui_3_5_0_1_1348871916016_100",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_101": {
      "name": "testCase_yui_3_5_0_1_1348871916016_101",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_102": {
      "name": "testCase_yui_3_5_0_1_1348871916016_102",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_103": {
      "name": "testCase_yui_3_5_0_1_1348871916016_103",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 23,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 22
      }
    },
    "testCase_yui_3_5_0_1_1348871916016_104": {
      "name": "testCase_yui_3_5_0_1_1348871916016_104",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:37 PM"
  },
  {
    "name": "Graphics: Shape Fill And Stroke",
    "passed": 222,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 222,
    "duration": 5017,
    "type": "report",
    "ShapeFillAndStrokeTests": {
      "name": "ShapeFillAndStrokeTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 13
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:43 PM"
  },
  {
    "name": "Graphics: Shape Depth Tests",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 169,
    "type": "report",
    "ShapeDepthTests": {
      "name": "ShapeDepthTests",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 136,
      "type": "testcase",
      "testRectToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRectToFront",
        "duration": 28
      },
      "testCircleToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCircleToFront",
        "duration": 2
      },
      "testEllipseToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEllipseToFront",
        "duration": 1
      },
      "testRoundRectToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRoundRectToFront",
        "duration": 1
      },
      "testRoundRectToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRoundRectToBack",
        "duration": 2
      },
      "testEllipseToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEllipseToBack",
        "duration": 2
      },
      "testCircleToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCircleToBack",
        "duration": 1
      },
      "testRectToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRectToBack",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:38:44 PM"
  },
  {
    "name": "Graphics: Shape Anim Transform",
    "passed": 48,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 48,
    "duration": 26259,
    "type": "report",
    "ShapeAnimTests": {
      "name": "ShapeAnimTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 544,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 533
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:12 PM"
  },
  {
    "name": "Graphics: Base",
    "passed": 109,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 109,
    "duration": 1536,
    "type": "report",
    "GraphicsTests": {
      "name": "GraphicsTests",
      "passed": 64,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 64,
      "duration": 827,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 8
      },
      "test render()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render()",
        "duration": 26
      },
      "test addShape(circle)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(circle)",
        "duration": 11
      },
      "test mycircleDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircleDefaultClassString()",
        "duration": 7
      },
      "test mycircle.get(radius)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(radius)",
        "duration": 8
      },
      "test mycircle.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(width)",
        "duration": 8
      },
      "test mycircle.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(height)",
        "duration": 7
      },
      "test mycircle.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(stroke)",
        "duration": 10
      },
      "test mycircle.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(fill)",
        "duration": 6
      },
      "test mycircle.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(x)",
        "duration": 11
      },
      "test mycircle.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(y)",
        "duration": 7
      },
      "test mycircle.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.set(stroke)",
        "duration": 9
      },
      "test mycircle.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.set(fill)",
        "duration": 7
      },
      "test mycircle.contains()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.contains()",
        "duration": 7
      },
      "test mycircle.compareTo()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.compareTo()",
        "duration": 9
      },
      "testRemoveShape(circle)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveShape(circle)",
        "duration": 6
      },
      "test addShape(rect)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(rect)",
        "duration": 11
      },
      "test myrectDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrectDefaultClassString()",
        "duration": 8
      },
      "test myrect.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(width)",
        "duration": 8
      },
      "test myrect.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(height)",
        "duration": 5
      },
      "test myrect.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(stroke)",
        "duration": 6
      },
      "test myrect.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(fill)",
        "duration": 5
      },
      "test myrect.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(x)",
        "duration": 10
      },
      "test myrect.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(y)",
        "duration": 6
      },
      "test myrect.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(stroke)",
        "duration": 12
      },
      "testRectStrokeWeightType": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRectStrokeWeightType",
        "duration": 10
      },
      "test myrect.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(fill)",
        "duration": 18
      },
      "test myrect.set(stroke===0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(stroke===0)",
        "duration": 9
      },
      "test myrect.set(stroke-dashstyle)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(stroke-dashstyle)",
        "duration": 10
      },
      "test removeShape(rect)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeShape(rect)",
        "duration": 6
      },
      "test addShape(ellipse)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(ellipse)",
        "duration": 12
      },
      "test myellipseDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipseDefaultClassString()",
        "duration": 7
      },
      "test myellipse.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(width)",
        "duration": 6
      },
      "test myellipse.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(height)",
        "duration": 7
      },
      "test myellipse.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(stroke)",
        "duration": 10
      },
      "test myellipse.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(fill)",
        "duration": 5
      },
      "test myellipse.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(x)",
        "duration": 10
      },
      "test myellipse.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(y)",
        "duration": 6
      },
      "test myellipse.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(stroke)",
        "duration": 11
      },
      "test myellipse.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(fill)",
        "duration": 7
      },
      "test myellipse.set(xRadius)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(xRadius)",
        "duration": 9
      },
      "test myellipse.set(yRadius)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(yRadius)",
        "duration": 8
      },
      "test removeShape(ellipse)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeShape(ellipse)",
        "duration": 6
      },
      "test addEllipseWithXRadiusAndYRadius()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addEllipseWithXRadiusAndYRadius()",
        "duration": 11
      },
      "test addShape(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(path)",
        "duration": 27
      },
      "test mypathDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypathDefaultClassString()",
        "duration": 7
      },
      "test mypath.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(width)",
        "duration": 6
      },
      "test mypath.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(height)",
        "duration": 6
      },
      "test mypath.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(stroke)",
        "duration": 11
      },
      "test mypath.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(fill)",
        "duration": 6
      },
      "test mypath.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(x)",
        "duration": 6
      },
      "test mypath.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(y)",
        "duration": 5
      },
      "test mypath.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.set(stroke)",
        "duration": 7
      },
      "test mypath.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.set(fill)",
        "duration": 12
      },
      "test rotate(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test rotate(path)",
        "duration": 7
      },
      "test skewX(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test skewX(path)",
        "duration": 9
      },
      "test skewY(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test skewY(path)",
        "duration": 8
      },
      "test skew(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test skew(path)",
        "duration": 8
      },
      "test scale(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test scale(path)",
        "duration": 7
      },
      "test translate(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test translate(path)",
        "duration": 7
      },
      "test translateX(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test translateX(path)",
        "duration": 11
      },
      "test translateY(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test translateY(path)",
        "duration": 7
      },
      "test removeShape(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeShape(path)",
        "duration": 9
      },
      "test passRotation(rect)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test passRotation(rect)",
        "duration": 7
      }
    },
    "rectVisibleAttributeTest": {
      "name": "rectVisibleAttributeTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testSetVisibleUpfront()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetVisibleUpfront()",
        "duration": 18
      }
    },
    "circleVisibleAttributeTest": {
      "name": "circleVisibleAttributeTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testSetVisibleUpfront()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetVisibleUpfront()",
        "duration": 17
      }
    },
    "ellipseVisibleAttributeTest": {
      "name": "ellipseVisibleAttributeTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testSetVisibleUpfront()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetVisibleUpfront()",
        "duration": 16
      }
    },
    "rectSetIdTest": {
      "name": "rectSetIdTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 17
      }
    },
    "circleSetIdTest": {
      "name": "circleSetIdTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 18
      }
    },
    "ellipseSetIdTest": {
      "name": "ellipseSetIdTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 16
      }
    },
    "rectSetIdUpFrontTest": {
      "name": "rectSetIdUpFrontTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 17
      }
    },
    "circleSetIdUpFrontTest": {
      "name": "circleSetIdUpFrontTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 16
      }
    },
    "ellipseSetIdUpFrontTest": {
      "name": "ellipseSetIdUpFrontTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1348871952434_64": {
      "name": "testCase_yui_3_5_0_1_1348871952434_64",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testStandaloneShape()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStandaloneShape()",
        "duration": 12
      }
    },
    "rectGetXYTest": {
      "name": "rectGetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.getXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.getXY()",
        "duration": 13
      }
    },
    "circleGetXYTest": {
      "name": "circleGetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testShape.getXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.getXY()",
        "duration": 18
      }
    },
    "ellipseGetXYTest": {
      "name": "ellipseGetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testShape.getXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.getXY()",
        "duration": 17
      }
    },
    "rectSetXYTest": {
      "name": "rectSetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testShape.setXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.setXY()",
        "duration": 17
      }
    },
    "circleSetXYTest": {
      "name": "circleSetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testShape.setXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.setXY()",
        "duration": 18
      }
    },
    "ellipseSetXYTest": {
      "name": "ellipseSetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 24,
      "type": "testcase",
      "testShape.setXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.setXY()",
        "duration": 20
      }
    },
    "rectAddClassTest": {
      "name": "rectAddClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testShape.addClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.addClass()",
        "duration": 15
      }
    },
    "circleAddClassTest": {
      "name": "circleAddClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testShape.addClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.addClass()",
        "duration": 17
      }
    },
    "ellipseAddClassTest": {
      "name": "ellipseAddClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.addClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.addClass()",
        "duration": 18
      }
    },
    "rectRemoveClassTest": {
      "name": "rectRemoveClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testShape.removeClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.removeClass()",
        "duration": 16
      }
    },
    "circleRemoveClassTest": {
      "name": "circleRemoveClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.removeClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.removeClass()",
        "duration": 17
      }
    },
    "ellipseRemoveClassTest": {
      "name": "ellipseRemoveClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testShape.removeClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.removeClass()",
        "duration": 13
      }
    },
    "SVGGraphicsTests": {
      "name": "SVGGraphicsTests",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 175,
      "type": "testcase",
      "testSVGGraphic()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGGraphic()",
        "duration": 12
      },
      "testSVGRectNode()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNode()",
        "duration": 7
      },
      "testSVGRectNodeDimensions()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeDimensions()",
        "duration": 7
      },
      "testSVGRectNodeFillColor()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeFillColor()",
        "duration": 6
      },
      "testSVGRectNodeFillOpacity()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeFillOpacity()",
        "duration": 6
      },
      "testSVGRectNodeStrokeColor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeColor",
        "duration": 6
      },
      "testSVGRectNodeStrokeWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeWidth",
        "duration": 10
      },
      "testSVGRectNodeStroke": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStroke",
        "duration": 6
      },
      "testSVGRectNodeStrokeDashArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeDashArray",
        "duration": 8
      },
      "testSVGRectNodeStrokeLineCap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineCap",
        "duration": 7
      },
      "testSVGRectNodeStrokeLineJoin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineJoin",
        "duration": 6
      },
      "testSVGRectNodeStrokeLineJoinBevel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineJoinBevel",
        "duration": 10
      },
      "testSVGRectNodeWidthAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeWidthAgainstShapeAttr",
        "duration": 6
      },
      "testSVGRectNodeHeightAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeHeightAgainstShapeAttr",
        "duration": 6
      },
      "testSVGRectNodeFillAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeFillAgainstShapeAttr",
        "duration": 6
      },
      "testSVGRectNodeStrokeAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeAgainstShapeAttr",
        "duration": 10
      },
      "testSVGRectNodeStrokeLineJoinMiterLimit=3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineJoinMiterLimit=3",
        "duration": 6
      },
      "testSVGRect.test()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRect.test()",
        "duration": 9
      },
      "test addSVGPieSlice()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addSVGPieSlice()",
        "duration": 8
      }
    },
    "GraphicsTransformTests": {
      "name": "GraphicsTransformTests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 46,
      "type": "testcase",
      "testGraphicInstantiation()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicInstantiation()",
        "duration": 17
      },
      "testTransformAttributeIntantiation()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTransformAttributeIntantiation()",
        "duration": 7
      },
      "testAddTransformStringAppend()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddTransformStringAppend()",
        "duration": 7
      },
      "testAddTransformsAndCompareToString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddTransformsAndCompareToString()",
        "duration": 7
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:14 PM"
  },
  {
    "name": "Graphics: Graphic",
    "passed": 62,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 62,
    "duration": 1856,
    "type": "report",
    "testCase_yui_3_5_0_1_1348871954996_65": {
      "name": "testCase_yui_3_5_0_1_1348871954996_65",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 177,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 95
      }
    },
    "testCase_yui_3_5_0_1_1348871954996_66": {
      "name": "testCase_yui_3_5_0_1_1348871954996_66",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 96,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 96
      }
    },
    "testCase_yui_3_5_0_1_1348871954996_67": {
      "name": "testCase_yui_3_5_0_1_1348871954996_67",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 168,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 143
      }
    },
    "testCase_yui_3_5_0_1_1348871954996_68": {
      "name": "testCase_yui_3_5_0_1_1348871954996_68",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 193,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 186
      }
    },
    "AddAndRemoveShapes": {
      "name": "AddAndRemoveShapes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "AddAndRemoveShapesById": {
      "name": "AddAndRemoveShapesById",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "AddAndRemoveShapesAndSetAttributes": {
      "name": "AddAndRemoveShapesAndSetAttributes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "GraphicTestXY": {
      "name": "GraphicTestXY",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 11
      }
    },
    "ToggleVisibleTest": {
      "name": "ToggleVisibleTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 24,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 21
      }
    },
    "TestGraphic.getShapeById()": {
      "name": "TestGraphic.getShapeById()",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWide": {
      "name": "SizeDownWide",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownTall": {
      "name": "SizeDownTall",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioNone": {
      "name": "SizeDownWideAspectRatioNone",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioNoneResizeDown": {
      "name": "SizeDownWideAspectRatioNoneResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 12,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMinYMin": {
      "name": "SizeDownWideAspectRatioXMinYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMinYMinResizeDown": {
      "name": "SizeDownWideAspectRatioXMinYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMidYMin": {
      "name": "SizeDownWideAspectRatioXMidYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMidYMinResizeDown": {
      "name": "SizeDownWideAspectRatioXMidYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMaxYMin": {
      "name": "SizeDownWideAspectRatioXMaxYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMaxYMinResizeDown": {
      "name": "SizeDownWideAspectRatioXMaxYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 14,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "SizeDownWideAspectRatioXMinYMid": {
      "name": "SizeDownWideAspectRatioXMinYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "SizeDownWideAspectRatioXMinYMidResizeDown": {
      "name": "SizeDownWideAspectRatioXMinYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMidYMid": {
      "name": "SizeDownWideAspectRatioXMidYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownWideAspectRatioXMidYMidResizeDown": {
      "name": "SizeDownWideAspectRatioXMidYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 25,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 22
      }
    },
    "SizeDownWideAspectRatioXMaxYMid": {
      "name": "SizeDownWideAspectRatioXMaxYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMaxYMidResizeDown": {
      "name": "SizeDownWideAspectRatioXMaxYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownWideAspectRatioXMinYMax": {
      "name": "SizeDownWideAspectRatioXMinYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownWideAspectRatioXMinYMaxResizeDown": {
      "name": "SizeDownWideAspectRatioXMinYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownWideAspectRatioXMidYMax": {
      "name": "SizeDownWideAspectRatioXMidYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "SizeDownWideAspectRatioXMidYMaxResizeDown": {
      "name": "SizeDownWideAspectRatioXMidYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMaxYMax": {
      "name": "SizeDownWideAspectRatioXMaxYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMaxYMaxResizeDown": {
      "name": "SizeDownWideAspectRatioXMaxYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "SizeDownTallAspectRatioNone": {
      "name": "SizeDownTallAspectRatioNone",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 24,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 23
      }
    },
    "SizeDownTallAspectRatioNoneResizeDown": {
      "name": "SizeDownTallAspectRatioNoneResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "SizeDownTallAspectRatioXMinYMin": {
      "name": "SizeDownTallAspectRatioXMinYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "SizeDownTallAspectRatioXMinYMinResizeDown": {
      "name": "SizeDownTallAspectRatioXMinYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownTallAspectRatioXMidYMin": {
      "name": "SizeDownTallAspectRatioXMidYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "SizeDownTallAspectRatioXMidYMinResizeDown": {
      "name": "SizeDownTallAspectRatioXMidYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownTallAspectRatioXMaxYMin": {
      "name": "SizeDownTallAspectRatioXMaxYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "SizeDownTallAspectRatioXMaxYMinResizeDown": {
      "name": "SizeDownTallAspectRatioXMaxYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMinYMid": {
      "name": "SizeDownTallAspectRatioXMinYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMinYMidResizeDown": {
      "name": "SizeDownTallAspectRatioXMinYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "SizeDownTallAspectRatioXMidYMid": {
      "name": "SizeDownTallAspectRatioXMidYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMidYMidResizeDown": {
      "name": "SizeDownTallAspectRatioXMidYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownTallAspectRatioXMaxYMid": {
      "name": "SizeDownTallAspectRatioXMaxYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 32,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 31
      }
    },
    "SizeDownTallAspectRatioXMaxYMidResizeDown": {
      "name": "SizeDownTallAspectRatioXMaxYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 76,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioXMinYMax": {
      "name": "SizeDownTallAspectRatioXMinYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownTallAspectRatioXMinYMaxResizeDown": {
      "name": "SizeDownTallAspectRatioXMinYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMidYMax": {
      "name": "SizeDownTallAspectRatioXMidYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "SizeDownTallAspectRatioXMidYMaxResizeDown": {
      "name": "SizeDownTallAspectRatioXMidYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMaxYMax": {
      "name": "SizeDownTallAspectRatioXMaxYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownTallAspectRatioXMaxYMaxResizeDown": {
      "name": "SizeDownTallAspectRatioXMaxYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:17 PM"
  },
  {
    "name": "Get",
    "passed": 68,
    "failed": 0,
    "errors": 0,
    "ignored": 8,
    "total": 76,
    "duration": 2191,
    "type": "report",
    "Basic JS loading": {
      "name": "Basic JS loading",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 7,
      "total": 26,
      "duration": 697,
      "type": "testcase",
      "test: single script, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single script, success",
        "duration": 13
      },
      "test: single script, failure": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: single script, failure"
      },
      "test: single script timeout callback": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: single script timeout callback"
      },
      "test: single script success, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single script success, end",
        "duration": 16
      },
      "test: single script failure, end": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: single script failure, end"
      },
      "test: multiple scripts, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple scripts, success",
        "duration": 46
      },
      "test: multiple scripts, one failure": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: multiple scripts, one failure"
      },
      "test: multiple scripts, success, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple scripts, success, end",
        "duration": 22
      },
      "test: multiple scripts, failure, end": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: multiple scripts, failure, end"
      },
      "test: async multiple scripts, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple scripts, success",
        "duration": 22
      },
      "test: async multiple scripts, success, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple scripts, success, end",
        "duration": 20
      },
      "test: async multiple script, failure, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple script, failure, end",
        "duration": 18
      },
      "test: insertBefore, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, single",
        "duration": 15
      },
      "test: insertBefore, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, multiple",
        "duration": 27
      },
      "test: async, insertBefore, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async, insertBefore, multiple",
        "duration": 25
      },
      "test: charset, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, single",
        "duration": 10
      },
      "test: charset, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, multiple",
        "duration": 36
      },
      "test: async, charset, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async, charset, multiple",
        "duration": 24
      },
      "test: attributes, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, single",
        "duration": 12
      },
      "test: attributes, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, multiple",
        "duration": 29
      },
      "test: async, attributes, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async, attributes, multiple",
        "duration": 18
      },
      "ignore: abort": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": " abort"
      },
      "ignore: timeout": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": " timeout"
      },
      "scripts should be automatically purged after 20 nodes by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "scripts should be automatically purged after 20 nodes by default",
        "duration": 132
      },
      "test: purgethreshold": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: purgethreshold",
        "duration": 23
      },
      "test: async multiple script, failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple script, failure",
        "duration": 19
      }
    },
    "Basic CSS loading": {
      "name": "Basic CSS loading",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 327,
      "type": "testcase",
      "test: single css, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single css, success",
        "duration": 21
      },
      "test: multiple css, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple css, success",
        "duration": 28
      },
      "test: insertBefore, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, single",
        "duration": 22
      },
      "test: insertBefore, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, multiple",
        "duration": 25
      },
      "test: charset, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, single",
        "duration": 37
      },
      "test: charset, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, multiple",
        "duration": 33
      },
      "test: attributes, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, single",
        "duration": 21
      },
      "test: attributes, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, multiple",
        "duration": 25
      },
      "test: single css, failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single css, failure",
        "duration": 23
      },
      "test: multiple css, failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple css, failure",
        "duration": 25
      },
      "CSS nodes should be inserted in order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "CSS nodes should be inserted in order",
        "duration": 24
      }
    },
    "Y.Get methods": {
      "name": "Y.Get methods",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 468,
      "type": "testcase",
      "abort() should abort a transaction when given a transaction object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should abort a transaction when given a transaction object",
        "duration": 9
      },
      "abort() should abort a transaction when given a transaction id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should abort a transaction when given a transaction id",
        "duration": 14
      },
      "css() should accept a URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a URL",
        "duration": 30
      },
      "css() should accept a URL, options object, and callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a URL, options object, and callback function",
        "duration": 10
      },
      "css() should allow the callback function as the second parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should allow the callback function as the second parameter",
        "duration": 8
      },
      "css() should accept an array of URLs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept an array of URLs",
        "duration": 8
      },
      "css() should accept a request object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a request object",
        "duration": 6
      },
      "css() should accept an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept an array of request objects",
        "duration": 10
      },
      "css() should accept a mixed array of URLs and request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a mixed array of URLs and request objects",
        "duration": 7
      },
      "js() should accept a URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a URL",
        "duration": 49
      },
      "js() should accept a URL, options object, and callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a URL, options object, and callback function",
        "duration": 13
      },
      "js() should allow the callback function as the second parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should allow the callback function as the second parameter",
        "duration": 9
      },
      "js() should accept an array of URLs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept an array of URLs",
        "duration": 18
      },
      "js() should accept a request object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a request object",
        "duration": 8
      },
      "js() should accept an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept an array of request objects",
        "duration": 19
      },
      "js() should accept a mixed array of URLs and request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a mixed array of URLs and request objects",
        "duration": 19
      },
      "load() should accept a URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a URL",
        "duration": 28
      },
      "load() should accept a URL, options object, and callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a URL, options object, and callback function",
        "duration": 9
      },
      "load() should allow the callback function as the second parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should allow the callback function as the second parameter",
        "duration": 10
      },
      "load() should accept an array of URLs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept an array of URLs",
        "duration": 16
      },
      "load() should accept a request object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a request object",
        "duration": 9
      },
      "load() should accept an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept an array of request objects",
        "duration": 12
      },
      "load() should accept a mixed array of URLs and request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a mixed array of URLs and request objects",
        "duration": 19
      },
      "script() should be an alias for js()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "script() should be an alias for js()",
        "duration": 1
      }
    },
    "Transaction behavior": {
      "name": "Transaction behavior",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 34,
      "type": "testcase",
      "transactions should always execute one at a time by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "transactions should always execute one at a time by default",
        "duration": 28
      }
    },
    "Transaction methods": {
      "name": "Transaction methods",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 90,
      "type": "testcase",
      "abort() should abort the transaction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should abort the transaction",
        "duration": 8
      },
      "abort() should accept a custom error message": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should accept a custom error message",
        "duration": 9
      },
      "execute() should queue callbacks": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "execute() should queue callbacks",
        "duration": 15
      },
      "execute() should call the callback immediately if the transaction has already finished": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "execute() should call the callback immediately if the transaction has already finished",
        "duration": 12
      },
      "purge() should purge any nodes inserted by the transaction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "purge() should purge any nodes inserted by the transaction",
        "duration": 28
      }
    },
    "Transaction properties": {
      "name": "Transaction properties",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 6,
      "duration": 110,
      "type": "testcase",
      "transactions should have a unique `id` property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "transactions should have a unique `id` property",
        "duration": 7
      },
      "transactions should have a `data` property when a data object is provided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "transactions should have a `data` property when a data object is provided",
        "duration": 7
      },
      "`errors` property should contain an array of error objects": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`errors` property should contain an array of error objects"
      },
      "`nodes` property should contain an array of injected nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`nodes` property should contain an array of injected nodes",
        "duration": 40
      },
      "`options` property should contain transaction options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`options` property should contain transaction options",
        "duration": 6
      },
      "`requests` property should contain an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`requests` property should contain an array of request objects",
        "duration": 17
      }
    },
    "Options": {
      "name": "Options",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "`class` attribute should be set correctly in all browsers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`class` attribute should be set correctly in all browsers",
        "duration": 10
      }
    },
    "Functional tests": {
      "name": "Functional tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 366,
      "type": "testcase",
      "test: Loader, ScrollView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Loader, ScrollView",
        "duration": 161
      },
      "test: Loader, Autocomplete": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Loader, Autocomplete",
        "duration": 193
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:20 PM"
  },
  {
    "name": "Intl",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 136,
    "type": "report",
    "Lookup Best Language Tests": {
      "name": "Lookup Best Language Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 35,
      "type": "testcase",
      "testArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArray",
        "duration": 1
      },
      "testString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testString",
        "duration": 1
      },
      "testStar": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStar",
        "duration": 1
      },
      "testPrivate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivate",
        "duration": 0
      }
    },
    "Basic Intl Language Store Tests": {
      "name": "Basic Intl Language Store Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 2
      },
      "testRoot": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRoot",
        "duration": 1
      },
      "testGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet",
        "duration": 1
      }
    },
    "Get All Languages": {
      "name": "Get All Languages",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test: getAvailableLangs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: getAvailableLangs",
        "duration": 0
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:21 PM"
  },
  {
    "name": "Dump",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 125,
    "type": "report",
    "Dump tests": {
      "name": "Dump tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 48,
      "type": "testcase",
      "test_dump": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump",
        "duration": 1
      },
      "test: dump with a date": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: dump with a date",
        "duration": 1
      },
      "test: HTMLElement": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTMLElement",
        "duration": 1
      },
      "test: HTMLDocument": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTMLDocument",
        "duration": 1
      },
      "test: HTMLWindow": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTMLWindow",
        "duration": 0
      },
      "test: function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: function",
        "duration": 1
      },
      "test: array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: array",
        "duration": 1
      },
      "test: array with object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: array with object",
        "duration": 1
      },
      "test: array with regex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: array with regex",
        "duration": 1
      },
      "test: default depth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: default depth",
        "duration": 1
      },
      "test: depth of 5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: depth of 5",
        "duration": 1
      },
      "test: depth of 10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: depth of 10",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:22 PM"
  },
  {
    "name": "JSON",
    "passed": 68,
    "failed": 1,
    "errors": 22,
    "ignored": 0,
    "total": 69,
    "duration": 787,
    "type": "report",
    "Y.JSON.parse (JavaScript implementation)": {
      "name": "Y.JSON.parse (JavaScript implementation)",
      "passed": 48,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 48,
      "duration": 340,
      "type": "testsuite",
      "parse": {
        "name": "parse",
        "passed": 47,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 47,
        "duration": 329,
        "type": "testcase",
        "test_emptyObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_emptyObject",
          "duration": 26
        },
        "test_emptyArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_emptyArray",
          "duration": 1
        },
        "test_JSONNatives": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_JSONNatives",
          "duration": 1
        },
        "test_basics": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_basics",
          "duration": 1
        },
        "test_nonObjectWrapper": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_nonObjectWrapper",
          "duration": 1
        },
        "test_failOnEmptyString": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnEmptyString",
          "duration": 5
        },
        "test_failOnFunction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnFunction",
          "duration": 27
        },
        "test_failOnRegex": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnRegex",
          "duration": 19
        },
        "test_failOnNew": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnNew",
          "duration": 5
        },
        "test_failOnUnquotedVal": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnquotedVal",
          "duration": 4
        },
        "test_failOnUnquotedKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnquotedKey",
          "duration": 5
        },
        "test_failOnUnclosedObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnclosedObject",
          "duration": 5
        },
        "test_failOnUnclosedArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnclosedArray",
          "duration": 5
        },
        "test_failOnExtraCommaInObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExtraCommaInObject",
          "duration": 29
        },
        "test_failOnDoubleExtraCommaInObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDoubleExtraCommaInObject",
          "duration": 7
        },
        "test_failOnExtraCommaInArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExtraCommaInArray",
          "duration": 5
        },
        "test_failOnDoubleExtraCommaInArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDoubleExtraCommaInArray",
          "duration": 6
        },
        "test_failOnMissingValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnMissingValue",
          "duration": 7
        },
        "test_failOnCommaAfterClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnCommaAfterClose",
          "duration": 5
        },
        "test_failOnValueAfterClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnValueAfterClose",
          "duration": 6
        },
        "test_failOnExtraClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExtraClose",
          "duration": 5
        },
        "test_failOnExpression": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExpression",
          "duration": 5
        },
        "test_failOnZeroPrefixedNumber": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnZeroPrefixedNumber",
          "duration": 6
        },
        "test_failOnHex": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnHex",
          "duration": 4
        },
        "test_failOnIllegalBackslashEscape": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnIllegalBackslashEscape",
          "duration": 5
        },
        "test_failOnMissingColon": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnMissingColon",
          "duration": 5
        },
        "test_failOnDoubleColon": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDoubleColon",
          "duration": 5
        },
        "test_failOnCommaInsteadOfColon": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnCommaInsteadOfColon",
          "duration": 4
        },
        "test_failOnColonInsteadOfComma": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnColonInsteadOfComma",
          "duration": 4
        },
        "test_failOnSingleQuote": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnSingleQuote",
          "duration": 5
        },
        "test_failOnLineBreakChar": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnLineBreakChar",
          "duration": 4
        },
        "test_failOnMismatchedClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnMismatchedClose",
          "duration": 5
        },
        "test_failOnObjectInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnObjectInput",
          "duration": 5
        },
        "test_arrayContainingValidJSON": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_arrayContainingValidJSON",
          "duration": 2
        },
        "test_failOnArrayInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnArrayInput",
          "duration": 4
        },
        "test_failOnDateInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDateInput",
          "duration": 4
        },
        "test_failOnRegExpInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnRegExpInput",
          "duration": 4
        },
        "test_failOnErrorInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnErrorInput",
          "duration": 4
        },
        "test_failOnFunctionInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnFunctionInput",
          "duration": 5
        },
        "test_failOnNaNInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnNaNInput",
          "duration": 4
        },
        "test_failOnInfinityInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnInfinityInput",
          "duration": 4
        },
        "test_failOnUndefinedInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUndefinedInput",
          "duration": 5
        },
        "test_booleanInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_booleanInput",
          "duration": 1
        },
        "test_stringObjectInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringObjectInput",
          "duration": 0
        },
        "test_numberInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_numberInput",
          "duration": 1
        },
        "test_nullInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_nullInput",
          "duration": 0
        },
        "test_objectWithToStringInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_objectWithToStringInput",
          "duration": 1
        }
      },
      "reviver": {
        "name": "reviver",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test_reviver": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_reviver",
          "duration": 2
        }
      }
    },
    "Y.JSON.stringify (JavaScript implementation)": {
      "name": "Y.JSON.stringify (JavaScript implementation)",
      "passed": 20,
      "failed": 1,
      "errors": 22,
      "ignored": 0,
      "total": 21,
      "duration": 373,
      "type": "testsuite",
      "stringify": {
        "name": "stringify",
        "passed": 10,
        "failed": 1,
        "errors": 22,
        "ignored": 0,
        "total": 11,
        "duration": 303,
        "type": "testcase",
        "test_stringifyNatives": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyNatives",
          "duration": 16
        },
        "test_stringifyEscapes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyEscapes",
          "duration": 15
        },
        "test_stringifyObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyObject",
          "duration": 15
        },
        "test_failOnStringifyCyclicalRef1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnStringifyCyclicalRef1",
          "duration": 18
        },
        "test_failOnStringifyCyclicalRef2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnStringifyCyclicalRef2",
          "duration": 19
        },
        "test_failOnStringifyCyclicalRef3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnStringifyCyclicalRef3",
          "duration": 49
        },
        "test_stringifyFunction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyFunction",
          "duration": 22
        },
        "test_stringifyRegex": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyRegex",
          "duration": 17
        },
        "test_stringifyUndefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyUndefined",
          "duration": 18
        },
        "test_stringifyDate": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyDate",
          "duration": 29
        },
        "test_stringifyFormValue": {
          "result": "fail",
          "message": "Unexpected error: Unable to get property 'value' of undefined or null reference",
          "type": "test",
          "name": "test_stringifyFormValue",
          "duration": 36
        }
      },
      "whitelist": {
        "name": "whitelist",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 7,
        "type": "testcase",
        "test_emptyWhitelistArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_emptyWhitelistArray",
          "duration": 2
        },
        "test_whitelistArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_whitelistArray",
          "duration": 1
        }
      },
      "formatting": {
        "name": "formatting",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 29,
        "type": "testcase",
        "test_falseyIndents": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_falseyIndents",
          "duration": 3
        },
        "test_indentNumber": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_indentNumber",
          "duration": 1
        },
        "test_indentString": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_indentString",
          "duration": 2
        }
      },
      "toJSON": {
        "name": "toJSON",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 9,
        "type": "testcase",
        "test_toJSON_on_object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toJSON_on_object",
          "duration": 1
        },
        "test_toJSON_on_proto": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toJSON_on_proto",
          "duration": 1
        }
      },
      "replacer": {
        "name": "replacer",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "test_replacer": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replacer",
          "duration": 2
        },
        "test_replacer_after_toJSON": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replacer_after_toJSON",
          "duration": 1
        },
        "test_replacer_returning_Date": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replacer_returning_Date",
          "duration": 1
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:24 PM"
  },
  {
    "name": "DragDrop",
    "passed": 47,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 47,
    "duration": 12410,
    "type": "report",
    "DD Test": {
      "name": "DD Test",
      "passed": 47,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 47,
      "duration": 12406,
      "type": "testcase",
      "test_shim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_shim",
        "duration": 1
      },
      "test_drop_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_setup",
        "duration": 15
      },
      "test_drop_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_setup_events",
        "duration": 31
      },
      "test_drag_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_setup",
        "duration": 23
      },
      "test_shim_after": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_shim_after",
        "duration": 1
      },
      "test_drag_drop_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_drop_setup",
        "duration": 13
      },
      "test_drag_invalids": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_invalids",
        "duration": 1
      },
      "test_drag_groups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_groups",
        "duration": 1
      },
      "test_drop_groups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_groups",
        "duration": 1
      },
      "test: _shimming test for mousemove events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _shimming test for mousemove events",
        "duration": 1
      },
      "test_drop_overs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_overs",
        "duration": 9
      },
      "test_drag_handles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_handles",
        "duration": 2
      },
      "test: _prevEndFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _prevEndFn",
        "duration": 1
      },
      "test: selectionFix with valid click": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: selectionFix with valid click",
        "duration": 1
      },
      "test: selectionFix without valid click": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: selectionFix without valid click",
        "duration": 1
      },
      "test_drag_drop_group_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_drop_group_setup",
        "duration": 16
      },
      "test_drag_drop_group_pass_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_drop_group_pass_setup",
        "duration": 16
      },
      "test_drag_add_handle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_add_handle",
        "duration": 3
      },
      "test_drag_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_setup_events",
        "duration": 2
      },
      "test_drag_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_move",
        "duration": 1039
      },
      "test_drag_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_destroy",
        "duration": 3
      },
      "test_proxy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy",
        "duration": 14
      },
      "test_proxy_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy_setup_events",
        "duration": 1
      },
      "test_proxy_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy_move",
        "duration": 2138
      },
      "test_proxy_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy_destroy",
        "duration": 4
      },
      "test_drop_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_destroy",
        "duration": 2
      },
      "test_constrain_region_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_region_setup",
        "duration": 14
      },
      "test_constrain_node_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_node_setup",
        "duration": 11
      },
      "test_constrain_node_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_node_move",
        "duration": 84
      },
      "test_constrain_node_unplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_node_unplug",
        "duration": 1231
      },
      "test_constrain_view_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_view_setup",
        "duration": 11
      },
      "test_constrain_inregion": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_inregion",
        "duration": 4
      },
      "test_tick_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_tick_calc",
        "duration": 1
      },
      "test_tick_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_tick_array",
        "duration": 1
      },
      "test_constrain_view_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_view_move",
        "duration": 719
      },
      "test: node scroll plugin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: node scroll plugin",
        "duration": 15
      },
      "test_window_scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_window_scroll",
        "duration": 2538
      },
      "test_delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate",
        "duration": 14
      },
      "test_delegate_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_setup_events",
        "duration": 3
      },
      "test_delegate_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_move",
        "duration": 1118
      },
      "test_delegate_move2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_move2",
        "duration": 2713
      },
      "test_delegate_disabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_disabled",
        "duration": 2
      },
      "test_delegate_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_destroy",
        "duration": 24
      },
      "test_css_gutter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_css_gutter",
        "duration": 1
      },
      "test_swap_node_position": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_swap_node_position",
        "duration": 58
      },
      "test_swap_node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_swap_node",
        "duration": 15
      },
      "test: proxy plugin on widget": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: proxy plugin on widget",
        "duration": 183
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:38 PM"
  },
  {
    "name": "Event Gestures",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 138,
    "type": "report",
    "Gesture Event Suite": {
      "name": "Gesture Event Suite",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 39,
      "type": "testsuite",
      "movestart": {
        "name": "movestart",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 9,
        "type": "testcase",
        "test: _onStart()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onStart()",
          "duration": 4
        },
        "test: _start()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _start()",
          "duration": 2
        }
      },
      "move": {
        "name": "move",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: _onMove()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onMove()",
          "duration": 2
        }
      },
      "moveend": {
        "name": "moveend",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: _onEnd()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onEnd()",
          "duration": 2
        }
      }
    },
    "Flick Event Suite": {
      "name": "Flick Event Suite",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 18,
      "type": "testsuite",
      "flick": {
        "name": "flick",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "test: _onStart()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onStart()",
          "duration": 2
        },
        "test: _onMove()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onMove()",
          "duration": 1
        },
        "test: _onEnd()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onEnd()",
          "duration": 2
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:39 PM"
  },
  {
    "name": "Escape",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 113,
    "type": "report",
    "Escape": {
      "name": "Escape",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 38,
      "type": "testcase",
      "html() should escape HTML characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html() should escape HTML characters",
        "duration": 2
      },
      "html() should coerce non-strings to strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html() should coerce non-strings to strings",
        "duration": 1
      },
      "regex() should escape regular expression characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "regex() should escape regular expression characters",
        "duration": 1
      },
      "regex() should coerce non-strings to strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "regex() should coerce non-strings to strings",
        "duration": 1
      },
      "regexp() should be an alias for regex()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "regexp() should be an alias for regex()",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:40 PM"
  },
  {
    "name": "Dom: Selector",
    "passed": 37,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 37,
    "duration": 240,
    "type": "report",
    "Query All": {
      "name": "Query All",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 49,
      "type": "testcase",
      "testFilter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilter",
        "duration": 2
      },
      "testTest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTest",
        "duration": 7
      },
      "testRootQuery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRootQuery",
        "duration": 14
      },
      "testNthType": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNthType",
        "duration": 1
      },
      "testNthChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNthChild",
        "duration": 2
      },
      "testQuery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testQuery",
        "duration": 6
      },
      "should find all queries in group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all queries in group",
        "duration": 1
      }
    },
    "Simple Node Test": {
      "name": "Simple Node Test",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 114,
      "type": "testcase",
      "testPseudo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPseudo",
        "duration": 4
      },
      "testAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAttr",
        "duration": 4
      },
      "testClass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClass",
        "duration": 2
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 1
      },
      "testTag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTag",
        "duration": 1
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 1
      },
      "testEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEnabled",
        "duration": 1
      },
      "testIframe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIframe",
        "duration": 2
      },
      "testScoped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testScoped",
        "duration": 2
      },
      "should run scoped query when form has input with name=\"id\"": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run scoped query when form has input with name=\"id\"",
        "duration": 2
      },
      "should run scoped query when root has ID with special chars": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run scoped query when root has ID with special chars",
        "duration": 1
      },
      "testAncestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAncestor",
        "duration": 2
      },
      "should return all checked inputs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all checked inputs",
        "duration": 1
      },
      "should apply function for filter test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should apply function for filter test",
        "duration": 1
      },
      "should find element with quoted number ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with quoted number ID",
        "duration": 2
      },
      "should find element with number ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with number ID",
        "duration": 5
      },
      "should find element with colon in quoted ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with colon in quoted ID",
        "duration": 1
      },
      "should find element with colon in ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with colon in ID",
        "duration": 5
      },
      "should find element with colon in ID shorthand": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with colon in ID shorthand",
        "duration": 1
      },
      "should find element with number ID shorthand": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with number ID shorthand",
        "duration": 5
      },
      "should omit comments from children": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should omit comments from children",
        "duration": 1
      },
      "should allow documentFragment root node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should allow documentFragment root node",
        "duration": 1
      },
      "should find custom element by tag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find custom element by tag",
        "duration": 2
      },
      "should find custom element by class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find custom element by class",
        "duration": 2
      },
      "should find custom element by tag and class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find custom element by tag and class",
        "duration": 2
      },
      "should support multiple :not pseudos": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should support multiple :not pseudos",
        "duration": 1
      },
      "should test multiple :not pseudos with attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should test multiple :not pseudos with attribute",
        "duration": 1
      },
      "should support boolean custom attribute via quoted attr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should support boolean custom attribute via quoted attr",
        "duration": 2
      },
      "should allow special chars in attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should allow special chars in attribute",
        "duration": 1
      },
      "should allow special chars in attribute, scoped query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should allow special chars in attribute, scoped query",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:41 PM"
  },
  {
    "name": "Dom: XY",
    "passed": 42,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 42,
    "duration": 393,
    "type": "report",
    "Y.DOM.xy": {
      "name": "Y.DOM.xy",
      "passed": 42,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 42,
      "duration": 299,
      "type": "testcase",
      "should set h1-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set h1-1 in page coords",
        "duration": 1
      },
      "should set static1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static1 in page coords",
        "duration": 1
      },
      "should set abs1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs1 in page coords",
        "duration": 0
      },
      "should set rel1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel1 in page coords",
        "duration": 1
      },
      "should set static2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static2 in page coords",
        "duration": 1
      },
      "should set abs2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs2 in page coords",
        "duration": 9
      },
      "should set rel2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel2 in page coords",
        "duration": 1
      },
      "should set static3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static3 in page coords",
        "duration": 1
      },
      "should set abs3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs3 in page coords",
        "duration": 1
      },
      "should set rel3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel3 in page coords",
        "duration": 1
      },
      "should set p2-is in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p2-is in page coords",
        "duration": 1
      },
      "should set p2-ir in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p2-ir in page coords",
        "duration": 1
      },
      "should set p2-ia in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p2-ia in page coords",
        "duration": 1
      },
      "should set static4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static4 in page coords",
        "duration": 1
      },
      "should set static5 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static5 in page coords",
        "duration": 1
      },
      "should set abs4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs4 in page coords",
        "duration": 1
      },
      "should set rel4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel4 in page coords",
        "duration": 1
      },
      "should set p4-is in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p4-is in page coords",
        "duration": 1
      },
      "should set p4-ir in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p4-ir in page coords",
        "duration": 2
      },
      "should set p4-ia in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p4-ia in page coords",
        "duration": 1
      },
      "should set fixed in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set fixed in page coords",
        "duration": 1
      },
      "should set table1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set table1 in page coords",
        "duration": 1
      },
      "should set tr1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr1 in page coords",
        "duration": 1
      },
      "should set th1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th1 in page coords",
        "duration": 1
      },
      "should set th2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th2 in page coords",
        "duration": 1
      },
      "should set th3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th3 in page coords",
        "duration": 1
      },
      "should set th4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th4 in page coords",
        "duration": 1
      },
      "should set tr2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr2 in page coords",
        "duration": 1
      },
      "should set td2-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-1 in page coords",
        "duration": 0
      },
      "should set td2-2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-2 in page coords",
        "duration": 0
      },
      "should set td2-3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-3 in page coords",
        "duration": 1
      },
      "should set td2-4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-4 in page coords",
        "duration": 1
      },
      "should set tr3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr3 in page coords",
        "duration": 0
      },
      "should set td3-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-1 in page coords",
        "duration": 0
      },
      "should set td3-2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-2 in page coords",
        "duration": 1
      },
      "should set td3-3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-3 in page coords",
        "duration": 1
      },
      "should set td3-4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-4 in page coords",
        "duration": 1
      },
      "should set tr4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr4 in page coords",
        "duration": 0
      },
      "should set td4-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-1 in page coords",
        "duration": 1
      },
      "should set td4-2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-2 in page coords",
        "duration": 1
      },
      "should set td4-3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-3 in page coords",
        "duration": 1
      },
      "should set td4-4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-4 in page coords",
        "duration": 0
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:43 PM"
  },
  {
    "name": "Dom: Region",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 99,
    "type": "report",
    "Y.DOM.region": {
      "name": "Y.DOM.region",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 23,
      "type": "testcase",
      "should return a region containing the correct data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a region containing the correct data",
        "duration": 2
      },
      "should return false for bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for bad input",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:44 PM"
  },
  {
    "name": "Dom: Base",
    "passed": 288,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 288,
    "duration": 1658,
    "type": "report",
    "Y.DOM.byId": {
      "name": "Y.DOM.byId",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 151,
      "type": "testcase",
      "should return element from string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return element from string",
        "duration": 1
      },
      "should return first match when dupe id exists": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return first match when dupe id exists",
        "duration": 1
      },
      "should return null when no match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when no match",
        "duration": 1
      },
      "should return null when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is null",
        "duration": 1
      },
      "should return null when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is undefined",
        "duration": 1
      },
      "should avoid mistaking name for id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should avoid mistaking name for id",
        "duration": 2
      },
      "should avoid mistaking form id for named input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should avoid mistaking form id for named input",
        "duration": 3
      },
      "should search the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search the given node",
        "duration": 72
      },
      "should restrict search to the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should restrict search to the given node",
        "duration": 3
      },
      "should search the given node (off document)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search the given node (off document)",
        "duration": 21
      },
      "should search the given document (frame)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search the given document (frame)",
        "duration": 1
      }
    },
    "Y.DOM.allById": {
      "name": "Y.DOM.allById",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 41,
      "type": "testcase",
      "should return all elements with the given id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all elements with the given id",
        "duration": 2
      },
      "should return all elements with the given id (root element)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all elements with the given id (root element)",
        "duration": 1
      },
      "should return empty array when no match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when no match",
        "duration": 1
      },
      "should find cloned element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find cloned element",
        "duration": 1
      },
      "should ignore matches on NAME instead of ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should ignore matches on NAME instead of ID",
        "duration": 2
      },
      "should find all clones": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all clones",
        "duration": 2
      },
      "should find all cloned forms": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all cloned forms",
        "duration": 2
      }
    },
    "Y.DOM.getText": {
      "name": "Y.DOM.getText",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 19,
      "type": "testcase",
      "should return the text content of the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the text content of the given node",
        "duration": 1
      },
      "should return the text content of the given text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the text content of the given text node",
        "duration": 0
      },
      "should return empty string when no text found": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty string when no text found",
        "duration": 1
      },
      "should return empty string when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty string when input is null",
        "duration": 1
      },
      "should return empty string when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty string when input is undefined",
        "duration": 1
      }
    },
    "Y.DOM.setText": {
      "name": "Y.DOM.setText",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 32,
      "type": "testcase",
      "should set content with the given text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set content with the given text",
        "duration": 1
      },
      "should set html content as text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set html content as text",
        "duration": 1
      },
      "should preserve spaces": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should preserve spaces",
        "duration": 1
      },
      "should replace existing content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace existing content",
        "duration": 18
      },
      "should set text for text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set text for text node",
        "duration": 1
      }
    },
    "Y.DOM.elementByAxis": {
      "name": "Y.DOM.elementByAxis",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 62,
      "type": "testcase",
      "should return the next element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next element",
        "duration": 1
      },
      "should return the next node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next node",
        "duration": 1
      },
      "should return the next element that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next element that passes the test fn",
        "duration": 1
      },
      "should return the next node that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next node that passes the test fn",
        "duration": 1
      },
      "should return the previous element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous element",
        "duration": 1
      },
      "should return the previous node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous node",
        "duration": 1
      },
      "should return the previous element that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous element that passes the test fn",
        "duration": 1
      },
      "should return the previous node that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous node that passes the test fn",
        "duration": 1
      },
      "should return the parent element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the parent element",
        "duration": 1
      },
      "should return the ancestor element that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the ancestor element that passes the test fn",
        "duration": 1
      },
      "should return null when not found": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when not found",
        "duration": 1
      },
      "should return null when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is null",
        "duration": 1
      },
      "should return null when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is undefined",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      }
    },
    "Y.DOM.ancestor": {
      "name": "Y.DOM.ancestor",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 36,
      "type": "testcase",
      "should return the parent node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the parent node",
        "duration": 1
      },
      "should return the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the same node",
        "duration": 1
      },
      "should return the matching ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor",
        "duration": 2
      },
      "should return the matching ancestor (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self match)",
        "duration": 1
      },
      "should return the matching ancestor (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self not matched)",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      }
    },
    "Y.DOM.ancestors": {
      "name": "Y.DOM.ancestors",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 91,
      "type": "testcase",
      "should return an array of one (documentElement)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return an array of one (documentElement)",
        "duration": 1
      },
      "should include the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should include the starting node",
        "duration": 1
      },
      "should omit the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should omit the starting node",
        "duration": 1
      },
      "should return the matching ancestors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors",
        "duration": 13
      },
      "should return the matching ancestors (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self match)",
        "duration": 2
      },
      "should return the matching ancestors (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self not matched)",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      }
    },
    "Y.DOM.contains": {
      "name": "Y.DOM.contains",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 46,
      "type": "testcase",
      "html element should contain body element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html element should contain body element",
        "duration": 1
      },
      "body element should not contain html element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body element should not contain html element",
        "duration": 1
      },
      "should be true for contained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained element",
        "duration": 1
      },
      "should be false for uncontained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained element",
        "duration": 1
      },
      "should be true when element is element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true when element is element",
        "duration": 1
      },
      "should be true for contained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained text node",
        "duration": 1
      },
      "should be false for uncontained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained text node",
        "duration": 1
      },
      "should be true for contained comment node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained comment node",
        "duration": 5
      },
      "should return false for null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for null input",
        "duration": 1
      },
      "should return false for undefined input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for undefined input",
        "duration": 1
      },
      "fragment should contain child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fragment should contain child",
        "duration": 1
      }
    },
    "Y.DOM._bruteContains": {
      "name": "Y.DOM._bruteContains",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 36,
      "type": "testcase",
      "html element should contain body element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html element should contain body element",
        "duration": 1
      },
      "body element should not contain html element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body element should not contain html element",
        "duration": 1
      },
      "should be true for contained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained element",
        "duration": 1
      },
      "should be false for uncontained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained element",
        "duration": 1
      },
      "should be true when element is element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true when element is element",
        "duration": 1
      },
      "should be true for contained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained text node",
        "duration": 1
      },
      "should be false for uncontained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained text node",
        "duration": 1
      },
      "should return false for null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for null input",
        "duration": 1
      },
      "should return false for undefined input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for undefined input",
        "duration": 1
      }
    },
    "Y.DOM.inDoc": {
      "name": "Y.DOM.inDoc",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 40,
      "type": "testcase",
      "should return false for off document node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for off document node",
        "duration": 1
      },
      "should return true for in document node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for in document node",
        "duration": 1
      },
      "should return false for removed node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for removed node",
        "duration": 1
      },
      "should work with duplicate IDs in document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should work with duplicate IDs in document",
        "duration": 1
      },
      "should work with duplicate IDs off document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should work with duplicate IDs off document",
        "duration": 1
      },
      "should work with form that has input name=\"id\" and id=\"id\"": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should work with form that has input name=\"id\" and id=\"id\"",
        "duration": 1
      },
      "should return false when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false when input is null",
        "duration": 1
      },
      "should return false for cloned node off document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for cloned node off document",
        "duration": 1
      },
      "should return true for cloned node in document (same id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for cloned node in document (same id)",
        "duration": 1
      },
      "should return true for cloned node in document (new id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for cloned node in document (new id)",
        "duration": 1
      }
    },
    "Y.DOM.create": {
      "name": "Y.DOM.create",
      "passed": 56,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 56,
      "duration": 277,
      "type": "testcase",
      "should create empty div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create empty div",
        "duration": 5
      },
      "should trim leading space": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should trim leading space",
        "duration": 5
      },
      "should create empty div (self-closed input)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create empty div (self-closed input)",
        "duration": 4
      },
      "should create div with text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create div with text",
        "duration": 6
      },
      "should create div with innerHTML": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create div with innerHTML",
        "duration": 4
      },
      "should create input type submit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create input type submit",
        "duration": 5
      },
      "should create input type radio": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create input type radio",
        "duration": 5
      },
      "should create form": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create form",
        "duration": 4
      },
      "should create a form with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a form with content",
        "duration": 5
      },
      "should create legend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create legend",
        "duration": 5
      },
      "should create fieldset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create fieldset",
        "duration": 4
      },
      "should create label": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create label",
        "duration": 4
      },
      "should create a list item": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a list item",
        "duration": 4
      },
      "should create a one item list": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a one item list",
        "duration": 4
      },
      "should create a table": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table",
        "duration": 4
      },
      "should create a table with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table with content",
        "duration": 5
      },
      "should create a table head": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table head",
        "duration": 4
      },
      "should create a table head from uppercase": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table head from uppercase",
        "duration": 5
      },
      "should create a table head with nested table": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table head with nested table",
        "duration": 4
      },
      "should create a table heading cell": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table heading cell",
        "duration": 4
      },
      "should create a caption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a caption",
        "duration": 4
      },
      "should create a colgroup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a colgroup",
        "duration": 4
      },
      "should create a col element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a col element",
        "duration": 4
      },
      "should create a colgroup with col elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a colgroup with col elements",
        "duration": 4
      },
      "should create a table row": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table row",
        "duration": 4
      },
      "should create a table row with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table row with content",
        "duration": 4
      },
      "should create a table cell": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table cell",
        "duration": 4
      },
      "should create a table cell with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table cell with content",
        "duration": 5
      },
      "should create a button element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a button element",
        "duration": 23
      },
      "should create an optgroup element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an optgroup element",
        "duration": 5
      },
      "should create an optgroup with an option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an optgroup with an option",
        "duration": 9
      },
      "should create an optgroup with options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an optgroup with options",
        "duration": 4
      },
      "should create a select element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a select element",
        "duration": 5
      },
      "should create a select with an option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a select with an option",
        "duration": 4
      },
      "should create a select with options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a select with options",
        "duration": 5
      },
      "should create a option element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a option element",
        "duration": 5
      },
      "should create a option with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a option with content",
        "duration": 4
      },
      "should create a selected option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a selected option",
        "duration": 4
      },
      "should create an iframe (self-closed)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an iframe (self-closed)",
        "duration": 5
      },
      "should create an iframe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an iframe",
        "duration": 5
      },
      "should create an iframe with attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an iframe with attributes",
        "duration": 4
      },
      "should create a script": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a script",
        "duration": 4
      },
      "should create a script with src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a script with src",
        "duration": 5
      },
      "should create a link element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a link element",
        "duration": 4
      },
      "should create a link element with attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a link element with attrs",
        "duration": 5
      },
      "should create a textNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a textNode",
        "duration": 1
      },
      "should return a fragment when creating a collection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment when creating a collection",
        "duration": 5
      },
      "should return a fragment containing options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing options",
        "duration": 4
      },
      "should return a fragment including text nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment including text nodes",
        "duration": 4
      },
      "should return a fragment with the correct selected option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment with the correct selected option",
        "duration": 4
      },
      "should return a fragment containing table cells": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing table cells",
        "duration": 4
      },
      "should return a fragment containing col elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing col elements",
        "duration": 4
      },
      "should return a fragment containing table bodies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing table bodies",
        "duration": 4
      },
      "should return a fragment containing thead with nested table and tbody": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing thead with nested table and tbody",
        "duration": 5
      },
      "should return null when given null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when given null input",
        "duration": 1
      },
      "should return null when given undefined input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when given undefined input",
        "duration": 1
      }
    },
    "Y.DOM.getAttribute": {
      "name": "Y.DOM.getAttribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 11,
      "type": "testcase",
      "should return \"className\" value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return \"className\" value",
        "duration": 1
      },
      "should return \"for\" value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return \"for\" value",
        "duration": 1
      },
      "should handle bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should handle bad input",
        "duration": 1
      }
    },
    "Y.DOM.setAttribute": {
      "name": "Y.DOM.setAttribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 11,
      "type": "testcase",
      "should set className": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set className",
        "duration": 1
      },
      "should set \"for\" attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set \"for\" attribute",
        "duration": 0
      },
      "should handle bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should handle bad input",
        "duration": 1
      }
    },
    "Y.DOM.getValue": {
      "name": "Y.DOM.getValue",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 76,
      "type": "testcase",
      "input value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match html value",
        "duration": 1
      },
      "input value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match no html value",
        "duration": 1
      },
      "input value should match empty html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match empty html value",
        "duration": 1
      },
      "textarea value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea value should match html value",
        "duration": 1
      },
      "textarea value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea value should match no html value",
        "duration": 1
      },
      "should ignore textarea html value attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should ignore textarea html value attribute",
        "duration": 1
      },
      "select value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match html value",
        "duration": 1
      },
      "select value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match no html value",
        "duration": 1
      },
      "select value should match empty html value with text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match empty html value with text",
        "duration": 1
      },
      "select value should match empty html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match empty html value",
        "duration": 1
      },
      "option value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match html value",
        "duration": 1
      },
      "option value should match html content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match html content",
        "duration": 1
      },
      "option value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match no html value",
        "duration": 1
      },
      "option value should match empty html value with text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match empty html value with text",
        "duration": 1
      },
      "option value should match empty html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match empty html value",
        "duration": 1
      },
      "button value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match html value",
        "duration": 1
      },
      "button value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match no html value",
        "duration": 1
      },
      "button value should ignore html content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should ignore html content",
        "duration": 1
      },
      "button value should match empty value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match empty value",
        "duration": 1
      }
    },
    "Y.DOM.setValue": {
      "name": "Y.DOM.setValue",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 54,
      "type": "testcase",
      "input value should match updated value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match updated value",
        "duration": 1
      },
      "value updated from empty string should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "value updated from empty string should be new value",
        "duration": 1
      },
      "value updated from no value should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "value updated from no value should be new value",
        "duration": 1
      },
      "textarea from html value should match new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea from html value should match new value",
        "duration": 3
      },
      "textarea from no value should match new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea from no value should match new value",
        "duration": 1
      },
      "button value should match updated value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match updated value",
        "duration": 1
      },
      "button value updated from empty string should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value updated from empty string should be new value",
        "duration": 1
      },
      "button value updated from no value should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value updated from no value should be new value",
        "duration": 1
      },
      "option value should match updated value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match updated value",
        "duration": 1
      },
      "option value updated from text should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value updated from text should be new value",
        "duration": 1
      },
      "option value updated from empty string should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value updated from empty string should be new value",
        "duration": 2
      },
      "option value updated from no value should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value updated from no value should be new value",
        "duration": 1
      }
    },
    "Y.DOM._nl2Frag": {
      "name": "Y.DOM._nl2Frag",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 15,
      "type": "testcase",
      "should return fragment from HTMLCollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return fragment from HTMLCollection",
        "duration": 12
      },
      "should return fragment from Array of HTML Elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return fragment from Array of HTML Elements",
        "duration": 1
      },
      "should return null for bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null for bad input",
        "duration": 1
      }
    },
    "Y.DOM.isWindow": {
      "name": "Y.DOM.isWindow",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 31,
      "type": "testcase",
      "should return true for window object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for window object",
        "duration": 1
      },
      "should return true for frame window object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for frame window object",
        "duration": 1
      },
      "should return false for document object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for document object",
        "duration": 1
      },
      "should return false for non-window input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for non-window input",
        "duration": 1
      }
    },
    "Y.DOM._removeChildNodes": {
      "name": "Y.DOM._removeChildNodes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 11,
      "type": "testcase",
      "should remove all childNodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove all childNodes",
        "duration": 8
      }
    },
    "Y.DOM.addHTML": {
      "name": "Y.DOM.addHTML",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 89,
      "type": "testcase",
      "should append the given html to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given html to the node",
        "duration": 6
      },
      "should prepend the given html to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prepend the given html to the node",
        "duration": 11
      },
      "should insert the given html after the first child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert the given html after the first child",
        "duration": 8
      },
      "should append the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given node",
        "duration": 1
      },
      "should add html before the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add html before the given node",
        "duration": 9
      },
      "should add html after the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add html after the given node",
        "duration": 9
      },
      "should replace the existing content (empty string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (empty string)",
        "duration": 5
      },
      "should replace the existing content (null)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (null)",
        "duration": 5
      },
      "should replace the existing content (undefined)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (undefined)",
        "duration": 5
      },
      "should replace the existing content (0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (0)",
        "duration": 5
      },
      "should append the given nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given nodelist",
        "duration": 4
      },
      "should insert the given nodelist before the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert the given nodelist before the given node",
        "duration": 8
      },
      "should prepend the given nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prepend the given nodelist",
        "duration": 9
      },
      "should append the given number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given number",
        "duration": 2
      }
    },
    "Y.DOM._getRegExp": {
      "name": "Y.DOM._getRegExp",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 11,
      "type": "testcase",
      "should return RegExp obj": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return RegExp obj",
        "duration": 1
      },
      "should return cached RegExp obj": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return cached RegExp obj",
        "duration": 1
      },
      "should return new RegExp obj": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return new RegExp obj",
        "duration": 1
      }
    },
    "Y.DOM._getDoc": {
      "name": "Y.DOM._getDoc",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 25,
      "type": "testcase",
      "should return document from body": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from body",
        "duration": 1
      },
      "should return document from new node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from new node",
        "duration": 1
      },
      "should return document from window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from window",
        "duration": 1
      },
      "should return document from document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from document",
        "duration": 1
      },
      "should return iframe document from iframe window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe document from iframe window",
        "duration": 1
      },
      "should return iframe document from iframe node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe document from iframe node",
        "duration": 2
      },
      "should return iframe document from iframe document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe document from iframe document",
        "duration": 1
      }
    },
    "Y.DOM._getWin": {
      "name": "Y.DOM._getWin",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 31,
      "type": "testcase",
      "should return window from body": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from body",
        "duration": 1
      },
      "should return window from new node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from new node",
        "duration": 1
      },
      "should return window from window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from window",
        "duration": 1
      },
      "should return window from document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from document",
        "duration": 1
      },
      "should return iframe window from iframe window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe window from iframe window",
        "duration": 1
      },
      "should return iframe window from iframe node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe window from iframe node",
        "duration": 1
      },
      "should return iframe window from iframe document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe window from iframe document",
        "duration": 1
      }
    },
    "Y.DOM._batch": {
      "name": "Y.DOM._batch",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 38,
      "type": "testcase",
      "should append html on all nodes in HTMLCollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append html on all nodes in HTMLCollection",
        "duration": 31
      },
      "should setText on all nodes in HTMLCollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should setText on all nodes in HTMLCollection",
        "duration": 5
      }
    },
    "Y.DOM.siblings": {
      "name": "Y.DOM.siblings",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 14,
      "type": "testcase",
      "should return all sibling nodes (firstChild)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all sibling nodes (firstChild)",
        "duration": 1
      },
      "should return all sibling nodes (lastChild)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all sibling nodes (lastChild)",
        "duration": 2
      },
      "should return all sibling nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all sibling nodes",
        "duration": 1
      },
      "should return all matching sibling nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all matching sibling nodes",
        "duration": 1
      }
    },
    "Y.DOM.wrap": {
      "name": "Y.DOM.wrap",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 24,
      "type": "testcase",
      "should wrap the node with the given html": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap the node with the given html",
        "duration": 7
      },
      "should wrap the node with the given complex html": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap the node with the given complex html",
        "duration": 5
      },
      "should wrap the paragraph with a div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap the paragraph with a div",
        "duration": 8
      }
    },
    "Y.DOM.unwrap": {
      "name": "Y.DOM.unwrap",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 20,
      "type": "testcase",
      "should remove the node's parent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent",
        "duration": 2
      },
      "should remove the node's parent and replace in DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent and replace in DOM",
        "duration": 2
      },
      "should remove the node's parent and replace in DOM with siblings (node as firstChild)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent and replace in DOM with siblings (node as firstChild)",
        "duration": 5
      },
      "should remove the node's parent and replace in DOM with siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent and replace in DOM with siblings",
        "duration": 5
      }
    },
    "Y.DOM.getId": {
      "name": "Y.DOM.getId",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 39,
      "type": "testcase",
      "should get the id from the DIV": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the DIV",
        "duration": 1
      },
      "should get the id from the new form element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form element",
        "duration": 1
      },
      "should get the id from the new form element (setAttribute)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form element (setAttribute)",
        "duration": 1
      },
      "should get the id from the new form element rather than the named input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form element rather than the named input",
        "duration": 1
      },
      "should get the id from the new form rather than the named input (setAttribute)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form rather than the named input (setAttribute)",
        "duration": 1
      },
      "should get the id from the form rather than the named input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the form rather than the named input",
        "duration": 1
      }
    },
    "Y.DOM.setId": {
      "name": "Y.DOM.setId",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 16,
      "type": "testcase",
      "should set the id on the DIV": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the DIV",
        "duration": 1
      },
      "should set the id on the FORM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the FORM",
        "duration": 1
      },
      "should set the id on the FORM with a named INPUT": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the FORM with a named INPUT",
        "duration": 1
      },
      "should set the id on the FORM with an INPUT id === \"id\"": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the FORM with an INPUT id === \"id\"",
        "duration": 1
      }
    },
    "Y.DOM.generateID": {
      "name": "Y.DOM.generateID",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "should generate an ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should generate an ID",
        "duration": 1
      },
      "should return exising ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return exising ID",
        "duration": 1
      }
    },
    "Y.DOM.hasClass": {
      "name": "Y.DOM.hasClass",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "should return true with className match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true with className match",
        "duration": 1
      },
      "should return false with no className": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false with no className",
        "duration": 1
      },
      "should return false with no className match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false with no className match",
        "duration": 1
      }
    },
    "Y.DOM.addClass": {
      "name": "Y.DOM.addClass",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 27,
      "type": "testcase",
      "should add the class to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the class to the node",
        "duration": 1
      },
      "should add the class to the node and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the class to the node and preserve existing",
        "duration": 1
      },
      "should not add if existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should not add if existing",
        "duration": 1
      },
      "should ltrim the class and add to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should ltrim the class and add to the node",
        "duration": 1
      },
      "should rtrim the class and add to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should rtrim the class and add to the node",
        "duration": 1
      },
      "should trim the class and add to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should trim the class and add to the node",
        "duration": 1
      },
      "should handle bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should handle bad input",
        "duration": 1
      }
    },
    "Y.DOM.removeClass": {
      "name": "Y.DOM.removeClass",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 6,
      "type": "testcase",
      "should remove the class from the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the class from the node",
        "duration": 1
      },
      "should leave the className as is": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should leave the className as is",
        "duration": 1
      },
      "should remove the class from the node and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the class from the node and preserve existing",
        "duration": 1
      }
    },
    "Y.DOM.replaceClass": {
      "name": "Y.DOM.replaceClass",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "should replace the class with the given string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the class with the given string",
        "duration": 1
      },
      "should replace the class with and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the class with and preserve existing",
        "duration": 1
      },
      "should leave the className as is": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should leave the className as is",
        "duration": 1
      }
    },
    "Y.DOM.toggleClass": {
      "name": "Y.DOM.toggleClass",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "should remove the given class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the given class",
        "duration": 1
      },
      "should remove the given class and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the given class and preserve existing",
        "duration": 1
      },
      "should add the given class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the given class",
        "duration": 1
      },
      "should add the given class and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the given class and preserve existing",
        "duration": 1
      }
    },
    "Y.DOM._setSize": {
      "name": "Y.DOM._setSize",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 43,
      "type": "testcase",
      "should set the node offsetWidth to the given value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetWidth to the given value",
        "duration": 1
      },
      "should set the node offsetHeight to the given value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetHeight to the given value",
        "duration": 1
      },
      "should set the node offsetWidth to zero if given a negative number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetWidth to zero if given a negative number",
        "duration": 1
      },
      "should set the node offsetHeight to zero if given a negative number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetHeight to zero if given a negative number",
        "duration": 2
      },
      "should set the offsetWidth via setWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the offsetWidth via setWidth",
        "duration": 2
      },
      "should set the offsetHeight via setHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the offsetHeight via setHeight",
        "duration": 2
      },
      "should set offsetWidth accounting for padding": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetWidth accounting for padding",
        "duration": 2
      },
      "should set offsetHeight accounting for padding": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetHeight accounting for padding",
        "duration": 2
      },
      "should set offsetWidth to padding when setting to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetWidth to padding when setting to zero",
        "duration": 2
      },
      "should set offsetHeight to padding when setting to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetHeight to padding when setting to zero",
        "duration": 1
      }
    },
    "Y.DOM.children": {
      "name": "Y.DOM.children",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 21,
      "type": "testcase",
      "should return empty array when no element childNodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when no element childNodes",
        "duration": 5
      },
      "should return empty array when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when input is null",
        "duration": 1
      },
      "should return empty array when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when input is undefined",
        "duration": 1
      },
      "should return elements only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return elements only",
        "duration": 1
      }
    },
    "Y.DOM.firstByTag": {
      "name": "Y.DOM.firstByTag",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 20,
      "type": "testcase",
      "should return the first match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the first match",
        "duration": 1
      },
      "should return the first match (root element)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the first match (root element)",
        "duration": 1
      },
      "should return null when no match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when no match",
        "duration": 1
      },
      "should return null when tag is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when tag is null",
        "duration": 1
      },
      "should search given document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search given document",
        "duration": 1
      },
      "should search given document (frame)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search given document (frame)",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:46 PM"
  },
  {
    "name": "Dom",
    "passed": 22,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 22,
    "duration": 602,
    "type": "report",
    "DOM": {
      "name": "DOM",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 503,
      "type": "testcase",
      "test_byId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_byId",
        "duration": 2
      },
      "test_getText": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getText",
        "duration": 1
      },
      "test_setText": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_setText",
        "duration": 1
      },
      "test_children": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_children",
        "duration": 1
      },
      "test_getStyle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getStyle",
        "duration": 1
      },
      "test_setStyle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_setStyle",
        "duration": 3
      },
      "test_styleDefaultUnit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_styleDefaultUnit",
        "duration": 1
      },
      "test_create": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create",
        "duration": 199
      },
      "test_createNodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_createNodes",
        "duration": 29
      },
      "test_ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_ancestor",
        "duration": 1
      },
      "test_insertBefore": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_insertBefore",
        "duration": 1
      },
      "test_insertAfter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_insertAfter",
        "duration": 0
      },
      "test_getAttribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getAttribute",
        "duration": 2
      },
      "test_getValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getValue",
        "duration": 10
      },
      "test_position": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_position",
        "duration": 4
      },
      "test_region": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_region",
        "duration": 1
      },
      "test_viewportRegion": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_viewportRegion",
        "duration": 1
      },
      "test_addHTML": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_addHTML",
        "duration": 43
      },
      "testFirstByTag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFirstByTag",
        "duration": 2
      },
      "testToHex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToHex",
        "duration": 2
      },
      "test_inDoc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_inDoc",
        "duration": 2
      },
      "test_getScrollbarWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getScrollbarWidth",
        "duration": 11
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:48 PM"
  },
  {
    "name": "Date.Math",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 148,
    "type": "report",
    "isValidDate Tests": {
      "name": "isValidDate Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 13,
      "type": "testcase",
      "testValidDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidDate",
        "duration": 4
      },
      "testInvalidDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInvalidDate",
        "duration": 1
      }
    },
    "DateMath Tests": {
      "name": "DateMath Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 26,
      "type": "testcase",
      "test: addDays": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addDays",
        "duration": 1
      },
      "test: addMonths": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addMonths",
        "duration": 1
      },
      "test: addYears": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addYears",
        "duration": 1
      }
    },
    "DaysInMonth Tests": {
      "name": "DaysInMonth Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "test: daysInMonth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: daysInMonth",
        "duration": 2
      },
      "test: listOfDatesInMonth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: listOfDatesInMonth",
        "duration": 2
      }
    },
    "Comparitor Tests": {
      "name": "Comparitor Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 16,
      "type": "testcase",
      "test: areEqual": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: areEqual",
        "duration": 1
      },
      "test: isGreater": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isGreater",
        "duration": 2
      },
      "test: isGreaterOrEqual": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isGreaterOrEqual",
        "duration": 1
      },
      "test: isInRange": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isInRange",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:49 PM"
  },
  {
    "name": "Date",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 210,
    "type": "report",
    "Date Parse Tests": {
      "name": "Date Parse Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 20,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 3
      },
      "testParse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParse",
        "duration": 1
      }
    },
    "Date Format U.S. Tests": {
      "name": "Date Format U.S. Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testUS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUS",
        "duration": 2
      }
    },
    "Date Format French Tests": {
      "name": "Date Format French Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testFrench": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFrench",
        "duration": 1
      }
    },
    "Date Format Korean Tests": {
      "name": "Date Format Korean Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "testKorean": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testKorean",
        "duration": 2
      }
    },
    "Date Format Punjabi Tests": {
      "name": "Date Format Punjabi Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testPunjabi": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPunjabi",
        "duration": 1
      }
    },
    "Date Format Available Format Tests": {
      "name": "Date Format Available Format Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testAvailable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAvailable",
        "duration": 1
      }
    },
    "Date Format Tests": {
      "name": "Date Format Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 0
      },
      "testFormats": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFormats",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:50 PM"
  },
  {
    "name": "Event: FocusBlur",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 334,
    "type": "report",
    "Event Focus And Blur Test": {
      "name": "Event Focus And Blur Test",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 258,
      "type": "testcase",
      "test_add_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_focus",
        "duration": 24
      },
      "test_remove_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_remove_focus",
        "duration": 22
      },
      "test_purge_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_purge_focus",
        "duration": 17
      },
      "test_bubble_order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bubble_order",
        "duration": 16
      },
      "test_add_blur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_blur",
        "duration": 23
      },
      "test_remove_blur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_remove_blur",
        "duration": 20
      },
      "test_purge_blur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_purge_blur",
        "duration": 19
      },
      "test delegating with filter matching non-focusable elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test delegating with filter matching non-focusable elements",
        "duration": 10
      },
      "test stopping propagation for on() subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopping propagation for on() subs",
        "duration": 8
      },
      "test stopping propagation for delegate() subs matching the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopping propagation for delegate() subs matching the same node",
        "duration": 5
      },
      "test stopping propagation for delegate() subs not matching the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopping propagation for delegate() subs not matching the same node",
        "duration": 5
      },
      "test stopImmediatePropagation for on() and delegate() subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopImmediatePropagation for on() and delegate() subs",
        "duration": 5
      },
      "test callback order from a mix of subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback order from a mix of subs",
        "duration": 7
      },
      "test useActive feature test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test useActive feature test",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:51 PM"
  },
  {
    "name": "Event: Touch",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 104,
    "type": "report",
    "Touch": {
      "name": "Touch",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 26,
      "type": "testcase",
      "test: touch init": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: touch init",
        "duration": 1
      },
      "test: touch properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: touch properties",
        "duration": 1
      },
      "test: touch nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: touch nodes",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:52 PM"
  },
  {
    "name": "Event: Tap",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 113,
    "type": "report",
    "event tap events": {
      "name": "event tap events",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 37,
      "type": "testcase",
      "on tap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "on tap",
        "duration": 4
      },
      "touchend not in same area": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "touchend not in same area",
        "duration": 4
      },
      "delegate tap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegate tap",
        "duration": 6
      },
      "touchmove\/mousemove fired": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "touchmove\/mousemove fired",
        "duration": 5
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:53 PM"
  },
  {
    "name": "Event: Synthetic",
    "passed": 90,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 90,
    "duration": 2780,
    "type": "report",
    "Y.Event.define": {
      "name": "Y.Event.define",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 28,
      "type": "testcase",
      "Y.Event.define(name) should add to DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define(name) should add to DOM_EVENTS",
        "duration": 1
      },
      "Y.Event.define([name1, name2]) should add to DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define([name1, name2]) should add to DOM_EVENTS",
        "duration": 1
      },
      "Y.Event.define(type, {...}) should register a new synth in DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define(type, {...}) should register a new synth in DOM_EVENTS",
        "duration": 1
      },
      "Subsequent Y.Event.define() should not overwrite existing synth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Subsequent Y.Event.define() should not overwrite existing synth",
        "duration": 1
      },
      "Y.Event.define(..., true) should overwrite existing synth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define(..., true) should overwrite existing synth",
        "duration": 1
      },
      "Y.Event.define({ type: ...}) should register a new synth in DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define({ type: ...}) should register a new synth in DOM_EVENTS",
        "duration": 1
      },
      "Y.Event.define({...}, true) should overwrite existing synth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define({...}, true) should overwrite existing synth",
        "duration": 1
      }
    },
    "Y.on": {
      "name": "Y.on",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 618,
      "type": "testcase",
      "test Y.on('synth', fn, node)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node)",
        "duration": 14
      },
      "test Y.on('synth', fn, node, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node, thisObj)",
        "duration": 23
      },
      "test Y.on('synth', fn, node, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node, thisObj, arg)",
        "duration": 44
      },
      "test Y.on('synth', fn, node, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node, null, arg)",
        "duration": 20
      },
      "test Y.on('synth', fn, el)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el)",
        "duration": 17
      },
      "test Y.on('synth', fn, el, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el, thisObj)",
        "duration": 20
      },
      "test Y.on('synth', fn, el, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el, thisObj, arg)",
        "duration": 17
      },
      "test Y.on('synth', fn, el, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el, null, arg)",
        "duration": 15
      },
      "test Y.on('synth', fn, selectorOne)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne)",
        "duration": 20
      },
      "test Y.on('synth', fn, selectorOne, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne, thisObj)",
        "duration": 34
      },
      "test Y.on('synth', fn, selectorOne, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne, thisObj, arg)",
        "duration": 17
      },
      "test Y.on('synth', fn, selectorOne, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne, null, arg)",
        "duration": 16
      },
      "test Y.on('synth', fn, selectorMultiple)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple)",
        "duration": 22
      },
      "test Y.on('synth', fn, selectorMultiple, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple, thisObj)",
        "duration": 44
      },
      "test Y.on('synth', fn, selectorMultiple, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple, thisObj, arg)",
        "duration": 25
      },
      "test Y.on('synth', fn, selectorMultiple, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple, null, arg)",
        "duration": 20
      },
      "test Y.on('synth', fn, notYetAvailable)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable)",
        "duration": 33
      },
      "test Y.on('synth', fn, notYetAvailable, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable, thisObj)",
        "duration": 33
      },
      "test Y.on('synth', fn, notYetAvailable, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable, thisObj, arg)",
        "duration": 30
      },
      "test Y.on('synth', fn, notYetAvailable, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable, null, arg)",
        "duration": 32
      },
      "test Y.on('synth', fn) defaults to window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn) defaults to window",
        "duration": 12
      }
    },
    "node.on": {
      "name": "node.on",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 93,
      "type": "testcase",
      "test node.on(x, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn)",
        "duration": 21
      },
      "test node.on(x, fn, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn, thisObj)",
        "duration": 18
      },
      "test node.on(x, fn, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn, thisObj, arg)",
        "duration": 20
      },
      "test node.on(x, fn, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn, null, arg)",
        "duration": 20
      }
    },
    "nodelist.on": {
      "name": "nodelist.on",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 101,
      "type": "testcase",
      "test nodelist.on(x, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn)",
        "duration": 20
      },
      "test nodelist.on(x, fn, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn, thisObj)",
        "duration": 20
      },
      "test nodelist.on(x, fn, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn, thisObj, arg)",
        "duration": 19
      },
      "test nodelist.on(x, fn, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn, null, arg)",
        "duration": 19
      }
    },
    "preventDups": {
      "name": "preventDups",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 143,
      "type": "testcase",
      "node.on(x, fn) + node.on(x, fn) should  allow dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.on(x, fn) + node.on(x, fn) should  allow dups",
        "duration": 16
      },
      "Y.on(x, fn) + node.on(x, fn) should allow dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.on(x, fn) + node.on(x, fn) should allow dups",
        "duration": 18
      },
      "nodelist.on(x, fn) + node.on(x, fn) should allow dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "nodelist.on(x, fn) + node.on(x, fn) should allow dups",
        "duration": 19
      },
      "preventDups:true node.on(x, fn) + node.on(x, fn) should prevent dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "preventDups:true node.on(x, fn) + node.on(x, fn) should prevent dups",
        "duration": 21
      },
      "preventDups:true Y.on(x, fn) + node.on(x, fn) should prevent dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "preventDups:true Y.on(x, fn) + node.on(x, fn) should prevent dups",
        "duration": 31
      },
      "preventDups:true nodelist.on(x, fn) + node.on(x, fn) should prevent dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "preventDups:true nodelist.on(x, fn) + node.on(x, fn) should prevent dups",
        "duration": 20
      }
    },
    "node.delegate": {
      "name": "node.delegate",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 106,
      "type": "testcase",
      "test node.delegate(synth, fn, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter)",
        "duration": 22
      },
      "test node.delegate(synth, fn, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter, thisObj)",
        "duration": 19
      },
      "test node.delegate(synth, fn, filter, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter, thisObj, arg)",
        "duration": 19
      },
      "test node.delegate(synth, fn, filter, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter, null, arg)",
        "duration": 20
      }
    },
    "Y.delegate": {
      "name": "Y.delegate",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 313,
      "type": "testcase",
      "test Y.delegate(synth, fn, node, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter)",
        "duration": 17
      },
      "test Y.delegate(synth, fn, el, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, el, filter)",
        "duration": 19
      },
      "test Y.delegate(synth, fn, selectorOne, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, selectorOne, filter)",
        "duration": 21
      },
      "test Y.delegate(synth, fn, node, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter, thisObj)",
        "duration": 26
      },
      "test Y.delegate(synth, fn, node, filter, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter, thisObj, arg)",
        "duration": 15
      },
      "test Y.delegate(synth, fn, node, filter, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter, null, arg)",
        "duration": 16
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter)",
        "duration": 43
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj)",
        "duration": 30
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj, arg)",
        "duration": 29
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter, null, arg)",
        "duration": 33
      },
      "test Y.delegate(synth, fn, selectorMulti, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, selectorMulti, filter)",
        "duration": 22
      }
    },
    "Detach": {
      "name": "Detach",
      "passed": 31,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 31,
      "duration": 831,
      "type": "testcase",
      "test node.on() + node.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach(synth, fn)",
        "duration": 17
      },
      "test node.on(synth, fn, thisObj) + node.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(synth, fn, thisObj) + node.detach(synth, fn)",
        "duration": 21
      },
      "test node.on() + node.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach(synth)",
        "duration": 17
      },
      "test node.on() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach()",
        "duration": 21
      },
      "test node.on() + node.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detachAll()",
        "duration": 21
      },
      "test node.on() + node.purge(true, synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.purge(true, synth)",
        "duration": 19
      },
      "test node.on() + parent.purge(true, synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + parent.purge(true, synth)",
        "duration": 24
      },
      "test nodelist.on(synth, fn) + node.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(synth, fn) + node.detach(synth, fn)",
        "duration": 17
      },
      "test nodelist.on(synth, fn) + node.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(synth, fn) + node.detach(synth)",
        "duration": 20
      },
      "test node.on(synth, fn) + nodelist.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(synth, fn) + nodelist.detach(synth, fn)",
        "duration": 52
      },
      "test node.on(synth, fn) + nodelist.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(synth, fn) + nodelist.detach(synth)",
        "duration": 16
      },
      "test node.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + handle.detach()",
        "duration": 17
      },
      "test nodelist.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + handle.detach()",
        "duration": 19
      },
      "test nodelist.on() + nodelist.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detach(synth, fn)",
        "duration": 27
      },
      "test nodelist.on(synth, fn, thisObj) + nodelist.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(synth, fn, thisObj) + nodelist.detach(synth, fn)",
        "duration": 24
      },
      "test nodelist.on() + nodelist.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detach(synth)",
        "duration": 25
      },
      "test nodelist.on() + nodelist.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detach()",
        "duration": 23
      },
      "test nodelist.on() + nodelist.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detachAll()",
        "duration": 22
      },
      "test nodelist.on() + parent.purge(true, synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + parent.purge(true, synth)",
        "duration": 25
      },
      "test node.on('cat|__', fn) + node.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|__', fn) + node.detach('cat|___')",
        "duration": 15
      },
      "test node.on('cat|__', fn) + node.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|__', fn) + node.detach('cat|___', fn)",
        "duration": 19
      },
      "test node.on('cat|__', fn) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|__', fn) + node.detach('cat|*')",
        "duration": 15
      },
      "test Y.on('cat|__', fn, sel) + node.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, sel) + node.detach('cat|___')",
        "duration": 14
      },
      "test Y.on('cat|__', fn, sel) + node.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, sel) + node.detach('cat|___', fn)",
        "duration": 19
      },
      "test Y.on('cat|__', fn) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn) + node.detach('cat|*')",
        "duration": 17
      },
      "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___')",
        "duration": 26
      },
      "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___', fn)",
        "duration": 26
      },
      "test nodelist.on('cat|__', fn) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('cat|__', fn) + node.detach('cat|*')",
        "duration": 24
      },
      "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___')",
        "duration": 24
      },
      "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___', fn)",
        "duration": 27
      },
      "test Y.on('cat|__', fn, multiSelector) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, multiSelector) + node.detach('cat|*')",
        "duration": 25
      }
    },
    "processArgs": {
      "name": "processArgs",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 450,
      "type": "testcase",
      "test Y.on('synth', fn, selector, extra)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selector, extra)",
        "duration": 14
      },
      "Y.on('synth', fn, '#not-here-yet', extra) should resubscribe with original arguments": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.on('synth', fn, '#not-here-yet', extra) should resubscribe with original arguments",
        "duration": 421
      }
    },
    "Notifier": {
      "name": "Notifier",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 0,
      "duration": 6,
      "type": "testcase"
    },
    "timestamp": "Friday, September 28, 2012 3:39:57 PM"
  },
  {
    "name": "Event: resize",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 3,
    "duration": 413,
    "type": "report",
    "subscribe": {
      "name": "subscribe",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 3,
      "duration": 334,
      "type": "testcase",
      "test Y.on('windowresize', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('windowresize', fn)",
        "duration": 144
      },
      "test node.on('windowresize', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('windowresize', fn)",
        "duration": 144
      },
      "test resize event throttling": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test resize event throttling"
      }
    },
    "timestamp": "Friday, September 28, 2012 3:39:58 PM"
  },
  {
    "name": "Event: outside",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 97,
    "type": "report",
    "outside events": {
      "name": "outside events",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 23,
      "type": "testcase",
      "test: on": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: on",
        "duration": 3
      },
      "test: delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: delegate",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:00 PM"
  },
  {
    "name": "Event: mousewheel",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 82,
    "type": "report",
    "Mousewheel": {
      "name": "Mousewheel",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 4,
      "type": "testcase",
      "test: attach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attach",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:01 PM"
  },
  {
    "name": "Event: mouseenter",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 99,
    "type": "report",
    "mouseenter": {
      "name": "mouseenter",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 21,
      "type": "testcase",
      "test: _filterNotify": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _filterNotify",
        "duration": 3
      },
      "test: delegateDetach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: delegateDetach",
        "duration": 3
      },
      "test: _notify": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _notify",
        "duration": 3
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:02 PM"
  },
  {
    "name": "Event: key",
    "passed": 45,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 45,
    "duration": 2052,
    "type": "report",
    "node.on('key',...)": {
      "name": "node.on('key',...)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 169,
      "type": "testcase",
      "test node.on('key', fn, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('key', fn, '65')",
        "duration": 80
      },
      "test node.on('key', fn, '65', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('key', fn, '65', thisObj)",
        "duration": 43
      },
      "test node.on('key', fn, '65', thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('key', fn, '65', thisObj, args)",
        "duration": 26
      }
    },
    "nodelist.on('key',...)": {
      "name": "nodelist.on('key',...)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 102,
      "type": "testcase",
      "test nodelist.on('key', fn, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('key', fn, '65')",
        "duration": 31
      },
      "test nodelist.on('key', fn, '65', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('key', fn, '65', thisObj)",
        "duration": 32
      },
      "test nodelist.on('key', fn, '65', thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('key', fn, '65', thisObj, args)",
        "duration": 32
      }
    },
    "Y.on('key',...)": {
      "name": "Y.on('key',...)",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 101,
      "type": "testcase",
      "test Y.on('key', fn, selector, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, selector, '65')",
        "duration": 23
      },
      "test Y.on('key', fn, node, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, node, '65')",
        "duration": 23
      },
      "test Y.on('key', fn, selector, '65', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, selector, '65', thisObj)",
        "duration": 22
      },
      "test Y.on('key', fn, selector, '65', thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, selector, '65', thisObj, args)",
        "duration": 21
      }
    },
    "node.delegate('key',...)": {
      "name": "node.delegate('key',...)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 201,
      "type": "testcase",
      "test node.delegate('key', fn, '65', filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('key', fn, '65', filter)",
        "duration": 86
      },
      "test node.delegate('key', fn, '65', filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('key', fn, '65', filter, thisObj)",
        "duration": 53
      },
      "test node.delegate('key', fn, '65', filter, thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('key', fn, '65', filter, thisObj, args)",
        "duration": 42
      }
    },
    "Y.delegate('key',...)": {
      "name": "Y.delegate('key',...)",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 182,
      "type": "testcase",
      "test Y.delegate('key', fn, '65', selector, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', selector, filter)",
        "duration": 40
      },
      "test Y.delegate('key', fn, '65', node, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', node, filter)",
        "duration": 41
      },
      "test Y.delegate('key', fn, '65', selector, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', selector, filter, thisObj)",
        "duration": 47
      },
      "test Y.delegate('key', fn, '65', selector, filter, thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', selector, filter, thisObj, args)",
        "duration": 41
      }
    },
    "key spec\/filter": {
      "name": "key spec\/filter",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 1105,
      "type": "testcase",
      "test 'down:65'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'down:65'",
        "duration": 35
      },
      "test 'up:65'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'up:65'",
        "duration": 37
      },
      "test 'press:65'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'press:65'",
        "duration": 35
      },
      "test 'a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a'",
        "duration": 38
      },
      "test 'down:a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'down:a'",
        "duration": 36
      },
      "test 'up:a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'up:a'",
        "duration": 37
      },
      "test 'press:a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'press:a'",
        "duration": 36
      },
      "test 'A'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'A'",
        "duration": 40
      },
      "test 'enter', 'esc', 'backspace', 'tab', 'pageup', 'pagedown'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'enter', 'esc', 'backspace', 'tab', 'pageup', 'pagedown'",
        "duration": 140
      },
      "test 'a,b'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a,b'",
        "duration": 44
      },
      "test '65,b,esc'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test '65,b,esc'",
        "duration": 54
      },
      "test 'unknownKeyName'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'unknownKeyName'",
        "duration": 36
      },
      "test '65,unknownKeyName'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test '65,unknownKeyName'",
        "duration": 14
      },
      "test '65,unknownKeyName+alt'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test '65,unknownKeyName+alt'",
        "duration": 11
      },
      "test 'press:a,b'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'press:a,b'",
        "duration": 13
      },
      "test 'a+shift'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a+shift'",
        "duration": 45
      },
      "test 'enter+ctrl'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'enter+ctrl'",
        "duration": 45
      },
      "test 'up:a+alt'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'up:a+alt'",
        "duration": 15
      },
      "test 'a,b+shift+meta'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a,b+shift+meta'",
        "duration": 81
      },
      "test spec with spaces 'down:65, 66,   67'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test spec with spaces 'down:65, 66,   67'",
        "duration": 85
      },
      "test spec with no keyCodes 'down:'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test spec with no keyCodes 'down:'",
        "duration": 48
      },
      "test spec with only modifiers '+ctrl+shift'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test spec with only modifiers '+ctrl+shift'",
        "duration": 60
      }
    },
    "detach": {
      "name": "detach",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 106,
      "type": "testcase",
      "test node.on() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach()",
        "duration": 20
      },
      "test Y.on() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on() + node.detach()",
        "duration": 12
      },
      "test node.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + handle.detach()",
        "duration": 12
      },
      "test node.on('cat|key',...) + node.detach('cat|...')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|key',...) + node.detach('cat|...')",
        "duration": 11
      },
      "test node.delegate() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate() + node.detach()",
        "duration": 11
      },
      "test node.delegate() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate() + handle.detach()",
        "duration": 13
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:05 PM"
  },
  {
    "name": "Event: hover",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 837,
    "type": "report",
    "subscribe": {
      "name": "subscribe",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 488,
      "type": "testcase",
      "test node.on('hover', over, out)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out)",
        "duration": 31
      },
      "test container.on('hover', over, out)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test container.on('hover', over, out)",
        "duration": 42
      },
      "test Y.on('hover', over, out, '#foo')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo')",
        "duration": 18
      },
      "test nodelist.on('hover', over, out)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out)",
        "duration": 42
      },
      "test node.delegate('hover', over, out, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter)",
        "duration": 32
      },
      "test node.on('hover', over, out, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out, thisObj)",
        "duration": 18
      },
      "test Y.on('hover', over, out, '#foo', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo', thisObj)",
        "duration": 18
      },
      "test nodelist.on('hover', over, out, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out, thisObj)",
        "duration": 27
      },
      "test node.on('hover', over, out, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out, thisObj, arg)",
        "duration": 21
      },
      "test Y.on('hover', over, out, '#foo', thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo', thisObj, arg)",
        "duration": 21
      },
      "test nodelist.on('hover', over, out, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out, thisObj, arg)",
        "duration": 60
      },
      "test node.on('hover', over, out, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out, null, arg)",
        "duration": 22
      },
      "test Y.on('hover', over, out, '#foo', null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo', null, arg)",
        "duration": 19
      },
      "test nodelist.on('hover', over, out, null, arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out, null, arg",
        "duration": 28
      }
    },
    "detach": {
      "name": "detach",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 271,
      "type": "testcase",
      "test node.on('hover', over, out); node.detach('hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out); node.detach('hover');",
        "duration": 30
      },
      "test node.on('hover', over, out); node.detach('hover', over);": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out); node.detach('hover', over);",
        "duration": 21
      },
      "test node.on('cat|hover', over, out); node.detach('cat|hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|hover', over, out); node.detach('cat|hover');",
        "duration": 19
      },
      "test node.on('cat|hover', over, out); node.detach('cat|*');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|hover', over, out); node.detach('cat|*');",
        "duration": 22
      },
      "test node.on('hover', over, out); handle.detach();": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out); handle.detach();",
        "duration": 20
      },
      "test node.delegate('hover', over, out, filter); node.detach('hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter); node.detach('hover');",
        "duration": 28
      },
      "test node.delegate('hover', over, out, filter); node.detach('hover', over);": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter); node.detach('hover', over);",
        "duration": 25
      },
      "test node.delegate('cat|hover', over, out, filter); node.detach('cat|hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('cat|hover', over, out, filter); node.detach('cat|hover');",
        "duration": 23
      },
      "test node.delegate('cat|hover', over, out, filter); node.detach('cat|*');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('cat|hover', over, out, filter); node.detach('cat|*');",
        "duration": 22
      },
      "test node.delegate('hover', over, out, filter); handle.detach();": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter); handle.detach();",
        "duration": 22
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:06 PM"
  },
  {
    "name": "Event: ContextMenu",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 165,
    "type": "report",
    "ContextMenu Synth Tests": {
      "name": "ContextMenu Synth Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 92,
      "type": "testcase",
      "test_contextmenu_event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_contextmenu_event",
        "duration": 5
      },
      "test_mac_kb_shortct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_mac_kb_shortct",
        "duration": 7
      },
      "test_shiftF10_key": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_shiftF10_key",
        "duration": 6
      },
      "test_menu_key": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_menu_key",
        "duration": 6
      },
      "test_xy_coords_for_menu": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_xy_coords_for_menu",
        "duration": 6
      },
      "test_xy_coords_for_shift10_or_ctrl_shift_option_m": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_xy_coords_for_shift10_or_ctrl_shift_option_m",
        "duration": 8
      },
      "test_multiple_on_listeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_on_listeners",
        "duration": 6
      },
      "test_multiple_delegate_listeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_delegate_listeners",
        "duration": 9
      },
      "test_multiple_on_and_delegate_listeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_on_and_delegate_listeners",
        "duration": 9
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:07 PM"
  },
  {
    "name": "Event: DOM",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 908,
    "type": "report",
    "DOM Events": {
      "name": "DOM Events",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 832,
      "type": "testcase",
      "test_on_with_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_on_with_string",
        "duration": 2
      },
      "test_on_with_node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_on_with_node",
        "duration": 1
      },
      "test_node_on": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_node_on",
        "duration": 2
      },
      "test_node_detachall": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_node_detachall",
        "duration": 2
      },
      "test_nodelist_on": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_nodelist_on",
        "duration": 2
      },
      "test_y_on_with_nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_with_nodelist",
        "duration": 2
      },
      "test_y_detach_with_nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_detach_with_nodelist",
        "duration": 2
      },
      "test_y_detach_with_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_detach_with_array",
        "duration": 2
      },
      "test_y_on_with_selector_multiple_match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_with_selector_multiple_match",
        "duration": 1
      },
      "test_y_on_with_htmlelementcollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_with_htmlelementcollection",
        "duration": 1
      },
      "test_y_on_empty_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_empty_array",
        "duration": 1
      },
      "test_detach_by_sig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_detach_by_sig",
        "duration": 3
      },
      "test_multi_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_detach",
        "duration": 2
      },
      "test_onavail_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_onavail_detach",
        "duration": 307
      },
      "test_lazy_attach_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_lazy_attach_detach",
        "duration": 327
      },
      "test_purge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_purge",
        "duration": 32
      },
      "test_categories": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_categories",
        "duration": 2
      },
      "test left and right click, mouseup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test left and right click, mouseup",
        "duration": 2
      },
      "test Y.on(load)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on(load)",
        "duration": 7
      },
      "error in onavailable callback should not result in infinite _poll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "error in onavailable callback should not result in infinite _poll",
        "duration": 60
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:09 PM"
  },
  {
    "name": "Event: Delegate",
    "passed": 33,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 33,
    "duration": 593,
    "type": "report",
    "Event Delegate Tests": {
      "name": "Event Delegate Tests",
      "passed": 27,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 27,
      "duration": 440,
      "type": "testcase",
      "test_simple_delegate_for_anchors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_simple_delegate_for_anchors",
        "duration": 4
      },
      "test_multiple_selectors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_selectors",
        "duration": 4
      },
      "test_filter_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_filter_function",
        "duration": 4
      },
      "test_filter_function_for_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_filter_function_for_focus",
        "duration": 16
      },
      "test_document_as_container": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_document_as_container",
        "duration": 7
      },
      "test_checking_delegation_target": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_checking_delegation_target",
        "duration": 5
      },
      "test_including_container_in_selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_including_container_in_selector",
        "duration": 5
      },
      "test_targeting_container_without_selectors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_targeting_container_without_selectors",
        "duration": 5
      },
      "test_multiple_selectors_one_match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_selectors_one_match",
        "duration": 6
      },
      "test_multiple_delegate_matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_delegate_matches",
        "duration": 7
      },
      "test_bubble_up_after_delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bubble_up_after_delegate",
        "duration": 9
      },
      "test_bubble_up_after_delegate_halt": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bubble_up_after_delegate_halt",
        "duration": 7
      },
      "test_direct_descendant_combinator": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_direct_descendant_combinator",
        "duration": 14
      },
      "test_multiple_matches_in_subtree": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_matches_in_subtree",
        "duration": 6
      },
      "test_removing_parent_in_subscriber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_removing_parent_in_subscriber",
        "duration": 4
      },
      "test_successful_purge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_successful_purge",
        "duration": 21
      },
      "test_successful_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_successful_detach",
        "duration": 20
      },
      "Y.delegate('cat|type') should subscribe event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.delegate('cat|type') should subscribe event",
        "duration": 10
      },
      "node.delegate('cat|type') should subscribe event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.delegate('cat|type') should subscribe event",
        "duration": 13
      },
      "node.detach('cat|type', fn) should detach delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.detach('cat|type', fn) should detach delegate",
        "duration": 11
      },
      "node.detach('cat|type') should detach delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.detach('cat|type') should detach delegate",
        "duration": 10
      },
      "node.detach('cat|*') should detach delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.detach('cat|*') should detach delegate",
        "duration": 10
      },
      "testPassingObjectForMultipleSubscriptions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPassingObjectForMultipleSubscriptions",
        "duration": 9
      },
      "testThisObjOverrideWithObjectSubscription": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testThisObjOverrideWithObjectSubscription",
        "duration": 7
      },
      "testPassingExtraArgsWithObjectSubscription": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPassingExtraArgsWithObjectSubscription",
        "duration": 8
      },
      "testDetachingObjectSubscriptionViaHandle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachingObjectSubscriptionViaHandle",
        "duration": 17
      },
      "testPassingArrayForMultipleSubscriptions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPassingArrayForMultipleSubscriptions",
        "duration": 10
      }
    },
    "Y.delegate.compileFilter": {
      "name": "Y.delegate.compileFilter",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "Y.delegate.compileFilter should return a function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.delegate.compileFilter should return a function",
        "duration": 1
      },
      "filter should return true for matching descendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter should return true for matching descendant",
        "duration": 1
      },
      "filter should return false if no descendant matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter should return false if no descendant matches",
        "duration": 2
      },
      "filter should return true if the currentTarget is the target and it matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter should return true if the currentTarget is the target and it matches",
        "duration": 2
      }
    },
    "Bugs": {
      "name": "Bugs",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 57,
      "type": "testcase",
      "test_filter_function_for_focus_from_body": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_filter_function_for_focus_from_body",
        "duration": 14
      },
      "stopPropagation should stop multiple matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "stopPropagation should stop multiple matches",
        "duration": 16
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:11 PM"
  },
  {
    "name": "Console: Filters",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 345,
    "type": "report",
    "resources": {
      "name": "resources",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 119,
      "type": "testcase",
      "test_module_loaded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_loaded",
        "duration": 29
      },
      "test_skin_loaded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_loaded",
        "duration": 44
      }
    },
    "instantiation": {
      "name": "instantiation",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 123,
      "type": "testcase",
      "test_instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_instantiation",
        "duration": 34
      },
      "test_render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_render",
        "duration": 62
      }
    },
    "ui": {
      "name": "ui",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 10,
      "type": "testcase",
      "Filter controls should be in the footer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Filter controls should be in the footer",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:12 PM"
  },
  {
    "name": "DataSchema",
    "passed": 24,
    "failed": 2,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 1038,
    "type": "report",
    "JSON Tests": {
      "name": "JSON Tests",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 67,
      "type": "testcase",
      "testJSONMeta": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONMeta",
        "duration": 1
      },
      "testJSONResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONResults",
        "duration": 1
      },
      "testJSONNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONNested",
        "duration": 1
      },
      "testJSONFieldLocators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONFieldLocators",
        "duration": 1
      },
      "testJSONNestedFieldLocators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONNestedFieldLocators",
        "duration": 2
      },
      "testJSONComplexLocators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONComplexLocators",
        "duration": 2
      },
      "test results as root array with no resultListLocator": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test results as root array with no resultListLocator",
        "duration": 1
      },
      "test nested locators failover to simple locators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nested locators failover to simple locators",
        "duration": 1
      },
      "test utf-8 characters in locators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test utf-8 characters in locators",
        "duration": 1
      },
      "testJSONError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONError",
        "duration": 2
      }
    },
    "XML Tests": {
      "name": "XML Tests",
      "passed": 4,
      "failed": 2,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 395,
      "type": "testcase",
      "testXMLMeta": {
        "result": "fail",
        "message": "Expected rootatt.\nExpected: 0 (number)\nActual: null (object)",
        "type": "test",
        "name": "testXMLMeta",
        "duration": 30
      },
      "testXMLResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLResults",
        "duration": 48
      },
      "testXMLXPathResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLXPathResults",
        "duration": 45
      },
      "testXMLComplex": {
        "result": "fail",
        "message": "Expected rootatt.\nExpected: 5 (number)\nActual: null (object)",
        "type": "test",
        "name": "testXMLComplex",
        "duration": 89
      },
      "testXMLNestedSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLNestedSchema",
        "duration": 116
      },
      "testXMLError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLError",
        "duration": 6
      }
    },
    "HTML Tests": {
      "name": "HTML Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 451,
      "type": "testcase",
      "testSingleTbody": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleTbody",
        "duration": 113
      },
      "testMultipleTbody": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultipleTbody",
        "duration": 315
      }
    },
    "Array Tests": {
      "name": "Array Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 21,
      "type": "testcase",
      "testSimpleArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSimpleArrayResults",
        "duration": 1
      },
      "testNestedArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNestedArrayResults",
        "duration": 1
      },
      "testObjectArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testObjectArrayResults",
        "duration": 1
      },
      "testComboArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComboArrayResults",
        "duration": 1
      },
      "testArrayError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArrayError",
        "duration": 1
      }
    },
    "Text Tests": {
      "name": "Text Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "testTextResultsAndFields": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextResultsAndFields",
        "duration": 2
      },
      "testTextResultsOnly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextResultsOnly",
        "duration": 1
      },
      "testTextError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextError",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:14 PM"
  },
  {
    "name": "Collection: ArrayList",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 149,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "construct with array should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "construct with array should not error",
        "duration": 1
      },
      "construct after augmented class instantiation should not clobber items": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "construct after augmented class instantiation should not clobber items",
        "duration": 1
      }
    },
    "API": {
      "name": "API",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 41,
      "type": "testcase",
      "test item": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test item",
        "duration": 1
      },
      "test each": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test each",
        "duration": 1
      },
      "test each with context override": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test each with context override",
        "duration": 1
      },
      "test some": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test some",
        "duration": 1
      },
      "test some with context override": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test some with context override",
        "duration": 1
      },
      "test some without breaking out of the loop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test some without breaking out of the loop",
        "duration": 1
      },
      "test indexOf": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test indexOf",
        "duration": 1
      },
      "test size": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test size",
        "duration": 1
      },
      "test isEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test isEmpty",
        "duration": 1
      },
      "test toJSON": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test toJSON",
        "duration": 1
      }
    },
    "addMethod": {
      "name": "addMethod",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "test addMethod": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addMethod",
        "duration": 2
      },
      "methods should be chainable unless a value is returned": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "methods should be chainable unless a value is returned",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:15 PM"
  },
  {
    "name": "Collection: ArrayInvoke",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 125,
    "type": "report",
    "array-invoke": {
      "name": "array-invoke",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 49,
      "type": "testcase",
      "invoke() should return an empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "invoke() should return an empty array",
        "duration": 1
      },
      "invoke(array) should return an empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "invoke(array) should return an empty array",
        "duration": 1
      },
      "test invoke(array, string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(array, string)",
        "duration": 1
      },
      "test invoke(sparseArray, string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(sparseArray, string)",
        "duration": 1
      },
      "test invoke(array, string, args...)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(array, string, args...)",
        "duration": 1
      },
      "test invoke(sparseArray, string, args...)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(sparseArray, string, args...)",
        "duration": 1
      },
      "test invoke(array, nonExistentMethodName)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(array, nonExistentMethodName)",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:16 PM"
  },
  {
    "name": "Collection",
    "passed": 33,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 33,
    "duration": 215,
    "type": "report",
    "General": {
      "name": "General",
      "passed": 33,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 33,
      "duration": 143,
      "type": "testcase",
      "testLastIndexOf": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLastIndexOf",
        "duration": 1
      },
      "testLastIndexOf_fromIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLastIndexOf_fromIndex",
        "duration": 1
      },
      "lastIndexOf() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "lastIndexOf() should handle sparse arrays correctly",
        "duration": 1
      },
      "testMap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMap",
        "duration": 1
      },
      "testMapContext": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMapContext",
        "duration": 1
      },
      "map() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "map() should handle sparse arrays correctly",
        "duration": 1
      },
      "map() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "map() should work on array-like objects",
        "duration": 1
      },
      "testReduce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReduce",
        "duration": 1
      },
      "testReduceContext": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReduceContext",
        "duration": 1
      },
      "reduce() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "reduce() should handle sparse arrays correctly",
        "duration": 1
      },
      "reduce() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "reduce() should work on array-like objects",
        "duration": 1
      },
      "testFind": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFind",
        "duration": 1
      },
      "testFindNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFindNoMatch",
        "duration": 1
      },
      "testFindFirst": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFindFirst",
        "duration": 1
      },
      "testFindLast": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFindLast",
        "duration": 1
      },
      "find() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "find() should handle sparse arrays correctly",
        "duration": 1
      },
      "testFilter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilter",
        "duration": 2
      },
      "testFilterNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilterNoMatch",
        "duration": 1
      },
      "filter() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should handle sparse arrays correctly",
        "duration": 1
      },
      "filter() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should work on array-like objects",
        "duration": 1
      },
      "testReject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReject",
        "duration": 1
      },
      "testRejectNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRejectNoMatch",
        "duration": 2
      },
      "testGrepMatches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGrepMatches",
        "duration": 1
      },
      "testGrepNoMatches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGrepNoMatches",
        "duration": 1
      },
      "testPartition": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPartition",
        "duration": 1
      },
      "testZip": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testZip",
        "duration": 1
      },
      "testEvery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEvery",
        "duration": 1
      },
      "testEveryNoMatches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEveryNoMatches",
        "duration": 1
      },
      "every() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "every() should handle sparse arrays correctly",
        "duration": 1
      },
      "every() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "every() should work on array-like objects",
        "duration": 1
      },
      "unique() should return a copy of an array with duplicate items removed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "unique() should return a copy of an array with duplicate items removed",
        "duration": 1
      },
      "unique() should support a custom test function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "unique() should support a custom test function",
        "duration": 1
      },
      "flatten() should flatten nested arrays into a single-level array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "flatten() should flatten nested arrays into a single-level array",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:17 PM"
  },
  {
    "name": "ClassNameManager",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 99,
    "type": "report",
    "ClassNameManager Tests": {
      "name": "ClassNameManager Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 25,
      "type": "testcase",
      "testSingleSection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSection",
        "duration": 1
      },
      "testSingleSectionNoPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSectionNoPrefix",
        "duration": 1
      },
      "testMoreThanOneSection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMoreThanOneSection",
        "duration": 1
      },
      "testMoreThanOneSectionNoPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMoreThanOneSectionNoPrefix",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:18 PM"
  },
  {
    "name": "Charts: VerticalSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7826,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872018534_78": {
      "name": "testCase_yui_3_5_0_1_1348872018534_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 448
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_79": {
      "name": "testCase_yui_3_5_0_1_1348872018534_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_80": {
      "name": "testCase_yui_3_5_0_1_1348872018534_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 454,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_81": {
      "name": "testCase_yui_3_5_0_1_1348872018534_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_82": {
      "name": "testCase_yui_3_5_0_1_1348872018534_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_83": {
      "name": "testCase_yui_3_5_0_1_1348872018534_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 436
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_84": {
      "name": "testCase_yui_3_5_0_1_1348872018534_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 399,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 375
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_85": {
      "name": "testCase_yui_3_5_0_1_1348872018534_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 417
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_86": {
      "name": "testCase_yui_3_5_0_1_1348872018534_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 366
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_87": {
      "name": "testCase_yui_3_5_0_1_1348872018534_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 381
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_88": {
      "name": "testCase_yui_3_5_0_1_1348872018534_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 497,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 493
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_89": {
      "name": "testCase_yui_3_5_0_1_1348872018534_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_90": {
      "name": "testCase_yui_3_5_0_1_1348872018534_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 518,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 503
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_91": {
      "name": "testCase_yui_3_5_0_1_1348872018534_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 381
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_92": {
      "name": "testCase_yui_3_5_0_1_1348872018534_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 466
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_93": {
      "name": "testCase_yui_3_5_0_1_1348872018534_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_94": {
      "name": "testCase_yui_3_5_0_1_1348872018534_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 401
      }
    },
    "testCase_yui_3_5_0_1_1348872018534_95": {
      "name": "testCase_yui_3_5_0_1_1348872018534_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 472,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 469
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:27 PM"
  },
  {
    "name": "Charts: VerticalLineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 10460,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872027672_78": {
      "name": "testCase_yui_3_5_0_1_1348872027672_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1275,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 650
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 574
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_79": {
      "name": "testCase_yui_3_5_0_1_1348872027672_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1111,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 498
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 582
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_80": {
      "name": "testCase_yui_3_5_0_1_1348872027672_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1127,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 607
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 512
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_81": {
      "name": "testCase_yui_3_5_0_1_1348872027672_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1242,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 620
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 592
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_82": {
      "name": "testCase_yui_3_5_0_1_1348872027672_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1367,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 698
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 663
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_83": {
      "name": "testCase_yui_3_5_0_1_1348872027672_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1368,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 659
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 692
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_84": {
      "name": "testCase_yui_3_5_0_1_1348872027672_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1453,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 757
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 610
      }
    },
    "testCase_yui_3_5_0_1_1348872027672_85": {
      "name": "testCase_yui_3_5_0_1_1348872027672_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1429,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 716
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 708
      }
    },
    "timestamp": "Friday, September 28, 2012 3:40:39 PM"
  },
  {
    "name": "Charts: VerticalComboSplineShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 29867,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872039337_78": {
      "name": "testCase_yui_3_5_0_1_1348872039337_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3229,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1562
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1622
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_79": {
      "name": "testCase_yui_3_5_0_1_1348872039337_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3045,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1539
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1477
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_80": {
      "name": "testCase_yui_3_5_0_1_1348872039337_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3707,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1816
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1886
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_81": {
      "name": "testCase_yui_3_5_0_1_1348872039337_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3779,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1909
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1845
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_82": {
      "name": "testCase_yui_3_5_0_1_1348872039337_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3589,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1773
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1792
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_83": {
      "name": "testCase_yui_3_5_0_1_1348872039337_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3577,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1786
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1784
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_84": {
      "name": "testCase_yui_3_5_0_1_1348872039337_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4428,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2190
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2201
      }
    },
    "testCase_yui_3_5_0_1_1348872039337_85": {
      "name": "testCase_yui_3_5_0_1_1348872039337_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4421,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2196
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2201
      }
    },
    "timestamp": "Friday, September 28, 2012 3:41:10 PM"
  },
  {
    "name": "Charts: VerticalComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8783,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872070516_78": {
      "name": "testCase_yui_3_5_0_1_1348872070516_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 555,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 539
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_79": {
      "name": "testCase_yui_3_5_0_1_1348872070516_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_80": {
      "name": "testCase_yui_3_5_0_1_1348872070516_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 508,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 495
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_81": {
      "name": "testCase_yui_3_5_0_1_1348872070516_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 392
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_82": {
      "name": "testCase_yui_3_5_0_1_1348872070516_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 478
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_83": {
      "name": "testCase_yui_3_5_0_1_1348872070516_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_84": {
      "name": "testCase_yui_3_5_0_1_1348872070516_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 499,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 476
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_85": {
      "name": "testCase_yui_3_5_0_1_1348872070516_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_86": {
      "name": "testCase_yui_3_5_0_1_1348872070516_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_87": {
      "name": "testCase_yui_3_5_0_1_1348872070516_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 593,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 554
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_88": {
      "name": "testCase_yui_3_5_0_1_1348872070516_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 421
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_89": {
      "name": "testCase_yui_3_5_0_1_1348872070516_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 555,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 526
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_90": {
      "name": "testCase_yui_3_5_0_1_1348872070516_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 416
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_91": {
      "name": "testCase_yui_3_5_0_1_1348872070516_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 571,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 541
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_92": {
      "name": "testCase_yui_3_5_0_1_1348872070516_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 436,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 430
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_93": {
      "name": "testCase_yui_3_5_0_1_1348872070516_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 550,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 547
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_94": {
      "name": "testCase_yui_3_5_0_1_1348872070516_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 423
      }
    },
    "testCase_yui_3_5_0_1_1348872070516_95": {
      "name": "testCase_yui_3_5_0_1_1348872070516_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 589,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 566
      }
    },
    "timestamp": "Friday, September 28, 2012 3:41:20 PM"
  },
  {
    "name": "Charts: VerticalComboSplineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 20370,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872080630_78": {
      "name": "testCase_yui_3_5_0_1_1348872080630_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2378,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1136
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1187
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_79": {
      "name": "testCase_yui_3_5_0_1_1348872080630_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2190,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1080
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1071
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_80": {
      "name": "testCase_yui_3_5_0_1_1348872080630_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2353,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1178
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1162
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_81": {
      "name": "testCase_yui_3_5_0_1_1348872080630_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2363,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1108
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1221
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_82": {
      "name": "testCase_yui_3_5_0_1_1348872080630_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2580,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1280
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1294
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_83": {
      "name": "testCase_yui_3_5_0_1_1348872080630_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2829,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1466
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1326
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_84": {
      "name": "testCase_yui_3_5_0_1_1348872080630_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2836,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1328
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1475
      }
    },
    "testCase_yui_3_5_0_1_1348872080630_85": {
      "name": "testCase_yui_3_5_0_1_1348872080630_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2753,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1336
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1402
      }
    },
    "timestamp": "Friday, September 28, 2012 3:41:41 PM"
  },
  {
    "name": "Charts: VerticalComboShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 14223,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872102202_78": {
      "name": "testCase_yui_3_5_0_1_1348872102202_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1690,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 879
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 777
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_79": {
      "name": "testCase_yui_3_5_0_1_1348872102202_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1591,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 770
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 790
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_80": {
      "name": "testCase_yui_3_5_0_1_1348872102202_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1687,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 826
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 834
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_81": {
      "name": "testCase_yui_3_5_0_1_1348872102202_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1636,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 811
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 809
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_82": {
      "name": "testCase_yui_3_5_0_1_1348872102202_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1841,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 927
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 908
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_83": {
      "name": "testCase_yui_3_5_0_1_1348872102202_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1868,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 927
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 915
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_84": {
      "name": "testCase_yui_3_5_0_1_1348872102202_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1926,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 949
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 950
      }
    },
    "testCase_yui_3_5_0_1_1348872102202_85": {
      "name": "testCase_yui_3_5_0_1_1348872102202_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1895,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 941
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 949
      }
    },
    "timestamp": "Friday, September 28, 2012 3:41:57 PM"
  },
  {
    "name": "Charts: VerticalComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7502,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872117671_78": {
      "name": "testCase_yui_3_5_0_1_1348872117671_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 488
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_79": {
      "name": "testCase_yui_3_5_0_1_1348872117671_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 349,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 325
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_80": {
      "name": "testCase_yui_3_5_0_1_1348872117671_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 431,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 406
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_81": {
      "name": "testCase_yui_3_5_0_1_1348872117671_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 326
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_82": {
      "name": "testCase_yui_3_5_0_1_1348872117671_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 345
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_83": {
      "name": "testCase_yui_3_5_0_1_1348872117671_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_84": {
      "name": "testCase_yui_3_5_0_1_1348872117671_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 359
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_85": {
      "name": "testCase_yui_3_5_0_1_1348872117671_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_86": {
      "name": "testCase_yui_3_5_0_1_1348872117671_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_87": {
      "name": "testCase_yui_3_5_0_1_1348872117671_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 350,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_88": {
      "name": "testCase_yui_3_5_0_1_1348872117671_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 472,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_89": {
      "name": "testCase_yui_3_5_0_1_1348872117671_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 378,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 352
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_90": {
      "name": "testCase_yui_3_5_0_1_1348872117671_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 479,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 464
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_91": {
      "name": "testCase_yui_3_5_0_1_1348872117671_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_92": {
      "name": "testCase_yui_3_5_0_1_1348872117671_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 512,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 498
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_93": {
      "name": "testCase_yui_3_5_0_1_1348872117671_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_94": {
      "name": "testCase_yui_3_5_0_1_1348872117671_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1348872117671_95": {
      "name": "testCase_yui_3_5_0_1_1348872117671_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 473
      }
    },
    "timestamp": "Friday, September 28, 2012 3:42:06 PM"
  },
  {
    "name": "Charts: VerticalComboGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 13641,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872126466_78": {
      "name": "testCase_yui_3_5_0_1_1348872126466_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1628,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 831
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 758
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_79": {
      "name": "testCase_yui_3_5_0_1_1348872126466_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1530,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 766
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 729
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_80": {
      "name": "testCase_yui_3_5_0_1_1348872126466_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1574,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 771
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 759
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_81": {
      "name": "testCase_yui_3_5_0_1_1348872126466_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1442,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 689
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 747
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_82": {
      "name": "testCase_yui_3_5_0_1_1348872126466_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1782,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 853
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 911
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_83": {
      "name": "testCase_yui_3_5_0_1_1348872126466_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1793,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 880
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 886
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_84": {
      "name": "testCase_yui_3_5_0_1_1348872126466_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1823,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 907
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 888
      }
    },
    "testCase_yui_3_5_0_1_1348872126466_85": {
      "name": "testCase_yui_3_5_0_1_1348872126466_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1978,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 877
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1075
      }
    },
    "timestamp": "Friday, September 28, 2012 3:42:20 PM"
  },
  {
    "name": "Charts: VerticalAreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7894,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872141287_78": {
      "name": "testCase_yui_3_5_0_1_1348872141287_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 508,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 493
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_79": {
      "name": "testCase_yui_3_5_0_1_1348872141287_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 367,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_80": {
      "name": "testCase_yui_3_5_0_1_1348872141287_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 409,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_81": {
      "name": "testCase_yui_3_5_0_1_1348872141287_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 416
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_82": {
      "name": "testCase_yui_3_5_0_1_1348872141287_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 396,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_83": {
      "name": "testCase_yui_3_5_0_1_1348872141287_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 428,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 424
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_84": {
      "name": "testCase_yui_3_5_0_1_1348872141287_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_85": {
      "name": "testCase_yui_3_5_0_1_1348872141287_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_86": {
      "name": "testCase_yui_3_5_0_1_1348872141287_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 469
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_87": {
      "name": "testCase_yui_3_5_0_1_1348872141287_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 372
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_88": {
      "name": "testCase_yui_3_5_0_1_1348872141287_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 506,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 490
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_89": {
      "name": "testCase_yui_3_5_0_1_1348872141287_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_90": {
      "name": "testCase_yui_3_5_0_1_1348872141287_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 525,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 512
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_91": {
      "name": "testCase_yui_3_5_0_1_1348872141287_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 390
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_92": {
      "name": "testCase_yui_3_5_0_1_1348872141287_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 396
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_93": {
      "name": "testCase_yui_3_5_0_1_1348872141287_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 483,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_94": {
      "name": "testCase_yui_3_5_0_1_1348872141287_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1348872141287_95": {
      "name": "testCase_yui_3_5_0_1_1348872141287_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 488,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 478
      }
    },
    "timestamp": "Friday, September 28, 2012 3:42:30 PM"
  },
  {
    "name": "Charts: VerticalAreaGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6666,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872150460_78": {
      "name": "testCase_yui_3_5_0_1_1348872150460_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_79": {
      "name": "testCase_yui_3_5_0_1_1348872150460_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 291,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 289
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_80": {
      "name": "testCase_yui_3_5_0_1_1348872150460_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 314
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_81": {
      "name": "testCase_yui_3_5_0_1_1348872150460_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_82": {
      "name": "testCase_yui_3_5_0_1_1348872150460_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 315
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_83": {
      "name": "testCase_yui_3_5_0_1_1348872150460_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 346
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_84": {
      "name": "testCase_yui_3_5_0_1_1348872150460_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 332,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 329
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_85": {
      "name": "testCase_yui_3_5_0_1_1348872150460_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 302,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 289
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_86": {
      "name": "testCase_yui_3_5_0_1_1348872150460_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_87": {
      "name": "testCase_yui_3_5_0_1_1348872150460_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 316
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_88": {
      "name": "testCase_yui_3_5_0_1_1348872150460_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 353,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_89": {
      "name": "testCase_yui_3_5_0_1_1348872150460_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 417
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_90": {
      "name": "testCase_yui_3_5_0_1_1348872150460_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 317
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_91": {
      "name": "testCase_yui_3_5_0_1_1348872150460_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_92": {
      "name": "testCase_yui_3_5_0_1_1348872150460_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 406
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_93": {
      "name": "testCase_yui_3_5_0_1_1348872150460_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 343
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_94": {
      "name": "testCase_yui_3_5_0_1_1348872150460_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 408
      }
    },
    "testCase_yui_3_5_0_1_1348872150460_95": {
      "name": "testCase_yui_3_5_0_1_1348872150460_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "timestamp": "Friday, September 28, 2012 3:42:38 PM"
  },
  {
    "name": "Charts: VerticalAreaGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 10642,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872158443_78": {
      "name": "testCase_yui_3_5_0_1_1348872158443_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1331,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 686
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 613
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_79": {
      "name": "testCase_yui_3_5_0_1_1348872158443_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1138,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 507
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 608
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_80": {
      "name": "testCase_yui_3_5_0_1_1348872158443_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1184,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 649
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 529
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_81": {
      "name": "testCase_yui_3_5_0_1_1348872158443_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1290,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 625
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 639
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_82": {
      "name": "testCase_yui_3_5_0_1_1348872158443_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1308,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 705
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 597
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_83": {
      "name": "testCase_yui_3_5_0_1_1348872158443_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1454,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 694
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 732
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_84": {
      "name": "testCase_yui_3_5_0_1_1348872158443_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1499,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 722
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 744
      }
    },
    "testCase_yui_3_5_0_1_1348872158443_85": {
      "name": "testCase_yui_3_5_0_1_1348872158443_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1351,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 624
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 707
      }
    },
    "timestamp": "Friday, September 28, 2012 3:42:49 PM"
  },
  {
    "name": "Charts: VerticalAreaDataProvider",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 9247,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 460,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 445
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 288,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 266
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 302,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 295
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 371
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 313,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 297
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 338,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 327
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 283,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 280
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 315,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 303
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 350
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 281,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 278
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 321
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 303
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "Missing Values Large Data DataProvider Tests": {
      "name": "Missing Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 329,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 326
      }
    },
    "Missing Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 317,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "Missing First Values Large Data DataProvider Tests": {
      "name": "Missing First Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 407
      }
    },
    "Missing First Values Large Data Stacked DataProvider Tests": {
      "name": "Missing First Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 312,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "Missing Last Values Large Data DataProvider Tests": {
      "name": "Missing Last Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 354,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 325
      }
    },
    "Missing Last Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Last Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "Split Trailing Series DataProvider DataProvider Tests": {
      "name": "Split Trailing Series DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 332
      }
    },
    "Split Trailing Series DataProvider Stacked DataProvider Tests": {
      "name": "Split Trailing Series DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "Two Series End Together DataProvider DataProvider Tests": {
      "name": "Two Series End Together DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 460,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "Two Series End Together DataProvider Stacked DataProvider Tests": {
      "name": "Two Series End Together DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 321
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:00 PM"
  },
  {
    "name": "Charts: StackedVerticalSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8018,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872180838_78": {
      "name": "testCase_yui_3_5_0_1_1348872180838_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 531,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 504
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_79": {
      "name": "testCase_yui_3_5_0_1_1348872180838_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_80": {
      "name": "testCase_yui_3_5_0_1_1348872180838_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 459,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_81": {
      "name": "testCase_yui_3_5_0_1_1348872180838_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 358
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_82": {
      "name": "testCase_yui_3_5_0_1_1348872180838_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 374
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_83": {
      "name": "testCase_yui_3_5_0_1_1348872180838_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_84": {
      "name": "testCase_yui_3_5_0_1_1348872180838_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 387
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_85": {
      "name": "testCase_yui_3_5_0_1_1348872180838_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 459
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_86": {
      "name": "testCase_yui_3_5_0_1_1348872180838_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 378
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_87": {
      "name": "testCase_yui_3_5_0_1_1348872180838_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 395
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_88": {
      "name": "testCase_yui_3_5_0_1_1348872180838_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 508
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_89": {
      "name": "testCase_yui_3_5_0_1_1348872180838_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_90": {
      "name": "testCase_yui_3_5_0_1_1348872180838_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 483
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_91": {
      "name": "testCase_yui_3_5_0_1_1348872180838_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 409,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 406
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_92": {
      "name": "testCase_yui_3_5_0_1_1348872180838_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 517,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 492
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_93": {
      "name": "testCase_yui_3_5_0_1_1348872180838_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 409,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_94": {
      "name": "testCase_yui_3_5_0_1_1348872180838_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 416
      }
    },
    "testCase_yui_3_5_0_1_1348872180838_95": {
      "name": "testCase_yui_3_5_0_1_1348872180838_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 513,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 491
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:09 PM"
  },
  {
    "name": "Charts: VerticalComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 11029,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872190095_78": {
      "name": "testCase_yui_3_5_0_1_1348872190095_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 671,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 656
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_79": {
      "name": "testCase_yui_3_5_0_1_1348872190095_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 500
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_80": {
      "name": "testCase_yui_3_5_0_1_1348872190095_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 606,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 578
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_81": {
      "name": "testCase_yui_3_5_0_1_1348872190095_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 572,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 563
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_82": {
      "name": "testCase_yui_3_5_0_1_1348872190095_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 553,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 549
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_83": {
      "name": "testCase_yui_3_5_0_1_1348872190095_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 587,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 576
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_84": {
      "name": "testCase_yui_3_5_0_1_1348872190095_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 524,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 521
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_85": {
      "name": "testCase_yui_3_5_0_1_1348872190095_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 652,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 620
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_86": {
      "name": "testCase_yui_3_5_0_1_1348872190095_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 510
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_87": {
      "name": "testCase_yui_3_5_0_1_1348872190095_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 668,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 666
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_88": {
      "name": "testCase_yui_3_5_0_1_1348872190095_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 573,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 566
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_89": {
      "name": "testCase_yui_3_5_0_1_1348872190095_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 675,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 672
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_90": {
      "name": "testCase_yui_3_5_0_1_1348872190095_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 632,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 623
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_91": {
      "name": "testCase_yui_3_5_0_1_1348872190095_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 579,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 557
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_92": {
      "name": "testCase_yui_3_5_0_1_1348872190095_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 694,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 682
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_93": {
      "name": "testCase_yui_3_5_0_1_1348872190095_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 572,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 569
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_94": {
      "name": "testCase_yui_3_5_0_1_1348872190095_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 662,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 652
      }
    },
    "testCase_yui_3_5_0_1_1348872190095_95": {
      "name": "testCase_yui_3_5_0_1_1348872190095_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 679,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 677
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:21 PM"
  },
  {
    "name": "Charts: VerticalComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7924,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872202393_78": {
      "name": "testCase_yui_3_5_0_1_1348872202393_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 665,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 640
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_79": {
      "name": "testCase_yui_3_5_0_1_1348872202393_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_80": {
      "name": "testCase_yui_3_5_0_1_1348872202393_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 450
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_81": {
      "name": "testCase_yui_3_5_0_1_1348872202393_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_82": {
      "name": "testCase_yui_3_5_0_1_1348872202393_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 458
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_83": {
      "name": "testCase_yui_3_5_0_1_1348872202393_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 368,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 366
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_84": {
      "name": "testCase_yui_3_5_0_1_1348872202393_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 374,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_85": {
      "name": "testCase_yui_3_5_0_1_1348872202393_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 429
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_86": {
      "name": "testCase_yui_3_5_0_1_1348872202393_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 354
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_87": {
      "name": "testCase_yui_3_5_0_1_1348872202393_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 455,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 440
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_88": {
      "name": "testCase_yui_3_5_0_1_1348872202393_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_89": {
      "name": "testCase_yui_3_5_0_1_1348872202393_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 490
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_90": {
      "name": "testCase_yui_3_5_0_1_1348872202393_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_91": {
      "name": "testCase_yui_3_5_0_1_1348872202393_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 387
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_92": {
      "name": "testCase_yui_3_5_0_1_1348872202393_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 532,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 529
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_93": {
      "name": "testCase_yui_3_5_0_1_1348872202393_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 377
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_94": {
      "name": "testCase_yui_3_5_0_1_1348872202393_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 491,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 468
      }
    },
    "testCase_yui_3_5_0_1_1348872202393_95": {
      "name": "testCase_yui_3_5_0_1_1348872202393_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 402
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:31 PM"
  },
  {
    "name": "Charts: StackedVerticalAreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8871,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872211630_78": {
      "name": "testCase_yui_3_5_0_1_1348872211630_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 588,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 572
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_79": {
      "name": "testCase_yui_3_5_0_1_1348872211630_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 397
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_80": {
      "name": "testCase_yui_3_5_0_1_1348872211630_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 472,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 470
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_81": {
      "name": "testCase_yui_3_5_0_1_1348872211630_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 413
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_82": {
      "name": "testCase_yui_3_5_0_1_1348872211630_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 496,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 485
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_83": {
      "name": "testCase_yui_3_5_0_1_1348872211630_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_84": {
      "name": "testCase_yui_3_5_0_1_1348872211630_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_85": {
      "name": "testCase_yui_3_5_0_1_1348872211630_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 534,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 531
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_86": {
      "name": "testCase_yui_3_5_0_1_1348872211630_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 398
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_87": {
      "name": "testCase_yui_3_5_0_1_1348872211630_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 547,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 533
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_88": {
      "name": "testCase_yui_3_5_0_1_1348872211630_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 437,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 435
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_89": {
      "name": "testCase_yui_3_5_0_1_1348872211630_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 540,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 526
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_90": {
      "name": "testCase_yui_3_5_0_1_1348872211630_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_91": {
      "name": "testCase_yui_3_5_0_1_1348872211630_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 562,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 559
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_92": {
      "name": "testCase_yui_3_5_0_1_1348872211630_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 450,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 431
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_93": {
      "name": "testCase_yui_3_5_0_1_1348872211630_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 535,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 533
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_94": {
      "name": "testCase_yui_3_5_0_1_1348872211630_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 441
      }
    },
    "testCase_yui_3_5_0_1_1348872211630_95": {
      "name": "testCase_yui_3_5_0_1_1348872211630_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 580,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 577
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:41 PM"
  },
  {
    "name": "Charts: StackedVerticalAreaGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6865,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872221805_78": {
      "name": "testCase_yui_3_5_0_1_1348872221805_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 433
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_79": {
      "name": "testCase_yui_3_5_0_1_1348872221805_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 311,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 291
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_80": {
      "name": "testCase_yui_3_5_0_1_1348872221805_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 306,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 304
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_81": {
      "name": "testCase_yui_3_5_0_1_1348872221805_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_82": {
      "name": "testCase_yui_3_5_0_1_1348872221805_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 323
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_83": {
      "name": "testCase_yui_3_5_0_1_1348872221805_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 297
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_84": {
      "name": "testCase_yui_3_5_0_1_1348872221805_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 431,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_85": {
      "name": "testCase_yui_3_5_0_1_1348872221805_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 318
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_86": {
      "name": "testCase_yui_3_5_0_1_1348872221805_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 312,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 292
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_87": {
      "name": "testCase_yui_3_5_0_1_1348872221805_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 460
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_88": {
      "name": "testCase_yui_3_5_0_1_1348872221805_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 321
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_89": {
      "name": "testCase_yui_3_5_0_1_1348872221805_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 433,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_90": {
      "name": "testCase_yui_3_5_0_1_1348872221805_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 331
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_91": {
      "name": "testCase_yui_3_5_0_1_1348872221805_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_92": {
      "name": "testCase_yui_3_5_0_1_1348872221805_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 421,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_93": {
      "name": "testCase_yui_3_5_0_1_1348872221805_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 346
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_94": {
      "name": "testCase_yui_3_5_0_1_1348872221805_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 456,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 432
      }
    },
    "testCase_yui_3_5_0_1_1348872221805_95": {
      "name": "testCase_yui_3_5_0_1_1348872221805_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 371,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 357
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:49 PM"
  },
  {
    "name": "Charts: StackedSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8055,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872229935_78": {
      "name": "testCase_yui_3_5_0_1_1348872229935_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 512,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 497
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_79": {
      "name": "testCase_yui_3_5_0_1_1348872229935_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 357
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_80": {
      "name": "testCase_yui_3_5_0_1_1348872229935_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 452
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_81": {
      "name": "testCase_yui_3_5_0_1_1348872229935_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 353
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_82": {
      "name": "testCase_yui_3_5_0_1_1348872229935_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 385,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_83": {
      "name": "testCase_yui_3_5_0_1_1348872229935_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_84": {
      "name": "testCase_yui_3_5_0_1_1348872229935_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_85": {
      "name": "testCase_yui_3_5_0_1_1348872229935_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 492,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_86": {
      "name": "testCase_yui_3_5_0_1_1348872229935_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_87": {
      "name": "testCase_yui_3_5_0_1_1348872229935_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 390,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 387
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_88": {
      "name": "testCase_yui_3_5_0_1_1348872229935_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 494,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_89": {
      "name": "testCase_yui_3_5_0_1_1348872229935_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_90": {
      "name": "testCase_yui_3_5_0_1_1348872229935_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 479
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_91": {
      "name": "testCase_yui_3_5_0_1_1348872229935_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_92": {
      "name": "testCase_yui_3_5_0_1_1348872229935_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 573,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 563
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_93": {
      "name": "testCase_yui_3_5_0_1_1348872229935_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_94": {
      "name": "testCase_yui_3_5_0_1_1348872229935_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 393
      }
    },
    "testCase_yui_3_5_0_1_1348872229935_95": {
      "name": "testCase_yui_3_5_0_1_1348872229935_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 538,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 536
      }
    },
    "timestamp": "Friday, September 28, 2012 3:43:58 PM"
  },
  {
    "name": "Charts: StackedComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 10804,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872239303_78": {
      "name": "testCase_yui_3_5_0_1_1348872239303_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 631,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 617
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_79": {
      "name": "testCase_yui_3_5_0_1_1348872239303_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 509,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 493
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_80": {
      "name": "testCase_yui_3_5_0_1_1348872239303_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 574,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 571
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_81": {
      "name": "testCase_yui_3_5_0_1_1348872239303_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 583,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 560
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_82": {
      "name": "testCase_yui_3_5_0_1_1348872239303_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 494
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_83": {
      "name": "testCase_yui_3_5_0_1_1348872239303_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 614,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 596
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_84": {
      "name": "testCase_yui_3_5_0_1_1348872239303_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 528,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 520
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_85": {
      "name": "testCase_yui_3_5_0_1_1348872239303_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 617,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 614
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_86": {
      "name": "testCase_yui_3_5_0_1_1348872239303_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 526,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 498
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_87": {
      "name": "testCase_yui_3_5_0_1_1348872239303_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 648,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 635
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_88": {
      "name": "testCase_yui_3_5_0_1_1348872239303_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 673,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 662
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_89": {
      "name": "testCase_yui_3_5_0_1_1348872239303_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 541,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 539
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_90": {
      "name": "testCase_yui_3_5_0_1_1348872239303_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 658,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 636
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_91": {
      "name": "testCase_yui_3_5_0_1_1348872239303_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 556,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 536
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_92": {
      "name": "testCase_yui_3_5_0_1_1348872239303_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 648,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 635
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_93": {
      "name": "testCase_yui_3_5_0_1_1348872239303_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 568,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 544
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_94": {
      "name": "testCase_yui_3_5_0_1_1348872239303_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 679,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 676
      }
    },
    "testCase_yui_3_5_0_1_1348872239303_95": {
      "name": "testCase_yui_3_5_0_1_1348872239303_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 645,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 607
      }
    },
    "timestamp": "Friday, September 28, 2012 3:44:11 PM"
  },
  {
    "name": "Charts: StackedComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7781,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872251423_78": {
      "name": "testCase_yui_3_5_0_1_1348872251423_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 481
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_79": {
      "name": "testCase_yui_3_5_0_1_1348872251423_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 338,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_80": {
      "name": "testCase_yui_3_5_0_1_1348872251423_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 513,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 476
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_81": {
      "name": "testCase_yui_3_5_0_1_1348872251423_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 329
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_82": {
      "name": "testCase_yui_3_5_0_1_1348872251423_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 357
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_83": {
      "name": "testCase_yui_3_5_0_1_1348872251423_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 455,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 443
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_84": {
      "name": "testCase_yui_3_5_0_1_1348872251423_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_85": {
      "name": "testCase_yui_3_5_0_1_1348872251423_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_86": {
      "name": "testCase_yui_3_5_0_1_1348872251423_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 377
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_87": {
      "name": "testCase_yui_3_5_0_1_1348872251423_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 484,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 472
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_88": {
      "name": "testCase_yui_3_5_0_1_1348872251423_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 417
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_89": {
      "name": "testCase_yui_3_5_0_1_1348872251423_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 374,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_90": {
      "name": "testCase_yui_3_5_0_1_1348872251423_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 526,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 516
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_91": {
      "name": "testCase_yui_3_5_0_1_1348872251423_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_92": {
      "name": "testCase_yui_3_5_0_1_1348872251423_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 499
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_93": {
      "name": "testCase_yui_3_5_0_1_1348872251423_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 374
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_94": {
      "name": "testCase_yui_3_5_0_1_1348872251423_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 521,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 514
      }
    },
    "testCase_yui_3_5_0_1_1348872251423_95": {
      "name": "testCase_yui_3_5_0_1_1348872251423_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 364
      }
    },
    "timestamp": "Friday, September 28, 2012 3:44:20 PM"
  },
  {
    "name": "Charts: StackedColumnGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7484,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872260538_78": {
      "name": "testCase_yui_3_5_0_1_1348872260538_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 500,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 463
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_79": {
      "name": "testCase_yui_3_5_0_1_1348872260538_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 347,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 330
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_80": {
      "name": "testCase_yui_3_5_0_1_1348872260538_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 348,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 345
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_81": {
      "name": "testCase_yui_3_5_0_1_1348872260538_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 456,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 426
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_82": {
      "name": "testCase_yui_3_5_0_1_1348872260538_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_83": {
      "name": "testCase_yui_3_5_0_1_1348872260538_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_84": {
      "name": "testCase_yui_3_5_0_1_1348872260538_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_85": {
      "name": "testCase_yui_3_5_0_1_1348872260538_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_86": {
      "name": "testCase_yui_3_5_0_1_1348872260538_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 466,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 448
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_87": {
      "name": "testCase_yui_3_5_0_1_1348872260538_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_88": {
      "name": "testCase_yui_3_5_0_1_1348872260538_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 454,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_89": {
      "name": "testCase_yui_3_5_0_1_1348872260538_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 374,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 372
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_90": {
      "name": "testCase_yui_3_5_0_1_1348872260538_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_91": {
      "name": "testCase_yui_3_5_0_1_1348872260538_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 518
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_92": {
      "name": "testCase_yui_3_5_0_1_1348872260538_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 371,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 351
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_93": {
      "name": "testCase_yui_3_5_0_1_1348872260538_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 483,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 481
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_94": {
      "name": "testCase_yui_3_5_0_1_1348872260538_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 356
      }
    },
    "testCase_yui_3_5_0_1_1348872260538_95": {
      "name": "testCase_yui_3_5_0_1_1348872260538_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 480,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 455
      }
    },
    "timestamp": "Friday, September 28, 2012 3:44:28 PM"
  },
  {
    "name": "Charts: StackedBarGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7479,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872269262_78": {
      "name": "testCase_yui_3_5_0_1_1348872269262_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 458
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_79": {
      "name": "testCase_yui_3_5_0_1_1348872269262_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 328
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_80": {
      "name": "testCase_yui_3_5_0_1_1348872269262_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 362
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_81": {
      "name": "testCase_yui_3_5_0_1_1348872269262_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_82": {
      "name": "testCase_yui_3_5_0_1_1348872269262_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_83": {
      "name": "testCase_yui_3_5_0_1_1348872269262_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 448,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 424
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_84": {
      "name": "testCase_yui_3_5_0_1_1348872269262_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_85": {
      "name": "testCase_yui_3_5_0_1_1348872269262_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 367,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_86": {
      "name": "testCase_yui_3_5_0_1_1348872269262_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_87": {
      "name": "testCase_yui_3_5_0_1_1348872269262_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_88": {
      "name": "testCase_yui_3_5_0_1_1348872269262_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 466
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_89": {
      "name": "testCase_yui_3_5_0_1_1348872269262_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 353
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_90": {
      "name": "testCase_yui_3_5_0_1_1348872269262_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 462,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 459
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_91": {
      "name": "testCase_yui_3_5_0_1_1348872269262_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 359
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_92": {
      "name": "testCase_yui_3_5_0_1_1348872269262_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_93": {
      "name": "testCase_yui_3_5_0_1_1348872269262_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 483,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 465
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_94": {
      "name": "testCase_yui_3_5_0_1_1348872269262_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "testCase_yui_3_5_0_1_1348872269262_95": {
      "name": "testCase_yui_3_5_0_1_1348872269262_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "timestamp": "Friday, September 28, 2012 3:44:37 PM"
  },
  {
    "name": "Charts: StackedAreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8710,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872278023_78": {
      "name": "testCase_yui_3_5_0_1_1348872278023_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 572,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 555
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_79": {
      "name": "testCase_yui_3_5_0_1_1348872278023_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 387
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_80": {
      "name": "testCase_yui_3_5_0_1_1348872278023_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 457,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 455
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_81": {
      "name": "testCase_yui_3_5_0_1_1348872278023_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_82": {
      "name": "testCase_yui_3_5_0_1_1348872278023_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 396,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_83": {
      "name": "testCase_yui_3_5_0_1_1348872278023_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 509,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 496
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_84": {
      "name": "testCase_yui_3_5_0_1_1348872278023_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 390
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_85": {
      "name": "testCase_yui_3_5_0_1_1348872278023_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 483,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_86": {
      "name": "testCase_yui_3_5_0_1_1348872278023_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_87": {
      "name": "testCase_yui_3_5_0_1_1348872278023_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 542,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_88": {
      "name": "testCase_yui_3_5_0_1_1348872278023_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_89": {
      "name": "testCase_yui_3_5_0_1_1348872278023_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 611,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 588
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_90": {
      "name": "testCase_yui_3_5_0_1_1348872278023_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 424
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_91": {
      "name": "testCase_yui_3_5_0_1_1348872278023_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 470
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_92": {
      "name": "testCase_yui_3_5_0_1_1348872278023_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 540,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 524
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_93": {
      "name": "testCase_yui_3_5_0_1_1348872278023_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 438,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_94": {
      "name": "testCase_yui_3_5_0_1_1348872278023_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 556,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 545
      }
    },
    "testCase_yui_3_5_0_1_1348872278023_95": {
      "name": "testCase_yui_3_5_0_1_1348872278023_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 433
      }
    },
    "timestamp": "Friday, September 28, 2012 3:44:47 PM"
  },
  {
    "name": "Charts: StackedAreaGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6606,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872288060_78": {
      "name": "testCase_yui_3_5_0_1_1348872288060_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_79": {
      "name": "testCase_yui_3_5_0_1_1348872288060_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 297,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 286
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_80": {
      "name": "testCase_yui_3_5_0_1_1348872288060_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 354
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_81": {
      "name": "testCase_yui_3_5_0_1_1348872288060_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 315,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 306
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_82": {
      "name": "testCase_yui_3_5_0_1_1348872288060_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 332,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 316
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_83": {
      "name": "testCase_yui_3_5_0_1_1348872288060_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 364
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_84": {
      "name": "testCase_yui_3_5_0_1_1348872288060_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 345,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 331
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_85": {
      "name": "testCase_yui_3_5_0_1_1348872288060_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 313
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_86": {
      "name": "testCase_yui_3_5_0_1_1348872288060_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 353
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_87": {
      "name": "testCase_yui_3_5_0_1_1348872288060_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_88": {
      "name": "testCase_yui_3_5_0_1_1348872288060_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_89": {
      "name": "testCase_yui_3_5_0_1_1348872288060_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 437
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_90": {
      "name": "testCase_yui_3_5_0_1_1348872288060_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 346
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_91": {
      "name": "testCase_yui_3_5_0_1_1348872288060_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 397
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_92": {
      "name": "testCase_yui_3_5_0_1_1348872288060_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 351
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_93": {
      "name": "testCase_yui_3_5_0_1_1348872288060_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 327,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 325
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_94": {
      "name": "testCase_yui_3_5_0_1_1348872288060_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 449,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "testCase_yui_3_5_0_1_1348872288060_95": {
      "name": "testCase_yui_3_5_0_1_1348872288060_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 322,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "timestamp": "Friday, September 28, 2012 3:44:55 PM"
  },
  {
    "name": "Charts: SplineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 11167,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 631,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 611
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 678,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 666
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 633,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 620
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 684,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 668
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 721,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 699
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 629,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 621
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 742,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 726
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 745,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 729
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 740,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 723
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 701,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 687
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 808,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 797
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 695,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 692
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 628,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 618
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2031,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2027
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:08 PM"
  },
  {
    "name": "Charts: SplineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7751,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 497
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 533,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 514
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 544,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 511
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 449,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 436
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 487
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 440
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 528,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 500
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 454
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 563,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 560
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 441
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1390
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:17 PM"
  },
  {
    "name": "Charts: SplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7919,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872317580_78": {
      "name": "testCase_yui_3_5_0_1_1348872317580_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 526,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 511
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_79": {
      "name": "testCase_yui_3_5_0_1_1348872317580_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_80": {
      "name": "testCase_yui_3_5_0_1_1348872317580_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 455
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_81": {
      "name": "testCase_yui_3_5_0_1_1348872317580_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 350
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_82": {
      "name": "testCase_yui_3_5_0_1_1348872317580_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_83": {
      "name": "testCase_yui_3_5_0_1_1348872317580_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 466,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 452
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_84": {
      "name": "testCase_yui_3_5_0_1_1348872317580_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_85": {
      "name": "testCase_yui_3_5_0_1_1348872317580_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 465
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_86": {
      "name": "testCase_yui_3_5_0_1_1348872317580_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 341
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_87": {
      "name": "testCase_yui_3_5_0_1_1348872317580_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 396,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 385
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_88": {
      "name": "testCase_yui_3_5_0_1_1348872317580_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 458
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_89": {
      "name": "testCase_yui_3_5_0_1_1348872317580_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_90": {
      "name": "testCase_yui_3_5_0_1_1348872317580_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 506,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 490
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_91": {
      "name": "testCase_yui_3_5_0_1_1348872317580_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_92": {
      "name": "testCase_yui_3_5_0_1_1348872317580_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_93": {
      "name": "testCase_yui_3_5_0_1_1348872317580_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 472,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 461
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_94": {
      "name": "testCase_yui_3_5_0_1_1348872317580_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 407
      }
    },
    "testCase_yui_3_5_0_1_1348872317580_95": {
      "name": "testCase_yui_3_5_0_1_1348872317580_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 508,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 484
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:26 PM"
  },
  {
    "name": "Charts: Series Marker",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 8676,
    "type": "report",
    "Event 'mouseover' Tests": {
      "name": "Event 'mouseover' Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 458,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:36 PM"
  },
  {
    "name": "Charts: Series Planar",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6625,
    "type": "report",
    "Event 'mousemove' Tests": {
      "name": "testCase_yui_3_5_0_1_1348872336781_97",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 403,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:44 PM"
  },
  {
    "name": "Charts: PieLegend",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 17,
    "duration": 3987,
    "type": "report",
    "Pie No Legend Tests": {
      "name": "Pie No Legend Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 183,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 169
      }
    },
    "Top Legend Test": {
      "name": "Top Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 308
      }
    },
    "Pie Right Legend Test": {
      "name": "Pie Right Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 187,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 184
      }
    },
    "Pie Bottom Legend Test": {
      "name": "Pie Bottom Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 206,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 191
      }
    },
    "Pie Left Legend Test": {
      "name": "Pie Left Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 208,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 205
      }
    },
    "Pie Top Legend Position Test": {
      "name": "Pie Top Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 197,
      "type": "testcase",
      "testLegendPosition": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegendPosition",
        "duration": 194
      }
    },
    "Pie Right Legend Position Test": {
      "name": "Pie Right Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 187,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 184
      }
    },
    "Pie Bottom Legend Position Test": {
      "name": "Pie Bottom Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 308
      }
    },
    "Pie Left Legend Position Test": {
      "name": "Pie Left Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 200,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 197
      }
    },
    "Pie Top Legend Items Length Test": {
      "name": "Pie Top Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 226,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 201
      }
    },
    "Pie Right Legend Items Length Test": {
      "name": "Pie Right Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 203,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 185
      }
    },
    "Pie Bottom Legend Items Length Test": {
      "name": "Pie Bottom Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 223,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 210
      }
    },
    "Pie Left Legend Items Length Test": {
      "name": "Pie Left Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 224,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 199
      }
    },
    "Pie Top Legend Items Text Test": {
      "name": "Pie Top Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 354
      }
    },
    "Pie Right Legend Items Text Test": {
      "name": "Pie Right Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 213,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 199
      }
    },
    "Pie Bottom Legend Items Text Test": {
      "name": "Pie Bottom Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 221,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 207
      }
    },
    "Pie Left Legend Items Text Test": {
      "name": "Pie Left Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 193,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 190
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:49 PM"
  },
  {
    "name": "Charts: Pie",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 770,
    "type": "report",
    "PieChartCenterTest": {
      "name": "PieChartCenterTest",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 693,
      "type": "testcase",
      "testWidthAndHeightEqual": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidthAndHeightEqual",
        "duration": 150
      },
      "testWidthGreaterThanHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidthGreaterThanHeight",
        "duration": 232
      },
      "testHeightGreaterThanWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeightGreaterThanWidth",
        "duration": 128
      },
      "testUpdateDataProvider": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUpdateDataProvider",
        "duration": 135
      }
    },
    "timestamp": "Friday, September 28, 2012 3:45:51 PM"
  },
  {
    "name": "Charts: NumericAxis",
    "passed": 22,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 22,
    "duration": 7866,
    "type": "report",
    "Axes All Positive Data Test": {
      "name": "Axes All Positive Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 409
      }
    },
    "Axes Positive and Negative Data Test": {
      "name": "Axes Positive and Negative Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 309
      }
    },
    "Axes All Negative Data Test": {
      "name": "Axes All Negative Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 339
      }
    },
    "Axes All Negative Data Near Zero Test": {
      "name": "Axes All Negative Data Near Zero Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 398
      }
    },
    "Axes All Positive Data, alwaysShowZero=false Test": {
      "name": "Axes All Positive Data, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 346
      }
    },
    "Axes Positive and Negative Data, alwaysShowZero=false Test": {
      "name": "Axes Positive and Negative Data, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 372
      }
    },
    "Axes All Negative Data, alwaysShowZero=false Test": {
      "name": "Axes All Negative Data, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 334
      }
    },
    "Axes All Negative Data Near Zero, alwaysShowZero=false Test": {
      "name": "Axes All Negative Data Near Zero, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 314
      }
    },
    "Axes All Positive Data with Numeric roundingMethod Test": {
      "name": "Axes All Positive Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 465
      }
    },
    "Axes Positive and Negative Data with Numeric roundingMethod Test": {
      "name": "Axes Positive and Negative Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 320
      }
    },
    "Axes All Negative Data with Numeric roundingMethod Test": {
      "name": "Axes All Negative Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 322
      }
    },
    "Axes Positive and Negative Data with Auto roundingMethod Test": {
      "name": "Axes Positive and Negative Data with Auto roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 309
      }
    },
    "Axes Positive and Negative Decimal Data with Numeric roundingMethod Test": {
      "name": "Axes Positive and Negative Decimal Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 421,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 401
      }
    },
    "Axes All Positive Data with Auto roundingMethod alwaysShowZero=false Test": {
      "name": "Axes All Positive Data with Auto roundingMethod alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 359
      }
    },
    "Axes Positive and Negative Data with Auto roundingMethod alwaysShowZero=false Test": {
      "name": "Axes Positive and Negative Data with Auto roundingMethod alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 392
      }
    },
    "Axes All Negative Data with Auto roundingMethod alwaysShowZero=false Test": {
      "name": "Axes All Negative Data with Auto roundingMethod alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 331
      }
    },
    "Axes All Positive Data with Numeric roundingMethod and alwaysShowZero=false Test": {
      "name": "Axes All Positive Data with Numeric roundingMethod and alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 329,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 325
      }
    },
    "Axes All Negative Data with Numeric roundingMethod and alwaysShowZero=false Test": {
      "name": "Axes All Negative Data with Numeric roundingMethod and alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 438,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 422
      }
    },
    "No Data": {
      "name": "No Data",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 131,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 119
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:00 PM"
  },
  {
    "name": "Charts: NumericAxisMin",
    "passed": 31,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 31,
    "duration": 11584,
    "type": "report",
    "Axes Min Test": {
      "name": "Axes Min Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 464,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 444
      }
    },
    "Axes Negative Min Test": {
      "name": "Axes Negative Min Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 344
      }
    },
    "Axes Negative Min with All Negative Data and alwaysShowZero=false Test": {
      "name": "Axes Negative Min with All Negative Data and alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 317,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 315
      }
    },
    "Axes Negative Min with All Negative Data Test": {
      "name": "Axes Negative Min with All Negative Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 335
      }
    },
    "Axes Min with Decimals Test": {
      "name": "Axes Min with Decimals Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 395
      }
    },
    "Axes Integer Min with Decimal Data Test": {
      "name": "Axes Integer Min with Decimal Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 330
      }
    },
    "Axes Negative Min with Positive Data Test": {
      "name": "Axes Negative Min with Positive Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 343,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 315
      }
    },
    "Axes Min Test with roundingMethod=auto": {
      "name": "Axes Min Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 321,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 310
      }
    },
    "Axes Negative Min Test with roundingMethod=auto": {
      "name": "Axes Negative Min Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 408
      }
    },
    "Axes Negative Min with All Negative Data Test with roundingMethod=auto": {
      "name": "Axes Negative Min with All Negative Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 334,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 315
      }
    },
    "Axes Min with Decimals Test with roundingMethod=auto": {
      "name": "Axes Min with Decimals Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 321
      }
    },
    "Axes Integer Min with Decimal Data Test with roundingMethod=auto": {
      "name": "Axes Integer Min with Decimal Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 388
      }
    },
    "Axes Negative Min with Positive Data Test with roundingMethod=auto": {
      "name": "Axes Negative Min with Positive Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 328,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 326
      }
    },
    "Axes Min Test with roundingMethod=null": {
      "name": "Axes Min Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 431
      }
    },
    "Axes Negative Min Test with roundingMethod=null": {
      "name": "Axes Negative Min Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 311
      }
    },
    "Axes Negative Min with All Negative Data Test with roundingMethod=null": {
      "name": "Axes Negative Min with All Negative Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 433,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 431
      }
    },
    "Axes Min with Decimals Test with roundingMethod=null": {
      "name": "Axes Min with Decimals Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 306,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 303
      }
    },
    "Axes Integer Min with Decimal Data Test with roundingMethod=null": {
      "name": "Axes Integer Min with Decimal Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 354,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 339
      }
    },
    "Axes Negative Min with Positive Data Test with roundingMethod=null": {
      "name": "Axes Negative Min with Positive Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 390
      }
    },
    "Axes Min Test with roundingMethod=1000": {
      "name": "Axes Min Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 304
      }
    },
    "Axes Negative Min Test with roundingMethod=1000": {
      "name": "Axes Negative Min Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 456
      }
    },
    "Axes Negative Min with All Negative Data Test with roundingMethod=1000": {
      "name": "Axes Negative Min with All Negative Data Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 312
      }
    },
    "Axes Min with Decimals Test with roundingMethod=2": {
      "name": "Axes Min with Decimals Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 345,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 331
      }
    },
    "Axes Integer Min with Decimal Data Test with roundingMethod=2": {
      "name": "Axes Integer Min with Decimal Data Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 410
      }
    },
    "Axes Negative Min with Positive Data Test with roundingMethod=1000": {
      "name": "Axes Negative Min with Positive Data Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 337,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 334
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:13 PM"
  },
  {
    "name": "Charts: NumericAxisMinAndMax",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 2414,
    "type": "report",
    "Axes Min and Max Test": {
      "name": "Axes Min and Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 533,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 514
      }
    },
    "Axes Negative Min and Positive Max Test": {
      "name": "Axes Negative Min and Positive Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 316
      }
    },
    "Axes Negative Min an Max Test": {
      "name": "Axes Negative Min an Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 428,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 426
      }
    },
    "Axes Min and Max with Decimals Test": {
      "name": "Axes Min and Max with Decimals Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 317,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 314
      }
    },
    "Axis alwaysShowZero Test": {
      "name": "Axis alwaysShowZero Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testAlwaysShowZero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZero",
        "duration": 319
      }
    },
    "Axis alwaysShowZero = false Test": {
      "name": "Axis alwaysShowZero = false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testAlwaysShowZeroEqualsFalse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZeroEqualsFalse",
        "duration": 383
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:17 PM"
  },
  {
    "name": "Charts: NumericAxisMax",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 9122,
    "type": "report",
    "Axes Max Test": {
      "name": "Axes Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 344
      }
    },
    "Axes Max Test with alwaysShowZero as false": {
      "name": "Axes Max Test with alwaysShowZero as false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 314
      }
    },
    "Axes Negative Max Test": {
      "name": "Axes Negative Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 436,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 434
      }
    },
    "Axes Max with Decimals Test": {
      "name": "Axes Max with Decimals Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 323
      }
    },
    "Axes Integer Max with Decimal Data Test": {
      "name": "Axes Integer Max with Decimal Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 350
      }
    },
    "Axes Max Test with roundingMethod=auto": {
      "name": "Axes Max Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 436,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 424
      }
    },
    "Axes Negative Max Test with roundingMethod=auto": {
      "name": "Axes Negative Max Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 421,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 399
      }
    },
    "Axes Max with Decimals Test with roundingMethod=auto": {
      "name": "Axes Max with Decimals Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 354
      }
    },
    "Axes Integer Max with Decimal Data Test with roundingMethod=auto": {
      "name": "Axes Integer Max with Decimal Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 321
      }
    },
    "Axes Max Test with roundingMethod=null": {
      "name": "Axes Max Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 391
      }
    },
    "Axes Negative Max Test with roundingMethod=null": {
      "name": "Axes Negative Max Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 348,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 334
      }
    },
    "Axes Max with Decimals Test with roundingMethod=null": {
      "name": "Axes Max with Decimals Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 409,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 394
      }
    },
    "Axes Integer Max with Decimal Data Test with roundingMethod=null": {
      "name": "Axes Integer Max with Decimal Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 330
      }
    },
    "Axes Max Test with roundingMethod=1000": {
      "name": "Axes Max Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 328,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 325
      }
    },
    "Axes Negative Max Test with roundingMethod=1000": {
      "name": "Axes Negative Max Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 309,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 307
      }
    },
    "Axes Max with Decimals Test with roundingMethod=2": {
      "name": "Axes Max with Decimals Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 426
      }
    },
    "Axes Integer Max with Decimal Data Test with roundingMethod=2": {
      "name": "Axes Integer Max with Decimal Data Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 309
      }
    },
    "Axes Max with Positive and Negative Data Test with roundingMethod=1000": {
      "name": "Axes Max with Positive and Negative Data Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 334,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 332
      }
    },
    "Axes Max Test with Positive and Negative values and alwaysShowZero=false": {
      "name": "Axes Max Test with Positive and Negative values and alwaysShowZero=false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 329
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:27 PM"
  },
  {
    "name": "Charts: LineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 10354,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 576,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 560
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 634,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 627
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 587,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 584
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 665,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 640
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 698,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 675
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 579,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 567
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 689,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 684
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 679,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 653
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 603,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 586
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 670,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 659
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 681,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 678
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 613,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 589
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 726,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 723
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1852,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1831
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:39 PM"
  },
  {
    "name": "Charts: LineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 6574,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 490,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 452
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 464
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 350
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 419,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 421,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 461
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 392
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 462,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 933,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 917
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:47 PM"
  },
  {
    "name": "Charts: LineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 10517,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872407485_78": {
      "name": "testCase_yui_3_5_0_1_1348872407485_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1270,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 664
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 581
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_79": {
      "name": "testCase_yui_3_5_0_1_1348872407485_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1102,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 501
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 596
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_80": {
      "name": "testCase_yui_3_5_0_1_1348872407485_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1157,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 614
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 517
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_81": {
      "name": "testCase_yui_3_5_0_1_1348872407485_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1260,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 616
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 638
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_82": {
      "name": "testCase_yui_3_5_0_1_1348872407485_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1376,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 608
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 738
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_83": {
      "name": "testCase_yui_3_5_0_1_1348872407485_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1418,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 692
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 685
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_84": {
      "name": "testCase_yui_3_5_0_1_1348872407485_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1385,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 631
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 722
      }
    },
    "testCase_yui_3_5_0_1_1348872407485_85": {
      "name": "testCase_yui_3_5_0_1_1348872407485_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1458,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 719
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 734
      }
    },
    "timestamp": "Friday, September 28, 2012 3:46:58 PM"
  },
  {
    "name": "Charts: Legend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7360,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 504,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 493
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 397
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 548,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 535
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 387
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 515,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 498
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 425,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 421
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 483,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 468
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 448,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 443
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 508,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 493
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 454,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 452
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 464
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 446,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 432
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1198,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1180
      }
    },
    "timestamp": "Friday, September 28, 2012 3:47:07 PM"
  },
  {
    "name": "Charts: GroupMarker",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 2495,
    "type": "report",
    "Group Marker Test": {
      "name": "Group Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 421
      }
    },
    "Circle Marker Test": {
      "name": "Circle Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 281,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 278
      }
    },
    "Rect Marker Test": {
      "name": "Rect Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 302
      }
    },
    "Diamond Marker Test": {
      "name": "Diamond Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 377
      }
    },
    "Ellipse Marker Test": {
      "name": "Ellipse Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 302
      }
    },
    "Column Marker Test": {
      "name": "Column Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 291,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 288
      }
    },
    "Bar Marker Test": {
      "name": "Bar Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 360
      }
    },
    "timestamp": "Friday, September 28, 2012 3:47:11 PM"
  },
  {
    "name": "Charts: Graph",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 6788,
    "type": "report",
    "Graph Tests": {
      "name": "Graph Tests",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 6713,
      "type": "testcase",
      "test:graph._getSeries(line)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(line)",
        "duration": 393
      },
      "test:graph._getSeries(column)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(column)",
        "duration": 281
      },
      "test:graph._getSeries(bar)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(bar)",
        "duration": 295
      },
      "test:graph._getSeries(area)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(area)",
        "duration": 407
      },
      "test:graph._getSeries(stackedarea)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedarea)",
        "duration": 284
      },
      "test:graph._getSeries(stackedcolumn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedcolumn)",
        "duration": 296
      },
      "test:graph._getSeries(stackedbar)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedbar)",
        "duration": 371
      },
      "test:graph._getSeries(stackedline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedline)",
        "duration": 303
      },
      "test:graph._getSeries(markerseries)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(markerseries)",
        "duration": 278
      },
      "test:graph._getSeries(stackedmarkerseries)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedmarkerseries)",
        "duration": 374
      },
      "test:graph._getSeries(spline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(spline)",
        "duration": 280
      },
      "test:graph._getSeries(areaspline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(areaspline)",
        "duration": 289
      },
      "test:graph._getSeries(stackedspline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedspline)",
        "duration": 369
      },
      "test:graph._getSeries(stackedareapline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedareapline)",
        "duration": 296
      },
      "test:graph._getSeries(pie)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(pie)",
        "duration": 280
      },
      "test:graph._getSeries(combo)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(combo)",
        "duration": 377
      },
      "test:graph._getSeries(stackedcombo)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedcombo)",
        "duration": 311
      },
      "test:graph._getSeries(combospline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(combospline)",
        "duration": 280
      },
      "test:graph._getSeries(stackedcombospline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedcombospline)",
        "duration": 378
      },
      "test:graph._getSeries(customclass)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(customclass)",
        "duration": 280
      }
    },
    "timestamp": "Friday, September 28, 2012 3:47:19 PM"
  },
  {
    "name": "Charts: DataProvider",
    "passed": 19,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 19,
    "duration": 7300,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 307,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 304
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 437,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 397
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 312
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 313
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 332,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 353,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 350
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 311
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 416
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 458,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 436
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 362
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 319
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "timestamp": "Friday, September 28, 2012 3:47:27 PM"
  },
  {
    "name": "Charts: ComboTooltip",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 1821,
    "type": "report",
    "Event 'mousedown' Tests": {
      "name": "Event 'mousedown' Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 920,
      "type": "testcase",
      "testTooltipProps": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTooltipProps",
        "duration": 436
      },
      "testEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEvent",
        "duration": 436
      }
    },
    "Event 'mouseover' Tests": {
      "name": "Event 'mouseover' Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 821,
      "type": "testcase",
      "testTooltipProps": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTooltipProps",
        "duration": 289
      },
      "testEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEvent",
        "duration": 450
      }
    },
    "timestamp": "Friday, September 28, 2012 3:47:30 PM"
  },
  {
    "name": "Charts: ComboSplineShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 28559,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872451117_78": {
      "name": "testCase_yui_3_5_0_1_1348872451117_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3040,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1515
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1480
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_79": {
      "name": "testCase_yui_3_5_0_1_1348872451117_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2869,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1471
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1381
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_80": {
      "name": "testCase_yui_3_5_0_1_1348872451117_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3421,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1762
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1654
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_81": {
      "name": "testCase_yui_3_5_0_1_1348872451117_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3523,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1749
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1759
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_82": {
      "name": "testCase_yui_3_5_0_1_1348872451117_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3504,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1688
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1811
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_83": {
      "name": "testCase_yui_3_5_0_1_1348872451117_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3575,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1746
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1793
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_84": {
      "name": "testCase_yui_3_5_0_1_1348872451117_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4248,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2087
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2134
      }
    },
    "testCase_yui_3_5_0_1_1348872451117_85": {
      "name": "testCase_yui_3_5_0_1_1348872451117_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4291,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2166
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2121
      }
    },
    "timestamp": "Friday, September 28, 2012 3:48:00 PM"
  },
  {
    "name": "Charts: ComboSplineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 14251,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 741,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 725
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 829,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 816
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 893,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 889
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 867,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 843
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 887,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 875
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 846,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 843
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 862,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 850
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 878,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 873
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 803,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 800
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 898,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 884
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 918,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 905
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 871,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 868
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 969,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 944
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2887,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2883
      }
    },
    "timestamp": "Friday, September 28, 2012 3:48:16 PM"
  },
  {
    "name": "Charts: AreaSplineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7926,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 545,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 529
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 547,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 524
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 534
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 482,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 479
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 471,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 490,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 487
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 525,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 500
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 448
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1556,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1536
      }
    },
    "timestamp": "Friday, September 28, 2012 3:48:25 PM"
  },
  {
    "name": "Charts: ComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8676,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872505788_78": {
      "name": "testCase_yui_3_5_0_1_1348872505788_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 568,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 534
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_79": {
      "name": "testCase_yui_3_5_0_1_1348872505788_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_80": {
      "name": "testCase_yui_3_5_0_1_1348872505788_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 488,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 476
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_81": {
      "name": "testCase_yui_3_5_0_1_1348872505788_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 388,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 385
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_82": {
      "name": "testCase_yui_3_5_0_1_1348872505788_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 530,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 500
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_83": {
      "name": "testCase_yui_3_5_0_1_1348872505788_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 401
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_84": {
      "name": "testCase_yui_3_5_0_1_1348872505788_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 521,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 421
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_85": {
      "name": "testCase_yui_3_5_0_1_1348872505788_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_86": {
      "name": "testCase_yui_3_5_0_1_1348872505788_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 387,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_87": {
      "name": "testCase_yui_3_5_0_1_1348872505788_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 533,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 531
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_88": {
      "name": "testCase_yui_3_5_0_1_1348872505788_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_89": {
      "name": "testCase_yui_3_5_0_1_1348872505788_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 554,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 551
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_90": {
      "name": "testCase_yui_3_5_0_1_1348872505788_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 425,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_91": {
      "name": "testCase_yui_3_5_0_1_1348872505788_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 531,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 515
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_92": {
      "name": "testCase_yui_3_5_0_1_1348872505788_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 450
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_93": {
      "name": "testCase_yui_3_5_0_1_1348872505788_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 528,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 520
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_94": {
      "name": "testCase_yui_3_5_0_1_1348872505788_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 446,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 435
      }
    },
    "testCase_yui_3_5_0_1_1348872505788_95": {
      "name": "testCase_yui_3_5_0_1_1348872505788_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 516,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 512
      }
    },
    "timestamp": "Friday, September 28, 2012 3:48:35 PM"
  },
  {
    "name": "Charts: ComboSplineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 19603,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872515695_78": {
      "name": "testCase_yui_3_5_0_1_1348872515695_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2188,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1091
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1075
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_79": {
      "name": "testCase_yui_3_5_0_1_1348872515695_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2201,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1084
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1092
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_80": {
      "name": "testCase_yui_3_5_0_1_1348872515695_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2228,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1077
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1122
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_81": {
      "name": "testCase_yui_3_5_0_1_1348872515695_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2216,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1070
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1110
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_82": {
      "name": "testCase_yui_3_5_0_1_1348872515695_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2700,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1333
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1361
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_83": {
      "name": "testCase_yui_3_5_0_1_1348872515695_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2597,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1241
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1329
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_84": {
      "name": "testCase_yui_3_5_0_1_1348872515695_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2676,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1309
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1339
      }
    },
    "testCase_yui_3_5_0_1_1348872515695_85": {
      "name": "testCase_yui_3_5_0_1_1348872515695_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2707,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1367
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1333
      }
    },
    "timestamp": "Friday, September 28, 2012 3:48:56 PM"
  },
  {
    "name": "Charts: ComboShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 14688,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872536626_78": {
      "name": "testCase_yui_3_5_0_1_1348872536626_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1657,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 823
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 805
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_79": {
      "name": "testCase_yui_3_5_0_1_1348872536626_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1640,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 793
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 818
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_80": {
      "name": "testCase_yui_3_5_0_1_1348872536626_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1698,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 849
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 814
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_81": {
      "name": "testCase_yui_3_5_0_1_1348872536626_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1701,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 821
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 849
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_82": {
      "name": "testCase_yui_3_5_0_1_1348872536626_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1861,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 937
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 918
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_83": {
      "name": "testCase_yui_3_5_0_1_1348872536626_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2224,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1098
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1088
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_84": {
      "name": "testCase_yui_3_5_0_1_1348872536626_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1911,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 937
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 954
      }
    },
    "testCase_yui_3_5_0_1_1348872536626_85": {
      "name": "testCase_yui_3_5_0_1_1348872536626_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1892,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 954
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 933
      }
    },
    "timestamp": "Friday, September 28, 2012 3:49:12 PM"
  },
  {
    "name": "Charts: ComboLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 13524,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 727,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 711
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 847,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 830
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 836,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 821
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 836,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 813
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 843,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 830
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 809,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 785
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 750,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 747
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 836,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 811
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 886,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 863
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 814,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 799
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 855,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 852
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 847,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 836
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 876,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 860
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2661,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2658
      }
    },
    "timestamp": "Friday, September 28, 2012 3:49:27 PM"
  },
  {
    "name": "Charts: ComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7587,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872567553_78": {
      "name": "testCase_yui_3_5_0_1_1348872567553_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 524,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 490
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_79": {
      "name": "testCase_yui_3_5_0_1_1348872567553_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 337,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 317
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_80": {
      "name": "testCase_yui_3_5_0_1_1348872567553_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 423
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_81": {
      "name": "testCase_yui_3_5_0_1_1348872567553_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 329,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 323
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_82": {
      "name": "testCase_yui_3_5_0_1_1348872567553_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 362
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_83": {
      "name": "testCase_yui_3_5_0_1_1348872567553_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 443
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_84": {
      "name": "testCase_yui_3_5_0_1_1348872567553_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 332
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_85": {
      "name": "testCase_yui_3_5_0_1_1348872567553_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_86": {
      "name": "testCase_yui_3_5_0_1_1348872567553_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 327
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_87": {
      "name": "testCase_yui_3_5_0_1_1348872567553_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 378,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_88": {
      "name": "testCase_yui_3_5_0_1_1348872567553_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_89": {
      "name": "testCase_yui_3_5_0_1_1348872567553_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_90": {
      "name": "testCase_yui_3_5_0_1_1348872567553_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 469,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 446
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_91": {
      "name": "testCase_yui_3_5_0_1_1348872567553_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_92": {
      "name": "testCase_yui_3_5_0_1_1348872567553_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 549,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 537
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_93": {
      "name": "testCase_yui_3_5_0_1_1348872567553_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 355
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_94": {
      "name": "testCase_yui_3_5_0_1_1348872567553_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1348872567553_95": {
      "name": "testCase_yui_3_5_0_1_1348872567553_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "timestamp": "Friday, September 28, 2012 3:49:36 PM"
  },
  {
    "name": "Charts: ComboGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 13597,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872576445_78": {
      "name": "testCase_yui_3_5_0_1_1348872576445_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1645,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 828
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 769
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_79": {
      "name": "testCase_yui_3_5_0_1_1348872576445_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1538,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 743
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 765
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_80": {
      "name": "testCase_yui_3_5_0_1_1348872576445_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1484,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 769
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 688
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_81": {
      "name": "testCase_yui_3_5_0_1_1348872576445_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1618,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 815
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 783
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_82": {
      "name": "testCase_yui_3_5_0_1_1348872576445_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1766,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 873
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 867
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_83": {
      "name": "testCase_yui_3_5_0_1_1348872576445_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1786,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 874
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 880
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_84": {
      "name": "testCase_yui_3_5_0_1_1348872576445_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1851,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 892
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 930
      }
    },
    "testCase_yui_3_5_0_1_1348872576445_85": {
      "name": "testCase_yui_3_5_0_1_1348872576445_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1818,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 905
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 878
      }
    },
    "timestamp": "Friday, September 28, 2012 3:49:50 PM"
  },
  {
    "name": "Charts: ColumnLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 12928,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 839,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 826
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 806,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 797
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 833,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 818
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 778,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 764
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 772,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 768
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 818,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 788
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 743,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 727
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 793,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 790
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 839,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 814
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 814,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 811
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 832,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 819
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 814,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 803
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 810,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 805
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2311
      }
    },
    "timestamp": "Friday, September 28, 2012 3:50:05 PM"
  },
  {
    "name": "Charts: ColumnLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7099,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 331
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 538,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 534
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 387,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 558,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 545
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 499,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 496
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 486,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 481
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 402
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 426
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 500,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 474
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 437,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 434
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1099,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1080
      }
    },
    "timestamp": "Friday, September 28, 2012 3:50:14 PM"
  },
  {
    "name": "Charts: ColumnGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7331,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872614361_78": {
      "name": "testCase_yui_3_5_0_1_1348872614361_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 460,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_79": {
      "name": "testCase_yui_3_5_0_1_1348872614361_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 315
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_80": {
      "name": "testCase_yui_3_5_0_1_1348872614361_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 517,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 506
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_81": {
      "name": "testCase_yui_3_5_0_1_1348872614361_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 315
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_82": {
      "name": "testCase_yui_3_5_0_1_1348872614361_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 323
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_83": {
      "name": "testCase_yui_3_5_0_1_1348872614361_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 414,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_84": {
      "name": "testCase_yui_3_5_0_1_1348872614361_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_85": {
      "name": "testCase_yui_3_5_0_1_1348872614361_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 447
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_86": {
      "name": "testCase_yui_3_5_0_1_1348872614361_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 334,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 332
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_87": {
      "name": "testCase_yui_3_5_0_1_1348872614361_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 345
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_88": {
      "name": "testCase_yui_3_5_0_1_1348872614361_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 461
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_89": {
      "name": "testCase_yui_3_5_0_1_1348872614361_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_90": {
      "name": "testCase_yui_3_5_0_1_1348872614361_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_91": {
      "name": "testCase_yui_3_5_0_1_1348872614361_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_92": {
      "name": "testCase_yui_3_5_0_1_1348872614361_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 447
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_93": {
      "name": "testCase_yui_3_5_0_1_1348872614361_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 368,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 361
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_94": {
      "name": "testCase_yui_3_5_0_1_1348872614361_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 389,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "testCase_yui_3_5_0_1_1348872614361_95": {
      "name": "testCase_yui_3_5_0_1_1348872614361_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 448,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 442
      }
    },
    "timestamp": "Friday, September 28, 2012 3:50:22 PM"
  },
  {
    "name": "Charts: ColumnGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 12005,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872622995_78": {
      "name": "testCase_yui_3_5_0_1_1348872622995_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1463,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 737
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 697
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_79": {
      "name": "testCase_yui_3_5_0_1_1348872622995_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1270,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 666
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 599
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_80": {
      "name": "testCase_yui_3_5_0_1_1348872622995_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1389,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 674
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 678
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_81": {
      "name": "testCase_yui_3_5_0_1_1348872622995_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1439,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 692
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 648
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_82": {
      "name": "testCase_yui_3_5_0_1_1348872622995_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1517,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 696
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 794
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_83": {
      "name": "testCase_yui_3_5_0_1_1348872622995_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1578,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 773
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 777
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_84": {
      "name": "testCase_yui_3_5_0_1_1348872622995_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1615,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 807
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 803
      }
    },
    "testCase_yui_3_5_0_1_1348872622995_85": {
      "name": "testCase_yui_3_5_0_1_1348872622995_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1639,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 822
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 799
      }
    },
    "timestamp": "Friday, September 28, 2012 3:50:35 PM"
  },
  {
    "name": "Charts: ColumnDataProvider",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 5939,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 482
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 301
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 374,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 372
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 310
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 322
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 299,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 296
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 432
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 310,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 302
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 312
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 327
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 302
      }
    },
    "timestamp": "Friday, September 28, 2012 3:50:43 PM"
  },
  {
    "name": "Charts",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 3228,
    "type": "report",
    "Chart Tests": {
      "name": "Chart Tests",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 3150,
      "type": "testcase",
      "testGetSeriesByIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSeriesByIndex",
        "duration": 488
      },
      "testGetSeriesByKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSeriesByKey",
        "duration": 306
      },
      "testGetAxesByKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAxesByKey",
        "duration": 414
      },
      "testGetCategoryAxis": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetCategoryAxis",
        "duration": 310
      },
      "testGetGraph": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetGraph",
        "duration": 352
      },
      "testGetAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAxes",
        "duration": 421
      },
      "testGetSeriesKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSeriesKeys",
        "duration": 316
      },
      "testGetDefaultAttributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetDefaultAttributes",
        "duration": 428
      }
    },
    "timestamp": "Friday, September 28, 2012 3:50:47 PM"
  },
  {
    "name": "Charts: BarLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 13012,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 659,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 655
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 817,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 804
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 833,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 820
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 811,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 795
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 810,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 796
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 827,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 804
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 761,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 746
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 852,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 849
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 834,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 823
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 828,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 814
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 835,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 814
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 841,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 828
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 866,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 851
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2336,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2333
      }
    },
    "timestamp": "Friday, September 28, 2012 3:51:01 PM"
  },
  {
    "name": "Charts: BarLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7213,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 494
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 435,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 410
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 536,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 523
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 392
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 515,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 502
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 402
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 437,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 433
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 548,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 535
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 377
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 536,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 388,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 385
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1076,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1048
      }
    },
    "timestamp": "Friday, September 28, 2012 3:51:10 PM"
  },
  {
    "name": "Charts: Gridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7252,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872670862_78": {
      "name": "testCase_yui_3_5_0_1_1348872670862_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 494,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 463
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_79": {
      "name": "testCase_yui_3_5_0_1_1348872670862_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 319,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_80": {
      "name": "testCase_yui_3_5_0_1_1348872670862_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_81": {
      "name": "testCase_yui_3_5_0_1_1348872670862_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 313,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_82": {
      "name": "testCase_yui_3_5_0_1_1348872670862_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 344
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_83": {
      "name": "testCase_yui_3_5_0_1_1348872670862_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_84": {
      "name": "testCase_yui_3_5_0_1_1348872670862_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_85": {
      "name": "testCase_yui_3_5_0_1_1348872670862_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_86": {
      "name": "testCase_yui_3_5_0_1_1348872670862_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 339
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_87": {
      "name": "testCase_yui_3_5_0_1_1348872670862_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 337
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_88": {
      "name": "testCase_yui_3_5_0_1_1348872670862_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_89": {
      "name": "testCase_yui_3_5_0_1_1348872670862_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_90": {
      "name": "testCase_yui_3_5_0_1_1348872670862_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 471,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_91": {
      "name": "testCase_yui_3_5_0_1_1348872670862_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 348,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 345
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_92": {
      "name": "testCase_yui_3_5_0_1_1348872670862_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 437
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_93": {
      "name": "testCase_yui_3_5_0_1_1348872670862_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 356
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_94": {
      "name": "testCase_yui_3_5_0_1_1348872670862_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 497,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1348872670862_95": {
      "name": "testCase_yui_3_5_0_1_1348872670862_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 377,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 352
      }
    },
    "timestamp": "Friday, September 28, 2012 3:51:19 PM"
  },
  {
    "name": "Charts: BarGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 12246,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872679458_78": {
      "name": "testCase_yui_3_5_0_1_1348872679458_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1469,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 732
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 683
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_79": {
      "name": "testCase_yui_3_5_0_1_1348872679458_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1374,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 744
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 601
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_80": {
      "name": "testCase_yui_3_5_0_1_1348872679458_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1432,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 703
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 690
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_81": {
      "name": "testCase_yui_3_5_0_1_1348872679458_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1380,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 756
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 591
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_82": {
      "name": "testCase_yui_3_5_0_1_1348872679458_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1626,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 798
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 822
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_83": {
      "name": "testCase_yui_3_5_0_1_1348872679458_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1649,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 815
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 808
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_84": {
      "name": "testCase_yui_3_5_0_1_1348872679458_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1636,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 810
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 821
      }
    },
    "testCase_yui_3_5_0_1_1348872679458_85": {
      "name": "testCase_yui_3_5_0_1_1348872679458_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1593,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 736
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 833
      }
    },
    "timestamp": "Friday, September 28, 2012 3:51:32 PM"
  },
  {
    "name": "Charts: BarDataProvider",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 5858,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 302,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 289
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 388,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 374
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 303,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 300
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 316,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 299
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 345,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 414,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 327,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 321
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 337,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 334
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 314,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 286
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 433,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 304
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "timestamp": "Friday, September 28, 2012 3:51:39 PM"
  },
  {
    "name": "Charts: AxisTitle",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 10666,
    "type": "report",
    "Left and Bottom Axes with undefined degree title rotation": {
      "name": "Left and Bottom Axes with undefined degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 487
      }
    },
    "Left and Bottom Axes with 15 degree title rotation": {
      "name": "Left and Bottom Axes with 15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 335,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 329
      }
    },
    "Left and Bottom Axes with 30 degree title rotation": {
      "name": "Left and Bottom Axes with 30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 440
      }
    },
    "Left and Bottom Axes with 45 degree title rotation": {
      "name": "Left and Bottom Axes with 45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 332
      }
    },
    "Left and Bottom Axes with 60 degree title rotation": {
      "name": "Left and Bottom Axes with 60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 355
      }
    },
    "Left and Bottom Axes with 75 degree title rotation": {
      "name": "Left and Bottom Axes with 75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 444,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 420
      }
    },
    "Left and Bottom Axes with 90 degree title rotation": {
      "name": "Left and Bottom Axes with 90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 370
      }
    },
    "Left and Bottom Axes with -15 degree title rotation": {
      "name": "Left and Bottom Axes with -15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 403
      }
    },
    "Left and Bottom Axes with -30 degree title rotation": {
      "name": "Left and Bottom Axes with -30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 345
      }
    },
    "Left and Bottom Axes with -45 degree title rotation": {
      "name": "Left and Bottom Axes with -45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 324
      }
    },
    "Left and Bottom Axes with -60 degree title rotation": {
      "name": "Left and Bottom Axes with -60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 464
      }
    },
    "Left and Bottom Axes with -75 degree title rotation": {
      "name": "Left and Bottom Axes with -75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 330
      }
    },
    "Left and Bottom Axes with -90 degree title rotation": {
      "name": "Left and Bottom Axes with -90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 551,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 536
      }
    },
    "Right and Top Axes with undefined degree title rotation": {
      "name": "Right and Top Axes with undefined degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 373
      }
    },
    "Right and Top Axes with 15 degree title rotation": {
      "name": "Right and Top Axes with 15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 392,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 388
      }
    },
    "Right and Top Axes with 30 degree title rotation": {
      "name": "Right and Top Axes with 30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 496,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 376
      }
    },
    "Right and Top Axes with 45 degree title rotation": {
      "name": "Right and Top Axes with 45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 337,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 335
      }
    },
    "Right and Top Axes with 60 degree title rotation": {
      "name": "Right and Top Axes with 60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 457,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 450
      }
    },
    "Right and Top Axes with 75 degree title rotation": {
      "name": "Right and Top Axes with 75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 352
      }
    },
    "Right and Top Axes with 90 degree title rotation": {
      "name": "Right and Top Axes with 90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 409
      }
    },
    "Right and Top Axes with -15 degree title rotation": {
      "name": "Right and Top Axes with -15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 382
      }
    },
    "Right and Top Axes with -30 degree title rotation": {
      "name": "Right and Top Axes with -30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 334
      }
    },
    "Right and Top Axes with -45 degree title rotation": {
      "name": "Right and Top Axes with -45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 450,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 447
      }
    },
    "Right and Top Axes with -60 degree title rotation": {
      "name": "Right and Top Axes with -60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 377,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 338
      }
    },
    "Right and Top Axes with -75 degree title rotation": {
      "name": "Right and Top Axes with -75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 453
      }
    },
    "Right and Top Axes with -90 degree title rotation": {
      "name": "Right and Top Axes with -90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 369
      }
    },
    "timestamp": "Friday, September 28, 2012 3:51:51 PM"
  },
  {
    "name": "Charts: AxisLabel",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 9621,
    "type": "report",
    "Left and Bottom Axes with 15 degree label rotation": {
      "name": "Left and Bottom Axes with 15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 572,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 535
      }
    },
    "Left and Bottom Axes with 30 degree label rotation": {
      "name": "Left and Bottom Axes with 30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 325
      }
    },
    "Left and Bottom Axes with 45 degree label rotation": {
      "name": "Left and Bottom Axes with 45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 410
      }
    },
    "Left and Bottom Axes with 60 degree label rotation": {
      "name": "Left and Bottom Axes with 60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 332
      }
    },
    "Left and Bottom Axes with 75 degree label rotation": {
      "name": "Left and Bottom Axes with 75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 353,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 341
      }
    },
    "Left and Bottom Axes with 90 degree label rotation": {
      "name": "Left and Bottom Axes with 90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 410
      }
    },
    "Left and Bottom Axes with -15 degree label rotation": {
      "name": "Left and Bottom Axes with -15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 346
      }
    },
    "Left and Bottom Axes with -30 degree label rotation": {
      "name": "Left and Bottom Axes with -30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 424
      }
    },
    "Left and Bottom Axes with -45 degree label rotation": {
      "name": "Left and Bottom Axes with -45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 350
      }
    },
    "Left and Bottom Axes with -60 degree label rotation": {
      "name": "Left and Bottom Axes with -60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 414
      }
    },
    "Left and Bottom Axes with -75 degree label rotation": {
      "name": "Left and Bottom Axes with -75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 390,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 387
      }
    },
    "Left and Bottom Axes with -90 degree label rotation": {
      "name": "Left and Bottom Axes with -90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 349,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 329
      }
    },
    "Right and Top Axes with 15 degree label rotation": {
      "name": "Right and Top Axes with 15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 445
      }
    },
    "Right and Top Axes with 30 degree label rotation": {
      "name": "Right and Top Axes with 30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 362
      }
    },
    "Right and Top Axes with 45 degree label rotation": {
      "name": "Right and Top Axes with 45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 387
      }
    },
    "Right and Top Axes with 60 degree label rotation": {
      "name": "Right and Top Axes with 60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 376
      }
    },
    "Right and Top Axes with 75 degree label rotation": {
      "name": "Right and Top Axes with 75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 324
      }
    },
    "Right and Top Axes with 90 degree label rotation": {
      "name": "Right and Top Axes with 90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 438,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 435
      }
    },
    "Right and Top Axes with -15 degree label rotation": {
      "name": "Right and Top Axes with -15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 327,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 325
      }
    },
    "Right and Top Axes with -30 degree label rotation": {
      "name": "Right and Top Axes with -30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 358
      }
    },
    "Right and Top Axes with -45 degree label rotation": {
      "name": "Right and Top Axes with -45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 336
      }
    },
    "Right and Top Axes with -60 degree label rotation": {
      "name": "Right and Top Axes with -60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 369,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 366
      }
    },
    "Right and Top Axes with -75 degree label rotation": {
      "name": "Right and Top Axes with -75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 422
      }
    },
    "Right and Top Axes with -90 degree label rotation": {
      "name": "Right and Top Axes with -90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 349
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:02 PM"
  },
  {
    "name": "Charts: AxesDisplay",
    "passed": 21,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 21,
    "duration": 8951,
    "type": "report",
    "Axes Tests": {
      "name": "Axes Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1008,
      "type": "testcase",
      "testRemoveKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveKey",
        "duration": 564
      },
      "testAddKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddKey",
        "duration": 401
      }
    },
    "Axis alwaysShowZero Test": {
      "name": "Axis alwaysShowZero Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testAlwaysShowZero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZero",
        "duration": 436
      }
    },
    "Axis alwaysShowZero = false Test": {
      "name": "Axis alwaysShowZero = false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 309,
      "type": "testcase",
      "testAlwaysShowZeroEqualsFalse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZeroEqualsFalse",
        "duration": 303
      }
    },
    "Dual Axes Missing Data (small dataProvider) Test": {
      "name": "Dual Axes Missing Data (small dataProvider) Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 612,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 609
      }
    },
    "Dual Axes Missing Data (large dataProvider) Test": {
      "name": "Dual Axes Missing Data (large dataProvider) Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 577,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 545
      }
    },
    "Dual Axes Missing Data (small dataProvider) Test with alwaysShowZero=false": {
      "name": "Dual Axes Missing Data (small dataProvider) Test with alwaysShowZero=false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 493
      }
    },
    "Dual Axes Missing Data (large dataProvider) Test with alwaysShowZero=false": {
      "name": "Dual Axes Missing Data (large dataProvider) Test with alwaysShowZero=false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 435,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 432
      }
    },
    "Custom Left and Bottom Axes with inside ticks": {
      "name": "Custom Left and Bottom Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 344
      }
    },
    "Custom Left and Bottom Axes with outside ticks": {
      "name": "Custom Left and Bottom Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 412
      }
    },
    "Custom Left and Bottom Axes with cross ticks": {
      "name": "Custom Left and Bottom Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 358
      }
    },
    "Custom Right and Bottom Axes with inside ticks": {
      "name": "Custom Right and Bottom Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 392,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 376
      }
    },
    "Custom Right and Bottom Axes with outside ticks": {
      "name": "Custom Right and Bottom Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 363
      }
    },
    "Custom Right and Bottom Axes with cross ticks": {
      "name": "Custom Right and Bottom Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 312
      }
    },
    "Custom Left and Top Axes with inside ticks": {
      "name": "Custom Left and Top Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 419,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 417
      }
    },
    "Custom Left and Top Axes with outside ticks": {
      "name": "Custom Left and Top Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 340,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 319
      }
    },
    "Custom Left and Top Axes with cross ticks": {
      "name": "Custom Left and Top Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 342
      }
    },
    "Custom Right and Top Axes with inside ticks": {
      "name": "Custom Right and Top Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 411
      }
    },
    "Custom Right and Top Axes with outside ticks": {
      "name": "Custom Right and Top Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 350
      }
    },
    "Custom Right and Top Axes with cross ticks": {
      "name": "Custom Right and Top Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 414,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 411
      }
    },
    "Custom Right and Top Axes with ticks set to none": {
      "name": "Custom Right and Top Axes with ticks set to none",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 331
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:12 PM"
  },
  {
    "name": "Charts: AxesAttrs",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 11258,
    "type": "report",
    "Axes Attribute Tests": {
      "name": "Axes Attribute Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1966,
      "type": "testcase",
      "testBottomCatAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBottomCatAxes",
        "duration": 423
      },
      "testRightValueAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRightValueAxes",
        "duration": 272
      },
      "testTopCatAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTopCatAxes",
        "duration": 627
      },
      "testLeftValueAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLeftValueAxes",
        "duration": 559
      }
    },
    "Axes Test Right Explicit Width": {
      "name": "Axes Test Right Explicit Width",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 298,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 273
      }
    },
    "Axes Test Bottom Explicit Height": {
      "name": "Axes Test Bottom Explicit Height",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 505,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 502
      }
    },
    "Axes Test Left Explicit Width": {
      "name": "Axes Test Left Explicit Width",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 302,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 290
      }
    },
    "Axes Test Top Explicit Height": {
      "name": "Axes Test Top Explicit Height",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 272,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 269
      }
    },
    "Axes Test Right Explicit Width Up Front": {
      "name": "Axes Test Right Explicit Width Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 392,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "Axes Test Bottom Explicit Height Up Front": {
      "name": "Axes Test Bottom Explicit Height Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 288
      }
    },
    "Axes Test Left Explicit Width Up Front": {
      "name": "Axes Test Left Explicit Width Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 268,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 265
      }
    },
    "Axes Test Top Explicit Height Up Front": {
      "name": "Axes Test Top Explicit Height Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 448,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "Axis labelFunction and titleFunction tests.": {
      "name": "Axis labelFunction and titleFunction tests.",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1687,
      "type": "testcase",
      "testCategoryLabels": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCategoryLabels",
        "duration": 737
      },
      "testNumericLabels": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumericLabels",
        "duration": 922
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:25 PM"
  },
  {
    "name": "Charts: AriaSpline",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 6516,
    "type": "report",
    "Spline Aria Tests": {
      "name": "Spline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1586,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 494
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 306
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 328
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 382
      }
    },
    "StackedSpline Aria Tests": {
      "name": "StackedSpline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1389,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 327
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 355
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 344
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 301
      }
    },
    "ComboSpline Aria Tests": {
      "name": "ComboSpline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1578,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 422
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 337
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 354
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 417
      }
    },
    "StackedComboSpline Aria Tests": {
      "name": "StackedComboSpline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1878,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 416
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 504
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 415
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 509
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:33 PM"
  },
  {
    "name": "Charts: AriaPie",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 750,
    "type": "report",
    "Pie Aria Tests": {
      "name": "Pie Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 673,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 232
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 133
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 128
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 121
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:35 PM"
  },
  {
    "name": "Charts: AriaLine",
    "passed": 32,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 32,
    "duration": 11237,
    "type": "report",
    "Combo Aria Tests": {
      "name": "Combo Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1581,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 457
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 321
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 407
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 326
      }
    },
    "StackedCombo Aria Tests": {
      "name": "StackedCombo Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1559,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 347
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 412
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 338
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 397
      }
    },
    "Area Aria Tests": {
      "name": "Area Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1291,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 305
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 274
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 332
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 324
      }
    },
    "StackedArea Aria Tests": {
      "name": "StackedArea Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1261,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 275
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 399
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 280
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 284
      }
    },
    "Line Aria Tests": {
      "name": "Line Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1342,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 359
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 289
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 302
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 354
      }
    },
    "StackedLine Aria Tests": {
      "name": "StackedLine Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1294,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 294
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 287
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 296
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 302
      }
    },
    "Marker Aria Tests": {
      "name": "Marker Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1374,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 300
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 408
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 302
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 311
      }
    },
    "StackedMarker Aria Tests": {
      "name": "StackedMarker Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1448,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 406
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 308
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 325
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 384
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:47 PM"
  },
  {
    "name": "Charts: AriaHistogram",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 6067,
    "type": "report",
    "Column Aria Tests": {
      "name": "Column Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1586,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 453
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 298
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 463
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 303
      }
    },
    "StackedColumn Aria Tests": {
      "name": "StackedColumn Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1412,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 314
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 414
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 303
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 333
      }
    },
    "Bar Aria Tests": {
      "name": "Bar Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1492,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 398
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 330
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 381
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 336
      }
    },
    "StackedBar Aria Tests": {
      "name": "StackedBar Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1496,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 305
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 416
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 306
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 430
      }
    },
    "timestamp": "Friday, September 28, 2012 3:52:55 PM"
  },
  {
    "name": "Charts: Aria Events",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 17,
    "duration": 7603,
    "type": "report",
    "Column Chart AriaEvent KeyDown Tests": {
      "name": "Column Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 533,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 513
      }
    },
    "Bar Chart AriaEvent KeyDown Tests": {
      "name": "Bar Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "StackedColumn Chart AriaEvent KeyDown Tests": {
      "name": "StackedColumn Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 518
      }
    },
    "StackedBar Chart AriaEvent KeyDown Tests": {
      "name": "StackedBar Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "Combo Chart AriaEvent KeyDown Tests": {
      "name": "Combo Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 516
      }
    },
    "StackedCombo Chart AriaEvent KeyDown Tests": {
      "name": "StackedCombo Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 430,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "Area Chart AriaEvent KeyDown Tests": {
      "name": "Area Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "StackedArea Chart AriaEvent KeyDown Tests": {
      "name": "StackedArea Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 474,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 456
      }
    },
    "Spline Chart AriaEvent KeyDown Tests": {
      "name": "Spline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "StackedSpline Chart AriaEvent KeyDown Tests": {
      "name": "StackedSpline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 542,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 520
      }
    },
    "ComboSpline Chart AriaEvent KeyDown Tests": {
      "name": "ComboSpline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 426
      }
    },
    "StackedComboSpline Chart AriaEvent KeyDown Tests": {
      "name": "StackedComboSpline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 597,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 594
      }
    },
    "Line Chart AriaEvent KeyDown Tests": {
      "name": "Line Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 389,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "StackedLine Chart AriaEvent KeyDown Tests": {
      "name": "StackedLine Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 378,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 357
      }
    },
    "Marker Chart AriaEvent KeyDown Tests": {
      "name": "Marker Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 505,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 494
      }
    },
    "StackedMarker Chart AriaEvent KeyDown Tests": {
      "name": "StackedMarker Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "Pie Chart AriaEvent KeyDown Tests": {
      "name": "Pie Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 170,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 168
      }
    },
    "timestamp": "Friday, September 28, 2012 3:53:04 PM"
  },
  {
    "name": "Charts: AreaSplineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 11470,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 622,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 601
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 747,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 728
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 772,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 671
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 630,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 616
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 744,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 723
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 691,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 688
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 648,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 624
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 730,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 718
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 706,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 703
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 649,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 637
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 728,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 715
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 753,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 739
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 801,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 687
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2151,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2139
      }
    },
    "timestamp": "Friday, September 28, 2012 3:53:17 PM"
  },
  {
    "name": "Charts: AreaSplineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 8116,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 543,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 519
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 584,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 560
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 410
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 534
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 428,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 545,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 509
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 462
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 516,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 501
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 468
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 523,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 505
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 466
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1632,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1523
      }
    },
    "timestamp": "Friday, September 28, 2012 3:53:26 PM"
  },
  {
    "name": "Charts: AreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7969,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872806764_78": {
      "name": "testCase_yui_3_5_0_1_1348872806764_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 561,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 536
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_79": {
      "name": "testCase_yui_3_5_0_1_1348872806764_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 350,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_80": {
      "name": "testCase_yui_3_5_0_1_1348872806764_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 434
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_81": {
      "name": "testCase_yui_3_5_0_1_1348872806764_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 367,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 364
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_82": {
      "name": "testCase_yui_3_5_0_1_1348872806764_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_83": {
      "name": "testCase_yui_3_5_0_1_1348872806764_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 437
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_84": {
      "name": "testCase_yui_3_5_0_1_1348872806764_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 364
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_85": {
      "name": "testCase_yui_3_5_0_1_1348872806764_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 354
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_86": {
      "name": "testCase_yui_3_5_0_1_1348872806764_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 456,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_87": {
      "name": "testCase_yui_3_5_0_1_1348872806764_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_88": {
      "name": "testCase_yui_3_5_0_1_1348872806764_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 512,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 508
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_89": {
      "name": "testCase_yui_3_5_0_1_1348872806764_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 385
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_90": {
      "name": "testCase_yui_3_5_0_1_1348872806764_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 492,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 490
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_91": {
      "name": "testCase_yui_3_5_0_1_1348872806764_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_92": {
      "name": "testCase_yui_3_5_0_1_1348872806764_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 381
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_93": {
      "name": "testCase_yui_3_5_0_1_1348872806764_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 585,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 566
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_94": {
      "name": "testCase_yui_3_5_0_1_1348872806764_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 378,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 375
      }
    },
    "testCase_yui_3_5_0_1_1348872806764_95": {
      "name": "testCase_yui_3_5_0_1_1348872806764_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 507,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 484
      }
    },
    "timestamp": "Friday, September 28, 2012 3:53:35 PM"
  },
  {
    "name": "Charts: AreaLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 10464,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 609,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 575
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 667,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 652
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 608,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 585
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 658,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 654
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 706,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 695
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 595,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 581
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 683,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 670
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 670,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 658
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 600,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 596
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 679,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 664
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 707,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 704
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 612,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 583
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 711,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 699
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1856,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1853
      }
    },
    "timestamp": "Friday, September 28, 2012 3:53:47 PM"
  },
  {
    "name": "Charts: AreaLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 6669,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 448
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 358
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 456,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 441
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 403,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 401
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 476,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 441
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 343
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 532,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 513
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 486,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 460
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 951,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 946
      }
    },
    "timestamp": "Friday, September 28, 2012 3:53:55 PM"
  },
  {
    "name": "Charts: Gridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6728,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872835679_78": {
      "name": "testCase_yui_3_5_0_1_1348872835679_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 413
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_79": {
      "name": "testCase_yui_3_5_0_1_1348872835679_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 302,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 296
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_80": {
      "name": "testCase_yui_3_5_0_1_1348872835679_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 308,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 306
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_81": {
      "name": "testCase_yui_3_5_0_1_1348872835679_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 396,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_82": {
      "name": "testCase_yui_3_5_0_1_1348872835679_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 335,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 325
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_83": {
      "name": "testCase_yui_3_5_0_1_1348872835679_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 301,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 291
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_84": {
      "name": "testCase_yui_3_5_0_1_1348872835679_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 429
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_85": {
      "name": "testCase_yui_3_5_0_1_1348872835679_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 291
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_86": {
      "name": "testCase_yui_3_5_0_1_1348872835679_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 297,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 295
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_87": {
      "name": "testCase_yui_3_5_0_1_1348872835679_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_88": {
      "name": "testCase_yui_3_5_0_1_1348872835679_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 344
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_89": {
      "name": "testCase_yui_3_5_0_1_1348872835679_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 392
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_90": {
      "name": "testCase_yui_3_5_0_1_1348872835679_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_91": {
      "name": "testCase_yui_3_5_0_1_1348872835679_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 321
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_92": {
      "name": "testCase_yui_3_5_0_1_1348872835679_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_93": {
      "name": "testCase_yui_3_5_0_1_1348872835679_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 328
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_94": {
      "name": "testCase_yui_3_5_0_1_1348872835679_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 402
      }
    },
    "testCase_yui_3_5_0_1_1348872835679_95": {
      "name": "testCase_yui_3_5_0_1_1348872835679_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:03 PM"
  },
  {
    "name": "Charts: AreaGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 10920,
    "type": "report",
    "testCase_yui_3_5_0_1_1348872843707_78": {
      "name": "testCase_yui_3_5_0_1_1348872843707_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1498,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 765
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 697
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_79": {
      "name": "testCase_yui_3_5_0_1_1348872843707_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1184,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 539
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 621
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_80": {
      "name": "testCase_yui_3_5_0_1_1348872843707_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1184,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 624
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 526
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_81": {
      "name": "testCase_yui_3_5_0_1_1348872843707_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1294,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 652
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 620
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_82": {
      "name": "testCase_yui_3_5_0_1_1348872843707_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1325,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 599
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 701
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_83": {
      "name": "testCase_yui_3_5_0_1_1348872843707_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1403,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 682
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 688
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_84": {
      "name": "testCase_yui_3_5_0_1_1348872843707_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1403,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 682
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 706
      }
    },
    "testCase_yui_3_5_0_1_1348872843707_85": {
      "name": "testCase_yui_3_5_0_1_1348872843707_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1543,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 738
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 771
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:15 PM"
  },
  {
    "name": "Charts: AreaDataProvider",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 9616,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 279,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 265
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 298
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 403,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 304
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 337
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 450,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 310,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 296
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 440,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 290,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 285
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 299
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 300
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 403,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 309,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 293
      }
    },
    "Missing Values Large Data DataProvider Tests": {
      "name": "Missing Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 325
      }
    },
    "Missing Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "Missing First Values Large Data DataProvider Tests": {
      "name": "Missing First Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "Missing First Values Large Data Stacked DataProvider Tests": {
      "name": "Missing First Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 313
      }
    },
    "Missing Last Values Large Data DataProvider Tests": {
      "name": "Missing Last Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "Missing Last Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Last Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 326,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "Split Trailing Series DataProvider DataProvider Tests": {
      "name": "Split Trailing Series DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 331
      }
    },
    "Split Trailing Series DataProvider Stacked DataProvider Tests": {
      "name": "Split Trailing Series DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 435,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "Two Series End Together DataProvider DataProvider Tests": {
      "name": "Two Series End Together DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 329
      }
    },
    "Two Series End Together DataProvider Stacked DataProvider Tests": {
      "name": "Two Series End Together DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 314
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:26 PM"
  },
  {
    "name": "Button",
    "passed": 33,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 33,
    "duration": 1471,
    "type": "report",
    "button-core": {
      "name": "button-core",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 190,
      "type": "testsuite",
      "Attributes": {
        "name": "Attributes",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 124,
        "type": "testcase",
        "Disabling a button should set the `disable` attribute to `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Disabling a button should set the `disable` attribute to `true`",
          "duration": 10
        },
        "Enabling a button should set the `disabled` attribute to `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Enabling a button should set the `disabled` attribute to `false`",
          "duration": 11
        },
        "Changing the label should change the `label` attribute of a button": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the label should change the `label` attribute of a button",
          "duration": 44
        },
        "Changing the label should change the `innerHTML` value of a button node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the label should change the `innerHTML` value of a button node",
          "duration": 9
        },
        "Changing the `disabled` attribute should fire a `disabledChange` event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the `disabled` attribute should fire a `disabledChange` event",
          "duration": 10
        },
        "Changing the `label` attribute should fire a `labelChange` event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the `label` attribute should fire a `labelChange` event",
          "duration": 9
        }
      },
      "Instantiation": {
        "name": "Instantiation",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 60,
        "type": "testcase",
        "Creating an unattached button should create a Y.ButtonCore instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Creating an unattached button should create a Y.ButtonCore instance",
          "duration": 8
        },
        "Modifying the label of a nested button structure should not modify the non-label elements": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Modifying the label of a nested button structure should not modify the non-label elements",
          "duration": 9
        },
        "modifying the `label` attribute should work properly on <input> elements": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "modifying the `label` attribute should work properly on <input> elements",
          "duration": 10
        }
      }
    },
    "button-plugin": {
      "name": "button-plugin",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 232,
      "type": "testsuite",
      "Methods": {
        "name": "Methods",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 217,
        "type": "testcase",
        "node.plug(Y.Plugin.Button, config) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "node.plug(Y.Plugin.Button, config) should return a Y.Node instance with Button functionality",
          "duration": 10
        },
        "Y.Plugin.Button.createNode(srcNode) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(srcNode) should return a Y.Node instance with Button functionality",
          "duration": 26
        },
        "Y.Plugin.Button.createNode(srcNode, config) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(srcNode, config) should return a Y.Node instance with Button functionality",
          "duration": 16
        },
        "Y.Plugin.Button.createNode(config) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(config) should return a Y.Node instance with Button functionality",
          "duration": 16
        },
        "Y.Plugin.Button.createNode(config) should return a Y.Node with the specified `template` element": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(config) should return a Y.Node with the specified `template` element",
          "duration": 26
        }
      }
    },
    "button": {
      "name": "button",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 708,
      "type": "testsuite",
      "Basic": {
        "name": "Basic",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 638,
        "type": "testcase",
        "Changing the label atrribute should trigger labelChange": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the label atrribute should trigger labelChange",
          "duration": 62
        },
        "ToggleButton should have `toggle` role": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ToggleButton should have `toggle` role",
          "duration": 58
        },
        "Selecting a toggleButton should add class `yui3-button-selected`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Selecting a toggleButton should add class `yui3-button-selected`",
          "duration": 62
        },
        "Select toggling a button should fire pressedChange": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Select toggling a button should fire pressedChange",
          "duration": 61
        },
        "disable() should set the disabled attribute to true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "disable() should set the disabled attribute to true",
          "duration": 61
        },
        "enable() should set the disabled attribute to false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "enable() should set the disabled attribute to false",
          "duration": 59
        },
        "Setting `pressed` should toggle the `pressed` attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `pressed` should toggle the `pressed` attribute",
          "duration": 61
        },
        "Setting `checked` should toggle the `checked` attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `checked` should toggle the `checked` attribute",
          "duration": 67
        },
        "Toggle buttons should have proper ARIA data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Toggle buttons should have proper ARIA data",
          "duration": 59
        },
        "Checkbox buttons should have proper ARIA data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Checkbox buttons should have proper ARIA data",
          "duration": 61
        }
      },
      "Config": {
        "name": "Config",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 53,
        "type": "testcase",
        "Passing `pressed=true` in with the config will default the button to a `pressed` state": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing `pressed=true` in with the config will default the button to a `pressed` state",
          "duration": 19
        },
        "Passing `checked=true` in with the config will default the button to a `checked` state": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing `checked=true` in with the config will default the button to a `checked` state",
          "duration": 20
        }
      }
    },
    "button-group": {
      "name": "button-group",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 264,
      "type": "testsuite",
      "Methods": {
        "name": "Methods",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 39,
        "type": "testcase",
        "ButtonGroup.getButtons() should return an array of Y.Node instances": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getButtons() should return an array of Y.Node instances",
          "duration": 25
        }
      },
      "Checkbox": {
        "name": "Checkbox",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 129,
        "type": "testcase",
        "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons",
          "duration": 32
        },
        "ButtonGroup.getSelectedValues() should return values of selected buttons": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getSelectedValues() should return values of selected buttons",
          "duration": 32
        },
        "Selecting a button should trigger selectionChange": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Selecting a button should trigger selectionChange",
          "duration": 30
        },
        "Selecting a button in a group should provide an originEvent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Selecting a button in a group should provide an originEvent",
          "duration": 28
        }
      },
      "Radio": {
        "name": "Radio",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 46,
        "type": "testcase",
        "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons",
          "duration": 32
        }
      },
      "MISC": {
        "name": "MISC",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 37,
        "type": "testcase",
        "ButtonGroups should apply yui3-button-selected to anscestor button div, not the nested element that was clicked": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroups should apply yui3-button-selected to anscestor button div, not the nested element that was clicked",
          "duration": 24
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:29 PM"
  },
  {
    "name": "Cookie",
    "passed": 166,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 166,
    "duration": 2977,
    "type": "report",
    "Cookie Parsing Tests": {
      "name": "Cookie Parsing Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 287,
      "type": "testcase",
      "testParseCookieStringEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringEmpty",
        "duration": 1
      },
      "testParseCookieStringNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringNull",
        "duration": 1
      },
      "testParseCookieStringBoolean": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringBoolean",
        "duration": 1
      },
      "testParseCookieStringUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringUndefined",
        "duration": 1
      },
      "testParseCookieStringInvalid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringInvalid",
        "duration": 1
      },
      "testParseCookieStringSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringSimple",
        "duration": 2
      },
      "testParseCookieStringNumber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringNumber",
        "duration": 1
      },
      "testParseCookieStringSimpleMulti": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringSimpleMulti",
        "duration": 1
      },
      "testParseCookieStringComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringComplex",
        "duration": 2
      },
      "testParseCookieStringNetwork": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringNetwork",
        "duration": 1
      },
      "testParseCookieStringWithEscapedCharactersInCookieName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringWithEscapedCharactersInCookieName",
        "duration": 1
      },
      "testParseCookieStringIncorrectFormat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringIncorrectFormat",
        "duration": 1
      },
      "testParseCookieStringInvalidEncoding": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringInvalidEncoding",
        "duration": 7
      },
      "testParseCookieStringBooleanCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringBooleanCookie",
        "duration": 1
      },
      "testParseCookieStringWithHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringWithHash",
        "duration": 1
      },
      "testParseCookieHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieHash",
        "duration": 2
      },
      "testParseCookieHashComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieHashComplex",
        "duration": 1
      },
      "testParseCookieHashEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieHashEmpty",
        "duration": 1
      }
    },
    "Cookie String Creation Tests": {
      "name": "Cookie String Creation Tests",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 357,
      "type": "testcase",
      "testCreateCookieStringSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimple",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithPath",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidPath1",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidPath2",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithDomain",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidDomain1",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidDomain2",
        "duration": 19
      },
      "testCreateCookieStringSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithSecure",
        "duration": 2
      },
      "testCreateCookieStringSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithExpiry",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidExpiry",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithAll",
        "duration": 0
      },
      "testCreateCookieStringComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplex",
        "duration": 1
      },
      "testCreateCookieStringComplexWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithPath",
        "duration": 1
      },
      "testCreateCookieStringComplexWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithDomain",
        "duration": 2
      },
      "testCreateCookieStringComplexWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithSecure",
        "duration": 1
      },
      "testCreateCookieStringComplexWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithExpiry",
        "duration": 1
      },
      "testCreateCookieStringComplexWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithAll",
        "duration": 2
      },
      "testCreateCookieHashString1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieHashString1",
        "duration": 1
      },
      "testCreateCookieHashString2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieHashString2",
        "duration": 1
      }
    },
    "Get Cookie Tests": {
      "name": "Get Cookie Tests",
      "passed": 23,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 23,
      "duration": 372,
      "type": "testcase",
      "testGetSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSimple",
        "duration": 1
      },
      "testGetUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetUnknown",
        "duration": 1
      },
      "testGetComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetComplex",
        "duration": 1
      },
      "testGetInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName1",
        "duration": 5
      },
      "testGetInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName2",
        "duration": 5
      },
      "testGetInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName3",
        "duration": 4
      },
      "testGetInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName4",
        "duration": 5
      },
      "testGetInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName5",
        "duration": 5
      },
      "testGetWithBooleanConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithBooleanConverter",
        "duration": 1
      },
      "testGetWithNumberConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithNumberConverter",
        "duration": 1
      },
      "testGetWithCustomConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithCustomConverter",
        "duration": 1
      },
      "testGetWithInvalidConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithInvalidConverter",
        "duration": 1
      },
      "testGetWithConverterAndUnknownCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithConverterAndUnknownCookie",
        "duration": 1
      },
      "testGetWithBooleanConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithBooleanConverterOption",
        "duration": 2
      },
      "testGetWithNumberConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithNumberConverterOption",
        "duration": 1
      },
      "testGetWithCustomConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithCustomConverterOption",
        "duration": 1
      },
      "testGetWithInvalidConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithInvalidConverterOption",
        "duration": 1
      },
      "testGetWithConverterOptionAndUnknownCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithConverterOptionAndUnknownCookie",
        "duration": 1
      },
      "testGetWithEmptyOptions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithEmptyOptions",
        "duration": 2
      },
      "testGetSimpleWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSimpleWithFalseRaw",
        "duration": 1
      },
      "testGetSimpleWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSimpleWithTrueRaw",
        "duration": 1
      },
      "testGetComplexWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetComplexWithFalseRaw",
        "duration": 1
      },
      "testGetComplexWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetComplexWithTrueRaw",
        "duration": 1
      }
    },
    "Cookie Exists Tests": {
      "name": "Cookie Exists Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 60,
      "type": "testcase",
      "testExistsSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExistsSimple",
        "duration": 1
      },
      "testExistsUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExistsUnknown",
        "duration": 1
      },
      "testExistsBooleanCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExistsBooleanCookie",
        "duration": 1
      }
    },
    "Get Cookie Subs Tests": {
      "name": "Get Cookie Subs Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 60,
      "type": "testcase",
      "testGetSubsSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubsSimple",
        "duration": 2
      },
      "testGetSubsUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubsUnknown",
        "duration": 1
      },
      "testGetSubsComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubsComplex",
        "duration": 1
      }
    },
    "Get Cookie Sub Tests": {
      "name": "Get Cookie Sub Tests",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 325,
      "type": "testcase",
      "testGetSubSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubSimple",
        "duration": 1
      },
      "testGetSubUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubUnknown",
        "duration": 2
      },
      "testGetSubComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubComplex",
        "duration": 1
      },
      "testGetSubInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName1",
        "duration": 6
      },
      "testGetSubInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName2",
        "duration": 7
      },
      "testGetSubInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName3",
        "duration": 6
      },
      "testGetSubInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName4",
        "duration": 7
      },
      "testGetSubInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName5",
        "duration": 5
      },
      "testGetSubInvalidSubName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName1",
        "duration": 4
      },
      "testGetSubInvalidSubName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName2",
        "duration": 6
      },
      "testGetSubInvalidSubName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName3",
        "duration": 5
      },
      "testGetSubInvalidSubName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName4",
        "duration": 6
      },
      "testGetSubInvalidSubName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName5",
        "duration": 5
      },
      "testGetSubOnNonExistantCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubOnNonExistantCookie",
        "duration": 1
      },
      "testGetSubWithBooleanConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithBooleanConverter",
        "duration": 1
      },
      "testGetSubWithNumberConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithNumberConverter",
        "duration": 1
      },
      "testGetSubWithCustomConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithCustomConverter",
        "duration": 2
      },
      "testGetSubWithInvalidConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithInvalidConverter",
        "duration": 1
      },
      "testSubGetWithConverterAndUnknownCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSubGetWithConverterAndUnknownCookie",
        "duration": 1
      },
      "testSubGetSpecial": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSubGetSpecial",
        "duration": 2
      }
    },
    "Remove Cookie Sub Tests": {
      "name": "Remove Cookie Sub Tests",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 325,
      "type": "testcase",
      "testRemoveSubSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubSimple",
        "duration": 2
      },
      "testRemoveSubUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubUnknown",
        "duration": 1
      },
      "testRemoveSubInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName1",
        "duration": 6
      },
      "testRemoveSubInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName2",
        "duration": 5
      },
      "testRemoveSubInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName3",
        "duration": 4
      },
      "testRemoveSubInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName4",
        "duration": 5
      },
      "testRemoveSubInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName5",
        "duration": 4
      },
      "testRemoveSubInvalidSubName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName1",
        "duration": 4
      },
      "testRemoveSubInvalidSubName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName2",
        "duration": 5
      },
      "testRemoveSubInvalidSubName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName3",
        "duration": 4
      },
      "testRemoveSubInvalidSubName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName4",
        "duration": 5
      },
      "testRemoveSubInvalidSubName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName5",
        "duration": 15
      },
      "testRemoveSubOnNonExistantCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubOnNonExistantCookie",
        "duration": 1
      },
      "testRemoveLastSub": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveLastSub",
        "duration": 2
      },
      "testRemoveLastSubWithTrueRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveLastSubWithTrueRemoveIfEmpty",
        "duration": 1
      },
      "testRemoveLastSubWithFalseRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveLastSubWithFalseRemoveIfEmpty",
        "duration": 1
      },
      "testRemoveNotLastSubWithTrueRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveNotLastSubWithTrueRemoveIfEmpty",
        "duration": 1
      },
      "testRemoveNotLastSubWithFalseRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveNotLastSubWithFalseRemoveIfEmpty",
        "duration": 2
      },
      "testRemoveNotLastSubWithInvalidRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveNotLastSubWithInvalidRemoveIfEmpty",
        "duration": 1
      }
    },
    "Remove Cookie Tests": {
      "name": "Remove Cookie Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 122,
      "type": "testcase",
      "testRemoveSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSimple",
        "duration": 1
      },
      "testRemoveInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName1",
        "duration": 6
      },
      "testRemoveInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName2",
        "duration": 7
      },
      "testRemoveInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName3",
        "duration": 6
      },
      "testRemoveInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName4",
        "duration": 5
      },
      "testRemoveInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName5",
        "duration": 5
      },
      "testRemoveWithOptionsIntact": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveWithOptionsIntact",
        "duration": 1
      }
    },
    "Set Cookie Tests": {
      "name": "Set Cookie Tests",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 388,
      "type": "testcase",
      "testSetSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimple",
        "duration": 1
      },
      "testSetSimpleWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithFalseRaw",
        "duration": 1
      },
      "testSetSimpleWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithTrueRaw",
        "duration": 2
      },
      "testSetSimpleWithInvalidRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidRaw",
        "duration": 1
      },
      "testSetSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithPath",
        "duration": 1
      },
      "testSetSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidPath1",
        "duration": 1
      },
      "testSetSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidPath2",
        "duration": 1
      },
      "testSetSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithDomain",
        "duration": 1
      },
      "testSetSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidDomain1",
        "duration": 0
      },
      "testSetSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidDomain2",
        "duration": 1
      },
      "testSetSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithSecure",
        "duration": 1
      },
      "testSetSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidSecure1",
        "duration": 2
      },
      "testSetSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testSetSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithExpiry",
        "duration": 1
      },
      "testSetSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidExpiry",
        "duration": 1
      },
      "testSetSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithAll",
        "duration": 1
      },
      "testSetComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplex",
        "duration": 2
      },
      "testSetComplexWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithFalseRaw",
        "duration": 1
      },
      "testSetComplexWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithTrueRaw",
        "duration": 1
      },
      "testSetComplexWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithPath",
        "duration": 1
      },
      "testSetComplexWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithDomain",
        "duration": 1
      },
      "testSetComplexWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithSecure",
        "duration": 1
      },
      "testSetComplexWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithExpiry",
        "duration": 1
      },
      "testSetComplexWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithAll",
        "duration": 1
      }
    },
    "Set Subcookie Tests": {
      "name": "Set Subcookie Tests",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 232,
      "type": "testcase",
      "testSetSubSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimple",
        "duration": 1
      },
      "testSetSubSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithPath",
        "duration": 2
      },
      "testSetSubSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidPath1",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidPath2",
        "duration": 1
      },
      "testSetSubSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithDomain",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidDomain1",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidDomain2",
        "duration": 2
      },
      "testSetSubSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithSecure",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidSecure2",
        "duration": 2
      },
      "testSetSubSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithExpiry",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidExpiry",
        "duration": 2
      },
      "testSetSubSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithAll",
        "duration": 1
      },
      "testSetSubSpecial": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSpecial",
        "duration": 1
      }
    },
    "Set Complete Subcookie Tests": {
      "name": "Set Complete Subcookie Tests",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 232,
      "type": "testcase",
      "testSetSubsSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimple",
        "duration": 1
      },
      "testSetSubsSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithPath",
        "duration": 2
      },
      "testSetSubsSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidPath1",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidPath2",
        "duration": 1
      },
      "testSetSubsSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithDomain",
        "duration": 2
      },
      "testSetSubsSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidDomain1",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidDomain2",
        "duration": 2
      },
      "testSetSubsSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithSecure",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testSetSubsSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithExpiry",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidExpiry",
        "duration": 2
      },
      "testSetSubsSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithAll",
        "duration": 2
      },
      "testSetSubsValues": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsValues",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:33 PM"
  },
  {
    "name": "Console",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 569,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 1
      }
    },
    "API": {
      "name": "API",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 155,
      "type": "testcase",
      "test log": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test log",
        "duration": 1
      },
      "test clearConsole": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test clearConsole",
        "duration": 2
      },
      "test reset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test reset",
        "duration": 1
      },
      "test collapse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test collapse",
        "duration": 1
      },
      "test expand": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test expand",
        "duration": 2
      },
      "test scrollToLatest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test scrollToLatest",
        "duration": 1
      },
      "test render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render",
        "duration": 1
      },
      "test printBuffer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test printBuffer",
        "duration": 1
      }
    },
    "Attributes": {
      "name": "Attributes",
      "passed": 15,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 15,
      "duration": 248,
      "type": "testcase",
      "logEvent should be writeOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "logEvent should be writeOnce",
        "duration": 1
      },
      "logSource should be writeOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "logSource should be writeOnce",
        "duration": 1
      },
      "test strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test strings",
        "duration": 2
      },
      "test paused": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test paused",
        "duration": 1
      },
      "test defaultCategory": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test defaultCategory",
        "duration": 1
      },
      "test defaultSource": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test defaultSource",
        "duration": 1
      },
      "test entryTemplate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test entryTemplate",
        "duration": 1
      },
      "test logLevel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test logLevel",
        "duration": 2
      },
      "test printTimeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test printTimeout",
        "duration": 1
      },
      "test printLimit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test printLimit",
        "duration": 1
      },
      "test consoleLimit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test consoleLimit",
        "duration": 1
      },
      "test newestOnTop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test newestOnTop",
        "duration": 1
      },
      "test scrollIntoView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test scrollIntoView",
        "duration": 2
      },
      "test collapsed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test collapsed",
        "duration": 1
      },
      "test style": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test style",
        "duration": 1
      }
    },
    "Runtime expectations": {
      "name": "Runtime expectations",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 30,
      "type": "testcase",
      "test ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ",
        "duration": 2
      }
    },
    "Bugs": {
      "name": "Bugs",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 40,
      "type": "testcase",
      "test ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:34 PM"
  },
  {
    "name": "Cache Plugin",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 345,
    "type": "report",
    "Class Tests": {
      "name": "Class Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 101,
      "type": "testcase",
      "testDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaults",
        "duration": 32
      },
      "testDestructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestructor",
        "duration": 49
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 171,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 17
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 19
      },
      "testRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRequest",
        "duration": 18
      },
      "testRetrieveSuccess": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveSuccess",
        "duration": 19
      },
      "testRetrieveFailure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveFailure",
        "duration": 19
      },
      "testCancelAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelAdd",
        "duration": 18
      },
      "testCancelFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelFlush",
        "duration": 46
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:35 PM"
  },
  {
    "name": "Cache Offline",
    "passed": 26,
    "failed": 1,
    "errors": 0,
    "ignored": 0,
    "total": 27,
    "duration": 656,
    "type": "report",
    "Class Tests": {
      "name": "Class Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 38,
      "type": "testcase",
      "testDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaults",
        "duration": 3
      },
      "testDestructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestructor",
        "duration": 4
      }
    },
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 11,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 295,
      "type": "testcase",
      "testMaxDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxDefault",
        "duration": 4
      },
      "testMaxConfig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxConfig",
        "duration": 5
      },
      "testMaxSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxSet",
        "duration": 4
      },
      "testMaxSetNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxSetNull",
        "duration": 4
      },
      "testMaxSetNegative": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxSetNegative",
        "duration": 4
      },
      "testRetrieve": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieve",
        "duration": 4
      },
      "testNoExpires": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoExpires",
        "duration": 4
      },
      "testExpiresNumber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresNumber",
        "duration": 80
      },
      "testExpiresDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresDate",
        "duration": 7
      },
      "testNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoMatch",
        "duration": 5
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 5
      },
      "testFlushAll": {
        "result": "fail",
        "message": "Expected 4 items.\nExpected: 4 (number)\nActual: 6 (number)",
        "type": "test",
        "name": "testFlushAll",
        "duration": 11
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 123,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 4
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 3
      },
      "testRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRequest",
        "duration": 13
      },
      "testRetrieveSuccess": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveSuccess",
        "duration": 21
      },
      "testRetrieveFailure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveFailure",
        "duration": 5
      },
      "testCancelAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelAdd",
        "duration": 4
      },
      "testCancelFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelFlush",
        "duration": 4
      }
    },
    "Entry Management Tests": {
      "name": "Entry Management Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 44,
      "type": "testcase",
      "testNonUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonUniqueKeys",
        "duration": 5
      },
      "testUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUniqueKeys",
        "duration": 4
      }
    },
    "Invalid Value Tests": {
      "name": "Invalid Value Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 76,
      "type": "testcase",
      "testUndefinedRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefinedRequest",
        "duration": 4
      },
      "testNullRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNullRequest",
        "duration": 4
      },
      "testNaNRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNaNRequest",
        "duration": 3
      },
      "testEmptyStringRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEmptyStringRequest",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:37 PM"
  },
  {
    "name": "Cache",
    "passed": 29,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 29,
    "duration": 695,
    "type": "report",
    "Class Tests": {
      "name": "Class Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 30,
      "type": "testcase",
      "testDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaults",
        "duration": 2
      },
      "testDestructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestructor",
        "duration": 3
      }
    },
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 312,
      "type": "testcase",
      "testmax0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax0",
        "duration": 2
      },
      "testmax2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2",
        "duration": 4
      },
      "testmax2to1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2to1",
        "duration": 4
      },
      "testmax2to0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2to0",
        "duration": 3
      },
      "testmax2toNegative": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2toNegative",
        "duration": 4
      },
      "testRetrieve": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieve",
        "duration": 3
      },
      "testNoExpires": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoExpires",
        "duration": 3
      },
      "testExpiresNumber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresNumber",
        "duration": 80
      },
      "testExpiresDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresDate",
        "duration": 6
      },
      "testNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoMatch",
        "duration": 5
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 3
      },
      "testFlushItem": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlushItem",
        "duration": 4
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 122,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 3
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 3
      },
      "testRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRequest",
        "duration": 3
      },
      "testRetrieveSuccess": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveSuccess",
        "duration": 4
      },
      "testRetrieveFailure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveFailure",
        "duration": 3
      },
      "testCancelAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelAdd",
        "duration": 2
      },
      "testCancelFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelFlush",
        "duration": 4
      }
    },
    "Entry Management Tests": {
      "name": "Entry Management Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 76,
      "type": "testcase",
      "testNonUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonUniqueKeys",
        "duration": 5
      },
      "testUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUniqueKeys",
        "duration": 5
      },
      "testUniqueKeyValues": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUniqueKeyValues",
        "duration": 5
      },
      "testFreshness": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFreshness",
        "duration": 5
      }
    },
    "Invalid Value Tests": {
      "name": "Invalid Value Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 76,
      "type": "testcase",
      "testUndefinedRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefinedRequest",
        "duration": 4
      },
      "testNullRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNullRequest",
        "duration": 5
      },
      "testNaNRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNaNRequest",
        "duration": 3
      },
      "testEmptyStringRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEmptyStringRequest",
        "duration": 5
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:39 PM"
  },
  {
    "name": "Base Core",
    "passed": 72,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 72,
    "duration": 1297,
    "type": "report",
    "Core Tests": {
      "name": "Core Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 213,
      "type": "testcase",
      "testInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInit",
        "duration": 2
      },
      "testDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestroy",
        "duration": 3
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 2
      },
      "testCloneDefaultValueObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultValueObject",
        "duration": 3
      },
      "testCloneDefaultValueArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultValueArray",
        "duration": 2
      },
      "testCloneDefaultValueString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultValueString",
        "duration": 2
      },
      "testCloneDefaultComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultComplex",
        "duration": 3
      },
      "testCloneDefaultShallow": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultShallow",
        "duration": 2
      },
      "testCloneDefaultDeep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultDeep",
        "duration": 3
      },
      "testCloneDefaultOverride": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultOverride",
        "duration": 3
      },
      "testValueValueFnOverride": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValueValueFnOverride",
        "duration": 11
      },
      "testInitializerDestructorInvocation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitializerDestructorInvocation",
        "duration": 2
      }
    },
    "Base Class Tests": {
      "name": "Base Class Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 294,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 4
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 3
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 4
      },
      "testWriteOncePostInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOncePostInit",
        "duration": 3
      },
      "testWriteOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnce",
        "duration": 2
      },
      "testWriteOnceInitOnly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnly",
        "duration": 3
      },
      "testWriteOnceInitOnlyNotProvided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnlyNotProvided",
        "duration": 3
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 3
      },
      "testAdHocConstructorEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorEnabled",
        "duration": 3
      },
      "testAdHocConstructorDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorDisabled",
        "duration": 3
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 5
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 3
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 4
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 3
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 3
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 6
      },
      "testInitialValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitialValidation",
        "duration": 3
      },
      "testProtect": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testProtect",
        "duration": 6
      }
    },
    "Extended Class Tests": {
      "name": "Extended Class Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 201,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 4
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 5
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 5
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 4
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 7
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 4
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 5
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 4
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 5
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 7
      },
      "testOnDemandInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testOnDemandInit",
        "duration": 4
      },
      "testGetterSetterValidatorNameArg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetterSetterValidatorNameArg",
        "duration": 4
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:41 PM"
  },
  {
    "name": "Base",
    "passed": 25,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 25,
    "duration": 475,
    "type": "report",
    "Base Event Tests": {
      "name": "Base Event Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 82,
      "type": "testcase",
      "testEventPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventPrefix",
        "duration": 3
      },
      "testEventRegistrationThroughConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventRegistrationThroughConstructor",
        "duration": 3
      },
      "testBubbleTargetsThroughConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBubbleTargetsThroughConstructor",
        "duration": 5
      },
      "testInitEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitEvent",
        "duration": 3
      },
      "testDestroyEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestroyEvent",
        "duration": 2
      }
    },
    "BaseBuild": {
      "name": "BaseBuild",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 323,
      "type": "testcase",
      "test:create-basic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:create-basic",
        "duration": 4
      },
      "test:mix-basic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mix-basic",
        "duration": 3
      },
      "test:initializer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:initializer",
        "duration": 4
      },
      "test:destructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:destructor",
        "duration": 5
      },
      "test:attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:attrs",
        "duration": 5
      },
      "test:nonAttrsCfg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:nonAttrsCfg",
        "duration": 3
      },
      "test:aggregates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:aggregates",
        "duration": 3
      },
      "test:overrides-ext-wins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:overrides-ext-wins",
        "duration": 4
      },
      "test:overrides-host-wins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:overrides-host-wins",
        "duration": 4
      },
      "test:multiext-complex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:multiext-complex",
        "duration": 5
      },
      "test:classstructure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:classstructure",
        "duration": 4
      },
      "test:mutli-inheritance-from-base": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mutli-inheritance-from-base",
        "duration": 2
      },
      "test:extend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extend",
        "duration": 3
      },
      "test:mainclass-statics": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mainclass-statics",
        "duration": 2
      },
      "test:mainclass-aggregates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mainclass-aggregates",
        "duration": 3
      },
      "test:mainclass-custom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mainclass-custom",
        "duration": 5
      },
      "test:extCfg-custom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extCfg-custom",
        "duration": 4
      },
      "test:extCfg-statics": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extCfg-statics",
        "duration": 3
      },
      "test:extCfg-aggregates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extCfg-aggregates",
        "duration": 4
      },
      "test:deprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:deprecated",
        "duration": 2
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:42 PM"
  },
  {
    "name": "Calendar",
    "passed": 15,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 15,
    "duration": 8985,
    "type": "report",
    "Basic Calendar Tests": {
      "name": "Basic Calendar Tests",
      "passed": 15,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 15,
      "duration": 8912,
      "type": "testcase",
      "testCalendarBase": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCalendarBase",
        "duration": 60
      },
      "testBasicCalendar": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBasicCalendar",
        "duration": 107
      },
      "testAddMonths": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddMonths",
        "duration": 912
      },
      "testMaxMinDates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxMinDates",
        "duration": 626
      },
      "testSelection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSelection",
        "duration": 759
      },
      "testRules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRules",
        "duration": 534
      },
      "testPrevAndNextMonth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrevAndNextMonth",
        "duration": 91
      },
      "testTwoCalendars": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTwoCalendars",
        "duration": 233
      },
      "testCalendarClick": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCalendarClick",
        "duration": 233
      },
      "testFebruaries": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFebruaries",
        "duration": 2552
      },
      "testFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocus",
        "duration": 473
      },
      "testSelectionModes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSelectionModes",
        "duration": 212
      },
      "testCalendarNavigation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCalendarNavigation",
        "duration": 1606
      },
      "testCustomHeader": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHeader",
        "duration": 217
      },
      "testMultiplePanes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiplePanes",
        "duration": 129
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:53 PM"
  },
  {
    "name": "ArraySort",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 126,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 57,
      "type": "testcase",
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testMixedStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMixedStrings",
        "duration": 1
      }
    },
    "timestamp": "Friday, September 28, 2012 3:54:54 PM"
  },
  {
    "name": "Graphics: Shape Anim Transform",
    "passed": 48,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 48,
    "duration": 27098,
    "type": "report",
    "ShapeAnimTests": {
      "name": "ShapeAnimTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 559,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 539
      }
    },
    "timestamp": "Friday, September 28, 2012 3:55:22 PM"
  },
  {
    "name": "Anim: Shape",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 6855,
    "type": "report",
    "AnimShapeTests": {
      "name": "AnimShapeTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 569,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 554
      }
    },
    "timestamp": "Friday, September 28, 2012 3:55:30 PM"
  },
  {
    "name": "Anim",
    "passed": 30,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 30,
    "duration": 7403,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1046,
      "type": "testcase",
      "should find node via selector string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find node via selector string",
        "duration": 3
      },
      "should end at default duration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at default duration",
        "duration": 1019
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1730,
      "type": "testcase",
      "should set initial value prior to running first frame": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set initial value prior to running first frame",
        "duration": 34
      },
      "should fire the tween event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the tween event",
        "duration": 8
      },
      "should fire the end event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the end event",
        "duration": 505
      },
      "should fire the pause event when pause is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the pause event when pause is called",
        "duration": 6
      },
      "should fire the end event when stop is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the end event when stop is called",
        "duration": 6
      },
      "should run in reverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run in reverse",
        "duration": 513
      },
      "should fire the end event and set \"to\" values when stop(true) is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the end event and set \"to\" values when stop(true) is called",
        "duration": 9
      },
      "should fire the resume event when run called while paused": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the resume event when run called while paused",
        "duration": 6
      },
      "should run the onstart prior to setting target values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run the onstart prior to setting target values",
        "duration": 7
      },
      "should set \"running\" to true when run is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set \"running\" to true when run is called",
        "duration": 4
      },
      "should set \"running\" to false when stop is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set \"running\" to false when stop is called",
        "duration": 5
      },
      "should animate DOM properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should animate DOM properties",
        "duration": 519
      }
    },
    "Anim Easing": {
      "name": "Anim Easing",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 4537,
      "type": "testcase",
      "should end at the final value for easeNone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeNone",
        "duration": 269
      },
      "should end at the final value for easeIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeIn",
        "duration": 269
      },
      "should end at the final value for easeOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeOut",
        "duration": 268
      },
      "should end at the final value for easeBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeBoth",
        "duration": 269
      },
      "should end at the final value for easeInStrong": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeInStrong",
        "duration": 270
      },
      "should end at the final value for easeOutStrong": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeOutStrong",
        "duration": 269
      },
      "should end at the final value for easeBothStrong": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeBothStrong",
        "duration": 285
      },
      "should end at the final value for elasticIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for elasticIn",
        "duration": 269
      },
      "should end at the final value for elasticOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for elasticOut",
        "duration": 270
      },
      "should end at the final value for elasticBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for elasticBoth",
        "duration": 270
      },
      "should end at the final value for backIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for backIn",
        "duration": 269
      },
      "should end at the final value for backOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for backOut",
        "duration": 269
      },
      "should end at the final value for backBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for backBoth",
        "duration": 270
      },
      "should end at the final value for bounceIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for bounceIn",
        "duration": 281
      },
      "should end at the final value for bounceOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for bounceOut",
        "duration": 284
      },
      "should end at the final value for bounceBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for bounceBoth",
        "duration": 269
      }
    },
    "timestamp": "Friday, September 28, 2012 3:55:38 PM"
  },
  {
    "name": "AsyncQueue",
    "passed": 17,
    "failed": 1,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 928,
    "type": "report",
    "Queue isntantiation": {
      "name": "Queue isntantiation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 59,
      "type": "testcase",
      "test_instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_instantiation",
        "duration": 3
      }
    },
    "queue-base": {
      "name": "queue-base",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "test_next": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_next",
        "duration": 14
      }
    },
    "Test API": {
      "name": "Test API",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 404,
      "type": "testcase",
      "test_chaining": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_chaining",
        "duration": 3
      },
      "test_add": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add",
        "duration": 7
      },
      "test_remove": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_remove",
        "duration": 19
      },
      "test_promote": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_promote",
        "duration": 18
      },
      "test_pause": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_pause",
        "duration": 64
      },
      "test_stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stop",
        "duration": 126
      },
      "test_getCallback": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getCallback",
        "duration": 17
      },
      "test_isRunning": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_isRunning",
        "duration": 45
      }
    },
    "Test callback config": {
      "name": "Test callback config",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 263,
      "type": "testcase",
      "test_fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fn",
        "duration": 5
      },
      "test_context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_context",
        "duration": 4
      },
      "test_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_args",
        "duration": 3
      },
      "test_iterations": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_iterations",
        "duration": 49
      },
      "test_until": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_until",
        "duration": 50
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 66
      }
    },
    "Test Events": {
      "name": "Test Events",
      "passed": 1,
      "failed": 1,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 92,
      "type": "testcase",
      "test_events": {
        "result": "fail",
        "message": "Array should have a length of 39 but has a length of 40.",
        "type": "test",
        "name": "test_events",
        "duration": 61
      },
      "test_preventCallback": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_preventCallback",
        "duration": 16
      }
    },
    "timestamp": "Friday, September 28, 2012 3:55:40 PM"
  },
  {
    "name": "App",
    "passed": 354,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 354,
    "duration": 8628,
    "type": "report",
    "App Base": {
      "name": "App Base",
      "passed": 86,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 86,
      "duration": 2042,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 13,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 13,
        "duration": 249,
        "type": "testcase",
        "`container` should default to the `<body>`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`container` should default to the `<body>`",
          "duration": 7
        },
        "A specified `container` should be used during construction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A specified `container` should be used during construction",
          "duration": 11
        },
        "`viewContainer` should be a new `<div\/>` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`viewContainer` should be a new `<div\/>` by default",
          "duration": 50
        },
        "A specified `viewContainer` should be used during construction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A specified `viewContainer` should be used during construction",
          "duration": 13
        },
        "`activeView` should be undefined by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should be undefined by default",
          "duration": 6
        },
        "`activeView` should not be overrideable in the constructor config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should not be overrideable in the constructor config",
          "duration": 8
        },
        "`linkSelector` should be `\"a\"` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`linkSelector` should be `\"a\"` by default",
          "duration": 6
        },
        "`serverRouting` should default to undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should default to undefined",
          "duration": 6
        },
        "`serverRouting` should be overrideable via the constructor": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should be overrideable via the constructor",
          "duration": 6
        },
        "`views` property should be empty by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`views` property should be empty by default",
          "duration": 6
        },
        "`views` should be a copy of the `views` object on the prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`views` should be a copy of the `views` object on the prototype",
          "duration": 7
        },
        "Destroying an app with `{remove: true}` should destroy its `container` and `viewContainer`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Destroying an app with `{remove: true}` should destroy its `container` and `viewContainer`",
          "duration": 19
        },
        "Destroying an app with `{remove: true}` with the `<body>` for a container should only remove its CSS classes, not the body from the DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Destroying an app with `{remove: true}` with the `<body>` for a container should only remove its CSS classes, not the body from the DOM",
          "duration": 8
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 274,
        "type": "testcase",
        "`activeView` should be read-only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should be read-only",
          "duration": 20
        },
        "`activeView` should be modifiable via the `showView()` method": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should be modifiable via the `showView()` method",
          "duration": 18
        },
        "`container` and `viewContainer` should be able to be the same node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`container` and `viewContainer` should be able to be the same node",
          "duration": 9
        },
        "`container` should be stamped with the App CSS class": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`container` should be stamped with the App CSS class",
          "duration": 15
        },
        "`viewContainer` should be stamped with the App Views CSS class when the app is rendered": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`viewContainer` should be stamped with the App Views CSS class when the app is rendered",
          "duration": 16
        },
        "`viewContainer` should only be settable during initialization": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`viewContainer` should only be settable during initialization",
          "duration": 16
        },
        "`Y.App.serverRouting` should be `undefined` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.serverRouting` should be `undefined` by default",
          "duration": 1
        },
        "`serverRouting` should default to the value of `Y.App.serverRouting`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should default to the value of `Y.App.serverRouting`",
          "duration": 18
        },
        "`serverRouting` should only be settable during initialization": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should only be settable during initialization",
          "duration": 12
        },
        "`serverRouting` should only be settable with a user-specified value during initialization": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should only be settable with a user-specified value during initialization",
          "duration": 12
        },
        "Setting `serverRouting` to `false` should force `html5` to default to `false` in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `false` should force `html5` to default to `false` in HTML5 browsers",
          "duration": 13
        },
        "Setting `serverRouting` to `false` should force `html5` to default to `false` in non-HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `false` should force `html5` to default to `false` in non-HTML5 browsers",
          "duration": 14
        },
        "Setting `serverRouting` to `true` should allow `html5` to default to `true` in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `true` should allow `html5` to default to `true` in HTML5 browsers",
          "duration": 15
        },
        "Setting `serverRouting` to `true` should allow `html5` to default to `false` in non-HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `true` should allow `html5` to default to `false` in non-HTML5 browsers",
          "duration": 14
        },
        "Setting `serverRouting` to `undefined` should allow `html5` to default to `true` in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `undefined` should allow `html5` to default to `true` in HTML5 browsers",
          "duration": 12
        },
        "Setting `serverRouting` to `undefined` should allow `html5` to default to `false` in non-HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `undefined` should allow `html5` to default to `false` in non-HTML5 browsers",
          "duration": 11
        },
        "`html5` should be overridable on construction even when `serverRouting` is false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`html5` should be overridable on construction even when `serverRouting` is false",
          "duration": 16
        }
      },
      "Events": {
        "name": "Events",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 283,
        "type": "testcase",
        "`navigate` should fire when `serverRouting` is falsy, even when `html5` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate` should fire when `serverRouting` is falsy, even when `html5` is `false`",
          "duration": 237
        },
        "`navigate` event should fire when a link is clicked": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate` event should fire when a link is clicked",
          "duration": 11
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 171,
        "type": "testcase",
        "`createView()` should always return a new `Y.View` instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should always return a new `Y.View` instance",
          "duration": 10
        },
        "`createView()` should return a new instance of a named, registered view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should return a new instance of a named, registered view",
          "duration": 7
        },
        "`createView()` should apply the specified `config` to the new `Y.View` instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should apply the specified `config` to the new `Y.View` instance",
          "duration": 12
        },
        "`createView()` should apply the specified `config` to the new instance of a named, registered view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should apply the specified `config` to the new instance of a named, registered view",
          "duration": 12
        },
        "`getViewInfo()` should return the metadata for a named, registered view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`getViewInfo()` should return the metadata for a named, registered view",
          "duration": 6
        },
        "`getViewInfo()` should return the metadata for a view constructed by `createView()`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`getViewInfo()` should return the metadata for a view constructed by `createView()`",
          "duration": 7
        },
        "`render()` should append the `viewContainer` into the `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should append the `viewContainer` into the `container`",
          "duration": 10
        },
        "`render()` should properly handle the `container` already containing the `viewContainer": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should properly handle the `container` already containing the `viewContainer",
          "duration": 14
        },
        "`render()` should properly handle the `container` and `viewContainer` being the same node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should properly handle the `container` and `viewContainer` being the same node",
          "duration": 10
        },
        "`render()` should append the `activeView` to the `viewContainer`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should append the `activeView` to the `viewContainer`",
          "duration": 17
        }
      },
      "Views": {
        "name": "Views",
        "passed": 34,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 34,
        "duration": 872,
        "type": "testcase",
        "A registered view with falsy `type` should default to `Y.View`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view with falsy `type` should default to `Y.View`",
          "duration": 14
        },
        "A registered view with a function `type` should return an instance of that function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view with a function `type` should return an instance of that function",
          "duration": 9
        },
        "A registered view with a string `type` should look on the `Y` object for the constructor": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view with a string `type` should look on the `Y` object for the constructor",
          "duration": 11
        },
        "A View instance should be preserved when registered with `preserve` as `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A View instance should be preserved when registered with `preserve` as `true`",
          "duration": 25
        },
        "A view registered with a specified `instance` should be preserved when `preserve` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A view registered with a specified `instance` should be preserved when `preserve` is `true`",
          "duration": 35
        },
        "A View instance should not be preserved when registered with `preserve` as `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A View instance should not be preserved when registered with `preserve` as `false`",
          "duration": 67
        },
        "A registered view should not be preserved by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view should not be preserved by default",
          "duration": 48
        },
        "Parent\/child view relationships should be determinable from the `views` metadata": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Parent\/child view relationships should be determinable from the `views` metadata",
          "duration": 6
        },
        "Parent\/child view relationships should be determinable from view instances": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Parent\/child view relationships should be determinable from view instances",
          "duration": 9
        },
        "`Y.App` subclasses should be able to specify view metadata on the `prototype`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App` subclasses should be able to specify view metadata on the `prototype`",
          "duration": 7
        },
        "The `views` metadata on the `prototype` should be merged with the specified `views` during construction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "The `views` metadata on the `prototype` should be merged with the specified `views` during construction",
          "duration": 7
        },
        "`showView()` should set the specified view instance or name as the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should set the specified view instance or name as the `activeView`",
          "duration": 36
        },
        "`showView()` should construct a registered view instance with the specified `config`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should construct a registered view instance with the specified `config`",
          "duration": 18
        },
        "`showView()` should accept a `null` `view`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should accept a `null` `view`",
          "duration": 24
        },
        "`showView()` should prepend the new `activeView` when `options.prepend` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should prepend the new `activeView` when `options.prepend` is `true`",
          "duration": 25
        },
        "`showView()` should update the attributes of the `view` with the `config` when `options.update` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should update the attributes of the `view` with the `config` when `options.update` is `true`",
          "duration": 22
        },
        "`showView()` should not update the attributes of the `view` with the `config` when `options.update` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not update the attributes of the `view` with the `config` when `options.update` is `false`",
          "duration": 21
        },
        "`showView()` should not update the attributes of the `view` with the `config` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not update the attributes of the `view` with the `config` by default",
          "duration": 21
        },
        "`showView()` should render a newly-created `view` when `options.render` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should render a newly-created `view` when `options.render` is `true`",
          "duration": 21
        },
        "`showView()` should render an existing `view` when `options.render` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should render an existing `view` when `options.render` is `true`",
          "duration": 28
        },
        "`showView()` should not render a newly-created `view` when `options.render` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not render a newly-created `view` when `options.render` is `false`",
          "duration": 22
        },
        "`showView()` should not render an existing `view` when `options.render` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not render an existing `view` when `options.render` is `false`",
          "duration": 30
        },
        "`showView()` should render a newly-created `view` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should render a newly-created `view` by default",
          "duration": 19
        },
        "`showView()` should not render an existing `view` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not render an existing `view` by default",
          "duration": 28
        },
        "`options` passed to `showView()` should be mixed into the `activeViewChange` event facade": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`options` passed to `showView()` should be mixed into the `activeViewChange` event facade",
          "duration": 20
        },
        "`showView()` should accept a `callback` as either the third or fourth param": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should accept a `callback` as either the third or fourth param",
          "duration": 37
        },
        "`showView()` should call the specified `callback` with `this` context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should call the specified `callback` with `this` context",
          "duration": 18
        },
        "`showView()` should pass the new `activeView` to the `callback`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should pass the new `activeView` to the `callback`",
          "duration": 21
        },
        "`showView()` should call the specified `callback` even when the `activeView` did not change": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should call the specified `callback` even when the `activeView` did not change",
          "duration": 21
        },
        "`activeViewChange` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeViewChange` event should be preventable",
          "duration": 9
        },
        "An `activeView` should bubble events to the app": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "An `activeView` should bubble events to the app",
          "duration": 20
        },
        "The previous `activeView` should no longer bubble events to the app": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "The previous `activeView` should no longer bubble events to the app",
          "duration": 30
        },
        "A preserved view should not be destroyed when its no longer the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A preserved view should not be destroyed when its no longer the `activeView`",
          "duration": 29
        },
        "A non preserved view should be destroyed when its no longer the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A non preserved view should be destroyed when its no longer the `activeView`",
          "duration": 30
        }
      },
      "Naivation": {
        "name": "Naivation",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 169,
        "type": "testcase",
        "`_upgradeURL()` should upgrade a path-like hash-based URL to a full URL": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should upgrade a path-like hash-based URL to a full URL",
          "duration": 8
        },
        "`_upgradeURL()` should not upgrade a hash-based URL which is not path-like": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should not upgrade a hash-based URL which is not path-like",
          "duration": 6
        },
        "`_upgradeURL()` should strip any hash-prefix from the hash-based URL": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should strip any hash-prefix from the hash-based URL",
          "duration": 7
        },
        "`_upgradeURL()` should not upgrade URLs of a different origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should not upgrade URLs of a different origin",
          "duration": 6
        },
        "`navigate()` should upgrade hash-based URLs when `serverRouting` is falsy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should upgrade hash-based URLs when `serverRouting` is falsy",
          "duration": 8
        },
        "`navigate()` should upgrade hash-based URLs when `serverRouting` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should upgrade hash-based URLs when `serverRouting` is `true`",
          "duration": 8
        },
        "`navigate()` should force the firing of the `navigate` event when `serverRouting` is falsy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should force the firing of the `navigate` event when `serverRouting` is falsy",
          "duration": 7
        },
        "`navigate()` should replace the history entry when the new and current URLs are the \"same\"": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should replace the history entry when the new and current URLs are the \"same\"",
          "duration": 9
        },
        "`navigate()` should not override user-specified values for `force` and `replace`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should not override user-specified values for `force` and `replace`",
          "duration": 7
        },
        "`_save()` should throw an error when the specified URL is not of the same origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_save()` should throw an error when the specified URL is not of the same origin",
          "duration": 14
        }
      }
    },
    "App Content": {
      "name": "App Content",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 668,
      "type": "testsuite",
      "Properties": {
        "name": "Properties",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 30,
        "type": "testcase",
        "Y.App.Content.route should be a stack of middleware": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.App.Content.route should be a stack of middleware",
          "duration": 1
        }
      },
      "Views": {
        "name": "Views",
        "passed": 11,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 11,
        "duration": 257,
        "type": "testcase",
        "`showContent()` should set the `activeView` of an app based on the specified `content`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should set the `activeView` of an app based on the specified `content`",
          "duration": 19
        },
        "`showContent()` should accept an HTMLElement, String, or Node as the content": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should accept an HTMLElement, String, or Node as the content",
          "duration": 31
        },
        "`showContent()` should use the only child of a document fragment as the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should use the only child of a document fragment as the view `container`",
          "duration": 17
        },
        "`showContent()` should not use the only text node child of a document fragment as the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should not use the only text node child of a document fragment as the view `container`",
          "duration": 21
        },
        "`showContent()` should wrap the children nodes of a document fragment with the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should wrap the children nodes of a document fragment with the view `container`",
          "duration": 23
        },
        "`showContent()` should accept a `callback` as either the second or third argument": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should accept a `callback` as either the second or third argument",
          "duration": 19
        },
        "`showContent()` should create an instance of the specified `view`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should create an instance of the specified `view`",
          "duration": 17
        },
        "`showContent() should not render the view by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent() should not render the view by default",
          "duration": 23
        },
        "`showContent()` should use the `contentTemplate` of the view when a document fragment has multiple children": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should use the `contentTemplate` of the view when a document fragment has multiple children",
          "duration": 23
        },
        "`showView()` should apply the `options.view.config` to the view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should apply the `options.view.config` to the view",
          "duration": 17
        },
        "`showContent()` should _always_ use `content` as the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should _always_ use `content` as the view `container`",
          "duration": 23
        }
      },
      "Routes": {
        "name": "Routes",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 362,
        "type": "testcase",
        "`Y.App.Content.route` should load HTML content from the server and set the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.Content.route` should load HTML content from the server and set the `activeView`",
          "duration": 50
        },
        "`Y.App.Content.route` should load text content from the server and set the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.Content.route` should load text content from the server and set the `activeView`",
          "duration": 50
        },
        "`Y.App.Content.route` should default the document `title` to `<title>`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.Content.route` should default the document `title` to `<title>`",
          "duration": 139
        },
        "`loadContent()` middleware should put `ioURL` on the `req` object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`loadContent()` middleware should put `ioURL` on the `req` object",
          "duration": 34
        },
        "`loadContent()` middleware should put `content` and `ioResponse` on the `res` object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`loadContent()` middleware should put `content` and `ioResponse` on the `res` object",
          "duration": 75
        }
      }
    },
    "LazyModelList": {
      "name": "LazyModelList",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 311,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 28,
        "type": "testcase",
        "destructor should detach all revived models from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should detach all revived models from the list",
          "duration": 5
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 279,
        "type": "testcase",
        "add() should add everything as objects, not models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add everything as objects, not models",
          "duration": 8
        },
        "add() should generate a clientId for added objects if necessary": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should generate a clientId for added objects if necessary",
          "duration": 3
        },
        "free() should free the given model or model index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "free() should free the given model or model index",
          "duration": 5
        },
        "free() with no args should free all models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "free() with no args should free all models",
          "duration": 5
        },
        "get() should get properties, not attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "get() should get properties, not attributes",
          "duration": 3
        },
        "getAsHTML() should get properties, not attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should get properties, not attributes",
          "duration": 3
        },
        "getAsURL() should get properties, not attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should get properties, not attributes",
          "duration": 3
        },
        "indexOf() should find objects in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should find objects in the list",
          "duration": 3
        },
        "indexOf() should find revived models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should find revived models in the list",
          "duration": 5
        },
        "remove() should accept both objects and models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should accept both objects and models",
          "duration": 4
        },
        "remove() should maintain indices for revived models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should maintain indices for revived models",
          "duration": 5
        },
        "reset() should accept an array of objects\/models or a ModelList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should accept an array of objects\/models or a ModelList",
          "duration": 13
        },
        "revive() should revive an index into a model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "revive() should revive an index into a model",
          "duration": 4
        },
        "revive() should revive an object into a model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "revive() should revive an object into a model",
          "duration": 3
        },
        "revive() with no args should revive all models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "revive() with no args should revive all models in the list",
          "duration": 5
        },
        "_isInList() should indicate whether an item is in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_isInList() should indicate whether an item is in the list",
          "duration": 2
        },
        "_modelToObject() should convert a model instance to a plain object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_modelToObject() should convert a model instance to a plain object",
          "duration": 4
        }
      }
    },
    "Model": {
      "name": "Model",
      "passed": 48,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 48,
      "duration": 823,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 93,
        "type": "testcase",
        "destroy() should destroy the model instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should destroy the model instance",
          "duration": 4
        },
        "destroy() should call a callback if provided as the only arg": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should call a callback if provided as the only arg",
          "duration": 4
        },
        "destroy() should call a callback if provided as the second arg": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should call a callback if provided as the second arg",
          "duration": 4
        },
        "destroy() should delete the model if the `remove` option is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should delete the model if the `remove` option is truthy",
          "duration": 4
        },
        "destroy() should remove the model from all lists": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should remove the model from all lists",
          "duration": 12
        }
      },
      "Attributes and Properties": {
        "name": "Attributes and Properties",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 154,
        "type": "testcase",
        "Attributes should be settable at instantiation time": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Attributes should be settable at instantiation time",
          "duration": 3
        },
        "Models should allow ad-hoc attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Models should allow ad-hoc attributes",
          "duration": 6
        },
        "Custom id attribute should be settable at instantiation time": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Custom id attribute should be settable at instantiation time",
          "duration": 13
        },
        "`_isYUIModel` property should be true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_isYUIModel` property should be true",
          "duration": 2
        },
        "`id` attribute should be an alias for the custom id attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`id` attribute should be an alias for the custom id attribute",
          "duration": 4
        },
        "`changed` property should be a hash of attributes that have changed since last save() or load()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`changed` property should be a hash of attributes that have changed since last save() or load()",
          "duration": 8
        },
        "clientId attribute should be automatically generated": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clientId attribute should be automatically generated",
          "duration": 4
        },
        "`lastChange` property should contain attributes that changed in the last `change` event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`lastChange` property should contain attributes that changed in the last `change` event",
          "duration": 5
        },
        "`lists` property should be an array of ModelList instances that contain this model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`lists` property should be an array of ModelList instances that contain this model",
          "duration": 11
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 25,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 25,
        "duration": 388,
        "type": "testcase",
        "generateClientId() should generate a unique client id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "generateClientId() should generate a unique client id",
          "duration": 2
        },
        "getAsHTML() should return an HTML-escaped attribute value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should return an HTML-escaped attribute value",
          "duration": 4
        },
        "getAsURL() should return a URL-encoded attribute value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should return a URL-encoded attribute value",
          "duration": 3
        },
        "isModified() should return true if the model is new": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "isModified() should return true if the model is new",
          "duration": 5
        },
        "isModified() should return true if the model has changed since it was last saved": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "isModified() should return true if the model has changed since it was last saved",
          "duration": 6
        },
        "isNew() should return true if the model is new": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "isNew() should return true if the model is new",
          "duration": 7
        },
        "load() should delegate to sync()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should delegate to sync()",
          "duration": 4
        },
        "load() should reset this.changed when loading succeeds": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should reset this.changed when loading succeeds",
          "duration": 4
        },
        "load() should be chainable and should call the callback if one was provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should be chainable and should call the callback if one was provided",
          "duration": 4
        },
        "parse() should parse a JSON string and return an object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should parse a JSON string and return an object",
          "duration": 3
        },
        "parse() should not try to parse non-strings": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should not try to parse non-strings",
          "duration": 4
        },
        "save() should delegate to sync()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should delegate to sync()",
          "duration": 6
        },
        "save() should reset this.changed when saving succeeds": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should reset this.changed when saving succeeds",
          "duration": 5
        },
        "save() should be chainable and should call the callback if one was provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should be chainable and should call the callback if one was provided",
          "duration": 4
        },
        "set() should set the value of a single attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set() should set the value of a single attribute",
          "duration": 3
        },
        "setAttrs() should set the values of multiple attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "setAttrs() should set the values of multiple attributes",
          "duration": 4
        },
        "sync() should just call the supplied callback by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sync() should just call the supplied callback by default",
          "duration": 3
        },
        "toJSON() should return a copy of the model's attributes, minus excluded ones": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "toJSON() should return a copy of the model's attributes, minus excluded ones",
          "duration": 7
        },
        "undo() should revert the previous change to the model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should revert the previous change to the model",
          "duration": 5
        },
        "undo() should revert only the specified attributes when attributes are specified": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should revert only the specified attributes when attributes are specified",
          "duration": 4
        },
        "undo() should pass options to setAttrs()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should pass options to setAttrs()",
          "duration": 4
        },
        "undo() should do nothing when there is no previous change to revert": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should do nothing when there is no previous change to revert",
          "duration": 2
        },
        "validate() should only be called on save()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "validate() should only be called on save()",
          "duration": 5
        },
        "a validation failure should abort a save() call": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "a validation failure should abort a save() call",
          "duration": 5
        },
        "validate() should be backwards compatible with the 3.4.x synchronous style": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "validate() should be backwards compatible with the 3.4.x synchronous style",
          "duration": 7
        }
      },
      "Events": {
        "name": "Events",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 167,
        "type": "testcase",
        "`change` event should contain coalesced attribute changes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event should contain coalesced attribute changes",
          "duration": 4
        },
        "`change` event should not fire when the _silent_ option is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event should not fire when the _silent_ option is truthy",
          "duration": 5
        },
        "`change` event facade should contain options passed to set()\/setAttrs()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event facade should contain options passed to set()\/setAttrs()",
          "duration": 6
        },
        "`error` event should fire when validation fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when validation fails",
          "duration": 5
        },
        "`error` event should fire when parsing fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when parsing fails",
          "duration": 10
        },
        "`error` event should fire when a load operation fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a load operation fails",
          "duration": 22
        },
        "`error` event should fire when a save operation fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a save operation fails",
          "duration": 5
        },
        "`load` event should fire after a successful load operation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`load` event should fire after a successful load operation",
          "duration": 5
        },
        "`save` event should fire after a successful save operation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`save` event should fire after a successful save operation",
          "duration": 27
        }
      }
    },
    "ModelList": {
      "name": "ModelList",
      "passed": 84,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 84,
      "duration": 1373,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 46,
        "type": "testcase",
        "constructor: should add a model instance, array of model instances, or ModelList instance to the list when passed in the `items` config property": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "constructor: should add a model instance, array of model instances, or ModelList instance to the list when passed in the `items` config property",
          "duration": 25
        },
        "destructor should detach all models from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should detach all models from the list",
          "duration": 5
        }
      },
      "Attributes & Properties": {
        "name": "Attributes & Properties",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 92,
        "type": "testcase",
        "ModelList instances should have an `_isYUIModelList` property": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ModelList instances should have an `_isYUIModelList` property",
          "duration": 2
        },
        "ModelList instances should have a `model` property that defaults to Y.Model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ModelList instances should have a `model` property that defaults to Y.Model",
          "duration": 2
        },
        "`model` property should be customizable on init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`model` property should be customizable on init",
          "duration": 5
        },
        "`model` property should evaluate a string to a namespaced class on `Y`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`model` property should evaluate a string to a namespaced class on `Y`",
          "duration": 5
        },
        "`model` property should support deeply-nested names": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`model` property should support deeply-nested names",
          "duration": 5
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 55,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 55,
        "duration": 871,
        "type": "testcase",
        "add() should add a model to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add a model to the list",
          "duration": 9
        },
        "add() should add a model to the list at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add a model to the list at the specified index",
          "duration": 14
        },
        "add() should add an array of models to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add an array of models to the list",
          "duration": 10
        },
        "add() should add an array of models to the list at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add an array of models to the list at the specified index",
          "duration": 13
        },
        "add() should add models in another ModelList to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add models in another ModelList to the list",
          "duration": 8
        },
        "add() should add models in another ModelList to the list at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add models in another ModelList to the list at the specified index",
          "duration": 15
        },
        "add() should support models created in other windows": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should support models created in other windows",
          "duration": 4
        },
        "comparator() should be undefined by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "comparator() should be undefined by default",
          "duration": 2
        },
        "models should be added in the proper position based on the comparator": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "models should be added in the proper position based on the comparator",
          "duration": 15
        },
        "create() should create or update a model, then add it to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should create or update a model, then add it to the list",
          "duration": 11
        },
        "create() should call the callback if one is provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should call the callback if one is provided",
          "duration": 8
        },
        "create() should pass an error to the callback if one occurs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should pass an error to the callback if one occurs",
          "duration": 5
        },
        "create() should support models created in other windows": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should support models created in other windows",
          "duration": 6
        },
        "each() should iterate over the models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should iterate over the models in the list",
          "duration": 9
        },
        "each() should accept an optional context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should accept an optional context",
          "duration": 9
        },
        "each() should iterate over a copy of the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should iterate over a copy of the list",
          "duration": 9
        },
        "filter() should filter the list and return an array": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "filter() should filter the list and return an array",
          "duration": 12
        },
        "filter() should return an empty array if the callback never returns a truthy value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "filter() should return an empty array if the callback never returns a truthy value",
          "duration": 5
        },
        "filter() should return a new ModelList when options.asList is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "filter() should return a new ModelList when options.asList is truthy",
          "duration": 13
        },
        "get() should return an array of attribute values from all models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "get() should return an array of attribute values from all models in the list",
          "duration": 7
        },
        "get() should return a list attribute if there is one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "get() should return a list attribute if there is one",
          "duration": 6
        },
        "getAsHTML() should return an array of HTML-escaped attribute values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should return an array of HTML-escaped attribute values",
          "duration": 7
        },
        "getAsHTML() should return a list attribute if there is one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should return a list attribute if there is one",
          "duration": 6
        },
        "getAsURL() should return an array of URL-encoded attribute values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should return an array of URL-encoded attribute values",
          "duration": 6
        },
        "getAsURL() should return a list attribute if there is one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should return a list attribute if there is one",
          "duration": 6
        },
        "getByClientId() should look up a model by its clientId": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByClientId() should look up a model by its clientId",
          "duration": 4
        },
        "getById() should look up a model by its id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getById() should look up a model by its id",
          "duration": 5
        },
        "getById() should work with numeric ids": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getById() should work with numeric ids",
          "duration": 4
        },
        "getById() should work with custom ids": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getById() should work with custom ids",
          "duration": 5
        },
        "invoke() should call the named method on every model in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "invoke() should call the named method on every model in the list",
          "duration": 8
        },
        "item() should return the model at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "item() should return the model at the specified index",
          "duration": 6
        },
        "load() should delegate to sync()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should delegate to sync()",
          "duration": 3
        },
        "load() should be chainable and should call the callback if one was provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should be chainable and should call the callback if one was provided",
          "duration": 4
        },
        "load() should reset the list with the loaded items": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should reset the list with the loaded items",
          "duration": 6
        },
        "load() callback should receive an error when a sync error occurs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() callback should receive an error when a sync error occurs",
          "duration": 3
        },
        "map() should execute a function on every model in the list and return an array of return values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "map() should execute a function on every model in the list and return an array of return values",
          "duration": 6
        },
        "parse() should parse a JSON string and return an object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should parse a JSON string and return an object",
          "duration": 3
        },
        "parse() should not try to parse non-strings": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should not try to parse non-strings",
          "duration": 2
        },
        "remove() should remove a single model from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove a single model from the list",
          "duration": 6
        },
        "remove() should remove a single model from the list by index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove a single model from the list by index",
          "duration": 7
        },
        "remove() should remove an array of models from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove an array of models from the list",
          "duration": 7
        },
        "remove() should remove an array of models from the list by index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove an array of models from the list by index",
          "duration": 9
        },
        "remove() should remove models in another ModelList from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove models in another ModelList from the list",
          "duration": 9
        },
        "reset() should replace all models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should replace all models in the list",
          "duration": 11
        },
        "reset() should sort the new models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should sort the new models in the list",
          "duration": 13
        },
        "reset() with no args should clear the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() with no args should clear the list",
          "duration": 6
        },
        "reset() should add models in another ModelList to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should add models in another ModelList to the list",
          "duration": 9
        },
        "reset() should support models created in other windows": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should support models created in other windows",
          "duration": 3
        },
        "some() should iterate over the models in the list and stop when the callback returns `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should iterate over the models in the list and stop when the callback returns `true`",
          "duration": 8
        },
        "some() should accept an optional context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should accept an optional context",
          "duration": 8
        },
        "some() should iterate over a copy of the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should iterate over a copy of the list",
          "duration": 8
        },
        "sort() should re-sort the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sort() should re-sort the list",
          "duration": 12
        },
        "sync() should just call the supplied callback by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sync() should just call the supplied callback by default",
          "duration": 2
        },
        "toArray() should return an array containing all the models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "toArray() should return an array containing all the models in the list",
          "duration": 6
        },
        "toJSON() should return an array of model hashes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "toJSON() should return an array of model hashes",
          "duration": 11
        }
      },
      "Events": {
        "name": "Events",
        "passed": 22,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 22,
        "duration": 357,
        "type": "testcase",
        "`add` event should fire when a model is added": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`add` event should fire when a model is added",
          "duration": 9
        },
        "`add` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`add` event should be preventable",
          "duration": 5
        },
        "`add` event should not fire when a model is added silently": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`add` event should not fire when a model is added silently",
          "duration": 8
        },
        "`change` event should bubble up from models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event should bubble up from models",
          "duration": 7
        },
        "`create` event should fire when a model is created": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`create` event should fire when a model is created",
          "duration": 6
        },
        "`create` event should receive options passed to the create() method": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`create` event should receive options passed to the create() method",
          "duration": 6
        },
        "`error` event should bubble up from models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should bubble up from models",
          "duration": 7
        },
        "`error` event should fire when a model with a duplicate clientId is added": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a model with a duplicate clientId is added",
          "duration": 8
        },
        "`error` event should fire when a model with a duplicate id is added": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a model with a duplicate id is added",
          "duration": 12
        },
        "`error` event should fire when a model that isn't in the list is removed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a model that isn't in the list is removed",
          "duration": 5
        },
        "`error` event should fire when a sync layer response can't be parsed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a sync layer response can't be parsed",
          "duration": 8
        },
        "`load` event should fire after a successful load operation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`load` event should fire after a successful load operation",
          "duration": 16
        },
        "`reset` event should fire when the list is reset or sorted": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should fire when the list is reset or sorted",
          "duration": 9
        },
        "`reset` event facade should contain sorted models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event facade should contain sorted models",
          "duration": 16
        },
        "`reset` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should be preventable",
          "duration": 5
        },
        "`reset` event should not fire when the list is reset silently": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should not fire when the list is reset silently",
          "duration": 34
        },
        "`reset` event should allow the caller to override the `src` property on the event facade": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should allow the caller to override the `src` property on the event facade",
          "duration": 4
        },
        "`remove` event should fire when a model is removed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`remove` event should fire when a model is removed",
          "duration": 12
        },
        "`remove` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`remove` event should be preventable",
          "duration": 7
        },
        "`remove` event should not fire when a model is removed silently": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`remove` event should not fire when a model is removed silently",
          "duration": 14
        },
        "list should update its id map when a model id changes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "list should update its id map when a model id changes",
          "duration": 8
        },
        "list should ignore id changes for models not in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "list should ignore id changes for models not in the list",
          "duration": 10
        }
      }
    },
    "ModelSync.REST": {
      "name": "ModelSync.REST",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 544,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 46,
        "type": "testcase",
        "initializer should set the `root` property on the instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should set the `root` property on the instance",
          "duration": 4
        },
        "initializer should set the `url` property on the instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should set the `url` property on the instance",
          "duration": 5
        }
      },
      "Properties": {
        "name": "Properties",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 60,
        "type": "testcase",
        "`root` property should be an empty string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`root` property should be an empty string by default",
          "duration": 4
        },
        "`url` property should be an empty string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`url` property should be an empty string by default",
          "duration": 4
        },
        "Static `CSRF_TOKEN` should default to the value of `YUI.Env.CSRF_TOKEN`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Static `CSRF_TOKEN` should default to the value of `YUI.Env.CSRF_TOKEN`",
          "duration": 1
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 279,
        "type": "testcase",
        "getURL() should return an empty string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should return an empty string by default",
          "duration": 5
        },
        "getURL() of a model list should return the `root` of its model by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model list should return the `root` of its model by default",
          "duration": 3
        },
        "getURL() of a model list should return its `url` if defined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model list should return its `url` if defined",
          "duration": 3
        },
        "getURL() of a new model should return its `root` if defined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a new model should return its `root` if defined",
          "duration": 3
        },
        "getURL() of a model should return its `root` when the `action` is \"create\"": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `root` when the `action` is \"create\"",
          "duration": 3
        },
        "getURL() of a model should return its `root` joined with its `id` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `root` joined with its `id` by default",
          "duration": 3
        },
        "getURL() of a model should return its `root` joined with its `id` and normalize slashes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `root` joined with its `id` and normalize slashes",
          "duration": 3
        },
        "getURL() of a model should return its `url` if defined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `url` if defined",
          "duration": 3
        },
        "getURL() should substitute tokenized `url`s with attribute values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should substitute tokenized `url`s with attribute values",
          "duration": 5
        },
        "getURL() should substitute tokenized `url`s with `options` values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should substitute tokenized `url`s with `options` values",
          "duration": 7
        },
        "getURL() should substitute tokenized `url`s with attribute and `options` values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should substitute tokenized `url`s with attribute and `options` values",
          "duration": 8
        },
        "getURL() should URL-encode the `url` substitution values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should URL-encode the `url` substitution values",
          "duration": 3
        },
        "getURL() should not substitute Arrays, Objects, or Boolean values into the `url`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should not substitute Arrays, Objects, or Boolean values into the `url`",
          "duration": 4
        },
        "parse() should receive the full Y.io response object when `parseIOResponse is falsy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should receive the full Y.io response object when `parseIOResponse is falsy",
          "duration": 5
        },
        "parseIOResponse() should alter the response passed to `parse()`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parseIOResponse() should alter the response passed to `parse()`",
          "duration": 6
        },
        "serialize() should return a JSON string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "serialize() should return a JSON string by default",
          "duration": 5
        },
        "serialize() should be passed the `sync()` `action`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "serialize() should be passed the `sync()` `action`",
          "duration": 4
        }
      },
      "Sync": {
        "name": "Sync",
        "passed": 8,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 8,
        "duration": 139,
        "type": "testcase",
        "load() should perform a GET XHR the `url` of the model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should perform a GET XHR the `url` of the model",
          "duration": 5
        },
        "load() should perform a GET XHR the `root` of the model list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should perform a GET XHR the `root` of the model list",
          "duration": 8
        },
        "save() should perform a POST XHR to the `root` of a new model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should perform a POST XHR to the `root` of a new model",
          "duration": 7
        },
        "save() should perform a PUT XHR to the `url` an exiting model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should perform a PUT XHR to the `url` an exiting model",
          "duration": 8
        },
        "destroy({remove: true}) should perform a DELETE XHR to the `url` an exiting model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy({remove: true}) should perform a DELETE XHR to the `url` an exiting model",
          "duration": 4
        },
        "EMULATE_HTTP should use POST instead of PUT or DELETE XHRs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "EMULATE_HTTP should use POST instead of PUT or DELETE XHRs",
          "duration": 9
        },
        "sync() should accept `csrfToken`, `headers`, and `timeout` options": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sync() should accept `csrfToken`, `headers`, and `timeout` options",
          "duration": 5
        },
        "Failed sync() calls should pass the HTTP status code and message to the callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Failed sync() calls should pass the HTTP status code and message to the callback",
          "duration": 3
        }
      }
    },
    "Router": {
      "name": "Router",
      "passed": 50,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 50,
      "duration": 2355,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 46,
        "type": "testcase",
        "initializer should set attributes based on config options": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should set attributes based on config options",
          "duration": 7
        },
        "subclass with default routes should work": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subclass with default routes should work",
          "duration": 8
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 107,
        "type": "testcase",
        "`html5` attribute should have a default value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`html5` attribute should have a default value",
          "duration": 4
        },
        "`root` attribute should have a default value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`root` attribute should have a default value",
          "duration": 6
        },
        "`routes` attribute should have a default value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`routes` attribute should have a default value",
          "duration": 5
        },
        "setting the `routes` attribute should reset all routes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "setting the `routes` attribute should reset all routes",
          "duration": 7
        },
        "`routes` should support both `callback` and `callbacks` properties": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`routes` should support both `callback` and `callbacks` properties",
          "duration": 6
        },
        "`callbacks` should supercede `callback` property for `routes`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`callbacks` should supercede `callback` property for `routes`",
          "duration": 6
        }
      },
      "Events": {
        "name": "Events",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 107,
        "type": "testcase",
        "`ready` event should fire when the router is ready to dispatch": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`ready` event should fire when the router is ready to dispatch",
          "duration": 34
        },
        "`ready` event should set e.dispatched to true if called after dispatch": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`ready` event should set e.dispatched to true if called after dispatch",
          "duration": 33
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 23,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 23,
        "duration": 684,
        "type": "testcase",
        "getPath() should return the current location `pathname` when no hash is set in all browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getPath() should return the current location `pathname` when no hash is set in all browsers",
          "duration": 7
        },
        "getPath() should return the `pathname` in HTML5 browsers and otherwise return the hash path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getPath() should return the `pathname` in HTML5 browsers and otherwise return the hash path",
          "duration": 7
        },
        "getPath() should return the hash path in non HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getPath() should return the hash path in non HTML5 browsers",
          "duration": 9
        },
        "route() should add a route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "route() should add a route",
          "duration": 4
        },
        "match() should return an array of routes that match the given path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "match() should return an array of routes that match the given path",
          "duration": 5
        },
        "hasRoute() should return `true` if one or more routes match the given path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasRoute() should return `true` if one or more routes match the given path",
          "duration": 8
        },
        "hasRoute() should support full URLs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasRoute() should support full URLs",
          "duration": 4
        },
        "hasRoute() should always return `false` for URLs with different origins": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasRoute() should always return `false` for URLs with different origins",
          "duration": 4
        },
        "dispatch() should dispatch to the first route that matches the current URL": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "dispatch() should dispatch to the first route that matches the current URL",
          "duration": 50
        },
        "dispatch() should upgrade hash URLs to HTML5 URLs in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "dispatch() should upgrade hash URLs to HTML5 URLs in HTML5 browsers",
          "duration": 50
        },
        "removeRoot() should remove the root URL from a given path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "removeRoot() should remove the root URL from a given path",
          "duration": 7
        },
        "removeRoot() should strip the origin (\"http:\/\/foo.com\") portion of the URL, if any": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "removeRoot() should strip the origin (\"http:\/\/foo.com\") portion of the URL, if any",
          "duration": 7
        },
        "replace() should replace the current history entry": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "replace() should replace the current history entry",
          "duration": 35
        },
        "save() should create a new history entry": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should create a new history entry",
          "duration": 35
        },
        "consecutive save() calls should dispatch to the correct routes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "consecutive save() calls should dispatch to the correct routes",
          "duration": 75
        },
        "save() should not include the `root` in the hash path if it is already in the `pathname`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should not include the `root` in the hash path if it is already in the `pathname`",
          "duration": 20
        },
        "save() should include the `root` in the hash path if it is not already in the `pathname`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should include the `root` in the hash path if it is not already in the `pathname`",
          "duration": 20
        },
        "save() should dispath in non HTML5 browsers even when the `hash` does not change": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should dispath in non HTML5 browsers even when the `hash` does not change",
          "duration": 18
        },
        "replace() should error when the URL is not from the same origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "replace() should error when the URL is not from the same origin",
          "duration": 34
        },
        "save() should error when the URL is not from the same origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should error when the URL is not from the same origin",
          "duration": 27
        },
        "_joinURL() should normalize \"\/\" separators": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_joinURL() should normalize \"\/\" separators",
          "duration": 5
        },
        "_dispatch() should pass `src` through to request object passed to route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_dispatch() should pass `src` through to request object passed to route handlers",
          "duration": 4
        },
        "_getRegex() should return regexes that do not match too much": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_getRegex() should return regexes that do not match too much",
          "duration": 5
        }
      },
      "Routes": {
        "name": "Routes",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 1387,
        "type": "testcase",
        "routes should be called in the context of the router": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should be called in the context of the router",
          "duration": 5
        },
        "routes should receive a request object, response object, and `next` function as params": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should receive a request object, response object, and `next` function as params",
          "duration": 4
        },
        "routes should support multiple callback functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support multiple callback functions",
          "duration": 4
        },
        "routes should support an array of callback functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support an array of callback functions",
          "duration": 4
        },
        "routes should support an array of callback function string names": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support an array of callback function string names",
          "duration": 4
        },
        "routes should support nested arrays of mixed function and string callbacks": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support nested arrays of mixed function and string callbacks",
          "duration": 5
        },
        "route middleware should be able to skip to the next route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "route middleware should be able to skip to the next route",
          "duration": 5
        },
        "request object should contain captured route parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "request object should contain captured route parameters",
          "duration": 6
        },
        "request object should contain a `pendingRoutes` property": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "request object should contain a `pendingRoutes` property",
          "duration": 5
        },
        "calling `res()` should have the same result as calling `next()`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "calling `res()` should have the same result as calling `next()`",
          "duration": 5
        },
        "calling `next()` should pass control to the next matching route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "calling `next()` should pass control to the next matching route",
          "duration": 5
        },
        "\"*\" should be a catch-all route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "\"*\" should be a catch-all route",
          "duration": 5
        },
        "routes containing a \"*\" should match the segments which follow it": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes containing a \"*\" should match the segments which follow it",
          "duration": 5
        },
        "multiple routers should be able to coexist and have duplicate route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple routers should be able to coexist and have duplicate route handlers",
          "duration": 237
        },
        "multiple nested routers should be able to coexist and duplicate route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple nested routers should be able to coexist and duplicate route handlers",
          "duration": 284
        },
        "multiple nested non-HTML5 routers should be able to coexist and duplicate route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple nested non-HTML5 routers should be able to coexist and duplicate route handlers",
          "duration": 269
        },
        "multiple routers should respond to history events after one router is destroyed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple routers should respond to history events after one router is destroyed",
          "duration": 297
        }
      }
    },
    "View": {
      "name": "View",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 326,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 13,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 13,
        "duration": 217,
        "type": "testcase",
        "container should be a <div> node by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "container should be a <div> node by default",
          "duration": 10
        },
        "default container should be created lazily": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "default container should be created lazily",
          "duration": 23
        },
        "container events should be attached lazily when specified via a valueFn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "container events should be attached lazily when specified via a valueFn",
          "duration": 9
        },
        "container events should be attached lazily when specified via an attr value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "container events should be attached lazily when specified via an attr value",
          "duration": 7
        },
        "events property should be an empty object by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "events property should be an empty object by default",
          "duration": 2
        },
        "events with missing handler functions should not cause an error during destruction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "events with missing handler functions should not cause an error during destruction",
          "duration": 8
        },
        "initializer should allow setting a ad-hoc attrs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting a ad-hoc attrs",
          "duration": 4
        },
        "initializer should allow setting a containerTemplate at init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting a containerTemplate at init",
          "duration": 2
        },
        "initializer should allow setting events at init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting events at init",
          "duration": 3
        },
        "initializer should allow setting a template at init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting a template at init",
          "duration": 2
        },
        "create() should not be called on init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should not be called on init",
          "duration": 3
        },
        "destructor should not remove the container by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should not remove the container by default",
          "duration": 17
        },
        "destructor should remove the container from the DOM if `remove` options is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should remove the container from the DOM if `remove` options is truthy",
          "duration": 9
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 30,
        "type": "testcase",
        "attachEvents() should be called when the container attr changes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "attachEvents() should be called when the container attr changes",
          "duration": 7
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 61,
        "type": "testcase",
        "create() should create and return a container node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should create and return a container node",
          "duration": 7
        },
        "remove() should remove the container node from the DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove the container node from the DOM",
          "duration": 9
        },
        "render() should be a chainable noop": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() should be a chainable noop",
          "duration": 3
        }
      }
    },
    "View.NodeMap": {
      "name": "View.NodeMap",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 98,
      "type": "testsuite",
      "General": {
        "name": "General",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 84,
        "type": "testcase",
        "getByNode() should return a View instance associated with the given Node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByNode() should return a View instance associated with the given Node",
          "duration": 13
        },
        "getByNode() should return the nearest View instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByNode() should return the nearest View instance",
          "duration": 11
        },
        "getByNode() should return null when no View is found": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByNode() should return null when no View is found",
          "duration": 20
        },
        "View should be removed from the instances map when destroy() is called": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "View should be removed from the instances map when destroy() is called",
          "duration": 18
        }
      }
    },
    "timestamp": "Friday, September 28, 2012 3:55:50 PM"
  }
]