var RESULTS = [
  {
    "name": "ArraySort",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 109,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 15,
      "type": "testcase",
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testMixedStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMixedStrings",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:35 PM"
  },
  {
    "name": "Widget: Modality",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 454,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 382,
      "type": "testcase",
      "WidgetModality should add a `modal` attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetModality should add a `modal` attribute",
        "duration": 110
      },
      "WidgetModality should add a mask node when `modal` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetModality should add a mask node when `modal` is `true`",
        "duration": 51
      },
      "WidgetModality should correctly handle one mask node for multiple modal widgets": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetModality should correctly handle one mask node for multiple modal widgets",
        "duration": 189
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:37 PM"
  },
  {
    "name": "Parallel",
    "passed": 10,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 10,
    "duration": 1019,
    "type": "report",
    "Parallel Tests": {
      "name": "Parallel Tests",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 945,
      "type": "testcase",
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 1
      },
      "test_stack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stack",
        "duration": 126
      },
      "test_results": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_results",
        "duration": 136
      },
      "test_returns_data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_returns_data",
        "duration": 120
      },
      "test_nocontext": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_nocontext",
        "duration": 127
      },
      "test_context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_context",
        "duration": 129
      },
      "test_add_nofn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_nofn",
        "duration": 2
      },
      "test_add_nofn_one_arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_nofn_one_arg",
        "duration": 1
      },
      "test_add_nofn_two_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_nofn_two_args",
        "duration": 1
      },
      "test_results_order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_results_order",
        "duration": 102
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:39 PM"
  },
  {
    "name": "OOP",
    "passed": 37,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 37,
    "duration": 238,
    "type": "report",
    "Core": {
      "name": "Core",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 16,
      "type": "testcase",
      "test_clone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_clone",
        "duration": 1
      },
      "test_clone_node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_clone_node",
        "duration": 2
      },
      "test_each": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_each",
        "duration": 1
      },
      "test_extend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_extend",
        "duration": 2
      },
      "test_merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_merge",
        "duration": 1
      }
    },
    "augment()": {
      "name": "augment()",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 44,
      "type": "testcase",
      "receiver object should be augmented with supplier's prototype properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver object should be augmented with supplier's prototype properties",
        "duration": 1
      },
      "receiver object properties should not be overwritten when `overwrite` is not `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver object properties should not be overwritten when `overwrite` is not `true`",
        "duration": 1
      },
      "receiver object properties should be overwritten when `overwrite` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver object properties should be overwritten when `overwrite` is `true`",
        "duration": 1
      },
      "only whitelisted properties should be copied to a receiver object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "only whitelisted properties should be copied to a receiver object",
        "duration": 1
      },
      "supplier constructor should be called immediately when augmenting a receiver object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "supplier constructor should be called immediately when augmenting a receiver object",
        "duration": 1
      },
      "supplier constructor should receive supplied args when augmenting a receiver object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "supplier constructor should receive supplied args when augmenting a receiver object",
        "duration": 1
      },
      "receiver function prototype should be augmented with supplier's prototype properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver function prototype should be augmented with supplier's prototype properties",
        "duration": 1
      },
      "receiver function prototype properties should not be overwritten when `overwrite` is not `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver function prototype properties should not be overwritten when `overwrite` is not `true`",
        "duration": 1
      },
      "receiver function prototype properties should be overwritten when `overwrite` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "receiver function prototype properties should be overwritten when `overwrite` is `true`",
        "duration": 1
      },
      "only whitelisted properties should be copied to a receiver function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "only whitelisted properties should be copied to a receiver function",
        "duration": 0
      },
      "supplier constructor should receive supplied args when augmenting a receiver function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "supplier constructor should receive supplied args when augmenting a receiver function",
        "duration": 1
      },
      "augmenting a Y.Node instance should not overwrite existing properties by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "augmenting a Y.Node instance should not overwrite existing properties by default",
        "duration": 2
      }
    },
    "mix: default mode (object to object)": {
      "name": "mix: default mode (object to object)",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 43,
      "type": "testcase",
      "test [mode 0]: missing receiver or supplier": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: missing receiver or supplier",
        "duration": 1
      },
      "test [mode 0]: returns receiver": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: returns receiver",
        "duration": 1
      },
      "test [mode 0]: no overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: no overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: no overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: no overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 0]: no overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: no overwrite, no whitelist, merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, no whitelist, merge",
        "duration": 2
      },
      "test [mode 0]: overwrite, whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, whitelist, merge",
        "duration": 1
      },
      "test [mode 0]: overwrite, whitelist, toplevel merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 0]: overwrite, whitelist, toplevel merge",
        "duration": 1
      }
    },
    "mix: mode 1 (prototype to prototype)": {
      "name": "mix: mode 1 (prototype to prototype)",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 28,
      "type": "testcase",
      "test [mode 1]: no overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: no overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, no whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, no whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: no overwrite, whitelist, no merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: no overwrite, whitelist, no merge",
        "duration": 1
      },
      "test [mode 1]: no overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: no overwrite, no whitelist, merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, no whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, no whitelist, merge",
        "duration": 1
      },
      "test [mode 1]: overwrite, whitelist, merge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 1]: overwrite, whitelist, merge",
        "duration": 1
      }
    },
    "mix: mode 2 (object to object and prototype to prototype)": {
      "name": "mix: mode 2 (object to object and prototype to prototype)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "test [mode 2]: basic sanity check": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 2]: basic sanity check",
        "duration": 1
      }
    },
    "mix: mode 3 (prototype to object)": {
      "name": "mix: mode 3 (prototype to object)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test [mode 3]: basic sanity check": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 3]: basic sanity check",
        "duration": 1
      }
    },
    "mix: mode 4 (object to prototype)": {
      "name": "mix: mode 4 (object to prototype)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test [mode 4]: basic sanity check": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test [mode 4]: basic sanity check",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:40 PM"
  },
  {
    "name": "Console: Filters",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 225,
    "type": "report",
    "resources": {
      "name": "resources",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 36,
      "type": "testcase",
      "test_module_loaded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_loaded",
        "duration": 13
      },
      "test_skin_loaded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_loaded",
        "duration": 5
      }
    },
    "instantiation": {
      "name": "instantiation",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 78,
      "type": "testcase",
      "test_instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_instantiation",
        "duration": 17
      },
      "test_render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_render",
        "duration": 58
      }
    },
    "ui": {
      "name": "ui",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "Filter controls should be in the footer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Filter controls should be in the footer",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:41 PM"
  },
  {
    "name": "Scrollview Paginator Test Suite",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 5,
    "total": 9,
    "duration": 1492,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 5,
      "total": 9,
      "duration": 1416,
      "type": "testcase",
      "Ensure rendering & initial state are correct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure rendering & initial state are correct",
        "duration": 39
      },
      "sv.next() should advance to the next page": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "sv.next() should advance to the next page"
      },
      "sv.next() on last index should do nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "sv.next() on last index should do nothing"
      },
      "sv.prev() should advance to the previous page": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "sv.prev() should advance to the previous page",
        "duration": 428
      },
      "sv.prev() on index 0 should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "sv.prev() on index 0 should do nothing",
        "duration": 540
      },
      "scrollToIndex should animate to the specified index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "scrollToIndex should animate to the specified index",
        "duration": 373
      },
      "Move x should advance 1 page right": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move x should advance 1 page right"
      },
      "Move left on X should snap back": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move left on X should snap back"
      },
      "optimizeMemory should hide nodes not near the viewport": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "optimizeMemory should hide nodes not near the viewport"
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:43 PM"
  },
  {
    "name": "Scrollview: List",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 282,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 197,
      "type": "testcase",
      "testBasicScrollviewList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBasicScrollviewList",
        "duration": 107
      },
      "testScrollviewListWithDiv": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testScrollviewListWithDiv",
        "duration": 18
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:44 PM"
  },
  {
    "name": "Scrollview: Base",
    "passed": 6,
    "failed": 1,
    "errors": 0,
    "ignored": 6,
    "total": 13,
    "duration": 2916,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 6,
      "failed": 1,
      "errors": 0,
      "ignored": 6,
      "total": 13,
      "duration": 2827,
      "type": "testcase",
      "Ensure rendering & initial state are correct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure rendering & initial state are correct",
        "duration": 42
      },
      "Ensure set('scrollX') works properly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure set('scrollX') works properly",
        "duration": 44
      },
      "Ensure the 'scrollEnd' event fires": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Ensure the 'scrollEnd' event fires",
        "duration": 30
      },
      "Flick x should provide the correct reaction": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Flick x should provide the correct reaction"
      },
      "lastScrolledAmt should be correct": {
        "result": "fail",
        "message": "Timeout: wait() called but resume() never called.",
        "type": "test",
        "name": "lastScrolledAmt should be correct",
        "duration": 2087
      },
      "Disabled flick should not scroll": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Disabled flick should not scroll"
      },
      "Move right on X should move the content right": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move right on X should move the content right"
      },
      "Move left on X should snap back": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move left on X should snap back"
      },
      "Move down on Y should move the content at least that distance": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move down on Y should move the content at least that distance"
      },
      "Move up on Y should bounce back": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Move up on Y should bounce back"
      },
      "Disabled drag should not scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Disabled drag should not scroll",
        "duration": 245
      },
      "Disabled scrollview should not scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Disabled scrollview should not scroll",
        "duration": 150
      },
      "Widget resize should trigger heightChange": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Widget resize should trigger heightChange",
        "duration": 133
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:48 PM"
  },
  {
    "name": "Intl",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 140,
    "type": "report",
    "Lookup Best Language Tests": {
      "name": "Lookup Best Language Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 13,
      "type": "testcase",
      "testArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArray",
        "duration": 1
      },
      "testString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testString",
        "duration": 1
      },
      "testStar": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStar",
        "duration": 1
      },
      "testPrivate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivate",
        "duration": 1
      }
    },
    "Basic Intl Language Store Tests": {
      "name": "Basic Intl Language Store Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 12,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 2
      },
      "testRoot": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRoot",
        "duration": 1
      },
      "testGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet",
        "duration": 1
      }
    },
    "Get All Languages": {
      "name": "Get All Languages",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "test: getAvailableLangs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: getAvailableLangs",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:49 PM"
  },
  {
    "name": "Date.Math",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 141,
    "type": "report",
    "isValidDate Tests": {
      "name": "isValidDate Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 7,
      "type": "testcase",
      "testValidDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidDate",
        "duration": 1
      },
      "testInvalidDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInvalidDate",
        "duration": 1
      }
    },
    "DateMath Tests": {
      "name": "DateMath Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 11,
      "type": "testcase",
      "test: addDays": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addDays",
        "duration": 2
      },
      "test: addMonths": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addMonths",
        "duration": 1
      },
      "test: addYears": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addYears",
        "duration": 2
      }
    },
    "DaysInMonth Tests": {
      "name": "DaysInMonth Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "test: daysInMonth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: daysInMonth",
        "duration": 2
      },
      "test: listOfDatesInMonth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: listOfDatesInMonth",
        "duration": 2
      }
    },
    "Comparitor Tests": {
      "name": "Comparitor Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 21,
      "type": "testcase",
      "test: areEqual": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: areEqual",
        "duration": 1
      },
      "test: isGreater": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isGreater",
        "duration": 1
      },
      "test: isGreaterOrEqual": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isGreaterOrEqual",
        "duration": 1
      },
      "test: isInRange": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isInRange",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:50 PM"
  },
  {
    "name": "Date",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 138,
    "type": "report",
    "Date Parse Tests": {
      "name": "Date Parse Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 9,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testParse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParse",
        "duration": 2
      }
    },
    "Date Format U.S. Tests": {
      "name": "Date Format U.S. Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 7,
      "type": "testcase",
      "testUS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUS",
        "duration": 2
      }
    },
    "Date Format French Tests": {
      "name": "Date Format French Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2,
      "type": "testcase",
      "testFrench": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFrench",
        "duration": 1
      }
    },
    "Date Format Korean Tests": {
      "name": "Date Format Korean Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testKorean": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testKorean",
        "duration": 2
      }
    },
    "Date Format Punjabi Tests": {
      "name": "Date Format Punjabi Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "testPunjabi": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPunjabi",
        "duration": 2
      }
    },
    "Date Format Available Format Tests": {
      "name": "Date Format Available Format Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testAvailable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAvailable",
        "duration": 1
      }
    },
    "Date Format Tests": {
      "name": "Date Format Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testFormats": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFormats",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:51 PM"
  },
  {
    "name": "Throttle",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 208,
    "type": "report",
    "Throttle Tests": {
      "name": "Throttle Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 130,
      "type": "testcase",
      "test_throttle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_throttle",
        "duration": 114
      },
      "test_throttle_negative": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_throttle_negative",
        "duration": 16
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:52 PM"
  },
  {
    "name": "Widget: Position Constrain",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 149,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 33,
      "type": "testcase",
      "WidgetPositionConstrain should add `constrain` and `preventOverlap` attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetPositionConstrain should add `constrain` and `preventOverlap` attributes",
        "duration": 32
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:53 PM"
  },
  {
    "name": "Widget: Autohide",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 153,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 83,
      "type": "testcase",
      "WidgetAutohide should add a `hideOn` attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetAutohide should add a `hideOn` attribute",
        "duration": 28
      },
      "WidgetAutohide should hide when a click occurs outside its `boundingBox`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetAutohide should hide when a click occurs outside its `boundingBox`",
        "duration": 51
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:54 PM"
  },
  {
    "name": "Panel",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 803,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 704,
      "type": "testcase",
      "testBasicPanel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBasicPanel",
        "duration": 166
      },
      "testModalPanel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModalPanel",
        "duration": 110
      },
      "testPanelWithHeaderButtons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPanelWithHeaderButtons",
        "duration": 88
      },
      "testPanelWithFooterButtons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPanelWithFooterButtons",
        "duration": 76
      },
      "testPanelWithChangingButtons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPanelWithChangingButtons",
        "duration": 111
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:56 PM"
  },
  {
    "name": "Text: Wordbreak",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 189,
    "type": "report",
    "Text.WordBreak": {
      "name": "Text.WordBreak",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 72,
      "type": "testcase",
      "isWordBoundary() should not break between most letters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break between most letters",
        "duration": 1
      },
      "isWordBoundary() should not break letters across certain punctuation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break letters across certain punctuation",
        "duration": 1
      },
      "isWordBoundary() should not break across sequences of digits or digits adjacent to letters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break across sequences of digits or digits adjacent to letters",
        "duration": 1
      },
      "isWordBoundary() should not break inside numeric sequences": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break inside numeric sequences",
        "duration": 1
      },
      "isWordBoundary() should ignore format and extend characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should ignore format and extend characters",
        "duration": 1
      },
      "isWordBoundary() should not break inside CRLF": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break inside CRLF",
        "duration": 2
      },
      "isWordBoundary() should break before newlines": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should break before newlines",
        "duration": 1
      },
      "isWordBoundary() should break after newlines": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should break after newlines",
        "duration": 1
      },
      "isWordBoundary() should not break between Katakana characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break between Katakana characters",
        "duration": 1
      },
      "isWordBoundary() should not break from extenders": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should not break from extenders",
        "duration": 1
      },
      "isWordBoundary() should break everywhere else": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should break everywhere else",
        "duration": 2
      },
      "isWordBoundary() should return false when given an out-of-bounds index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should return false when given an out-of-bounds index",
        "duration": 0
      },
      "isWordBoundary() should return true for index 0 of an empty string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isWordBoundary() should return true for index 0 of an empty string",
        "duration": 1
      },
      "getWords() should split a string into words": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should split a string into words",
        "duration": 1
      },
      "getWords() should preserve case by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should preserve case by default",
        "duration": 1
      },
      "getWords() should support an ignoreCase option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should support an ignoreCase option",
        "duration": 1
      },
      "getWords() should exclude punctuation-only words by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should exclude punctuation-only words by default",
        "duration": 2
      },
      "getWords() should support an includePunctuation option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should support an includePunctuation option",
        "duration": 1
      },
      "getWords() should support an includeWhitespace option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getWords() should support an includeWhitespace option",
        "duration": 1
      },
      "getUniqueWords() should only return unique words": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getUniqueWords() should only return unique words",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:57 PM"
  },
  {
    "name": "Text: Accentfold",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 100,
    "type": "report",
    "Text.AccentFold": {
      "name": "Text.AccentFold",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 23,
      "type": "testcase",
      "canFold() should return true if any characters can be folded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "canFold() should return true if any characters can be folded",
        "duration": 3
      },
      "canFold() should return false when no characters can be folded": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "canFold() should return false when no characters can be folded",
        "duration": 1
      },
      "compare() should return true when folded strings match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compare() should return true when folded strings match",
        "duration": 2
      },
      "compare() should return false when folded strings don't match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compare() should return false when folded strings don't match",
        "duration": 2
      },
      "compare() should support a custom comparison function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compare() should support a custom comparison function",
        "duration": 1
      },
      "filter() should pass accent-folded items to the supplied function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should pass accent-folded items to the supplied function",
        "duration": 2
      },
      "filter() should filter the supplied array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should filter the supplied array",
        "duration": 1
      },
      "fold() should fold lowercase accented letters to ASCII": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fold() should fold lowercase accented letters to ASCII",
        "duration": 2
      },
      "fold() should fold uppercase accented letters to lowercase ASCII": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fold() should fold uppercase accented letters to lowercase ASCII",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:40:58 PM"
  },
  {
    "name": "Graphics: Set Shape Fill And Stroke",
    "passed": 501,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 501,
    "duration": 10356,
    "type": "report",
    "SetShapeFillAndStrokeTests": {
      "name": "SetShapeFillAndStrokeTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 14
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:09 PM"
  },
  {
    "name": "Graphics: Path",
    "passed": 41,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 41,
    "duration": 1019,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923270246_64": {
      "name": "testCase_yui_3_5_0_1_1349923270246_64",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_65": {
      "name": "testCase_yui_3_5_0_1_1349923270246_65",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_66": {
      "name": "testCase_yui_3_5_0_1_1349923270246_66",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_67": {
      "name": "testCase_yui_3_5_0_1_1349923270246_67",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 29,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 27
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_68": {
      "name": "testCase_yui_3_5_0_1_1349923270246_68",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_69": {
      "name": "testCase_yui_3_5_0_1_1349923270246_69",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_70": {
      "name": "testCase_yui_3_5_0_1_1349923270246_70",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_71": {
      "name": "testCase_yui_3_5_0_1_1349923270246_71",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_72": {
      "name": "testCase_yui_3_5_0_1_1349923270246_72",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_73": {
      "name": "testCase_yui_3_5_0_1_1349923270246_73",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_74": {
      "name": "testCase_yui_3_5_0_1_1349923270246_74",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_75": {
      "name": "testCase_yui_3_5_0_1_1349923270246_75",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_76": {
      "name": "testCase_yui_3_5_0_1_1349923270246_76",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_77": {
      "name": "testCase_yui_3_5_0_1_1349923270246_77",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 19,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_78": {
      "name": "testCase_yui_3_5_0_1_1349923270246_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 25,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 21
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_79": {
      "name": "testCase_yui_3_5_0_1_1349923270246_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 86,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 69
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_80": {
      "name": "testCase_yui_3_5_0_1_1349923270246_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_81": {
      "name": "testCase_yui_3_5_0_1_1349923270246_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_82": {
      "name": "testCase_yui_3_5_0_1_1349923270246_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 13
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_83": {
      "name": "testCase_yui_3_5_0_1_1349923270246_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_84": {
      "name": "testCase_yui_3_5_0_1_1349923270246_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_85": {
      "name": "testCase_yui_3_5_0_1_1349923270246_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_86": {
      "name": "testCase_yui_3_5_0_1_1349923270246_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_87": {
      "name": "testCase_yui_3_5_0_1_1349923270246_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_88": {
      "name": "testCase_yui_3_5_0_1_1349923270246_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_89": {
      "name": "testCase_yui_3_5_0_1_1349923270246_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 40,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 26
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_90": {
      "name": "testCase_yui_3_5_0_1_1349923270246_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 21
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_91": {
      "name": "testCase_yui_3_5_0_1_1349923270246_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_92": {
      "name": "testCase_yui_3_5_0_1_1349923270246_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_93": {
      "name": "testCase_yui_3_5_0_1_1349923270246_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_94": {
      "name": "testCase_yui_3_5_0_1_1349923270246_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_95": {
      "name": "testCase_yui_3_5_0_1_1349923270246_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_96": {
      "name": "testCase_yui_3_5_0_1_1349923270246_96",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_97": {
      "name": "testCase_yui_3_5_0_1_1349923270246_97",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_98": {
      "name": "testCase_yui_3_5_0_1_1349923270246_98",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_99": {
      "name": "testCase_yui_3_5_0_1_1349923270246_99",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_100": {
      "name": "testCase_yui_3_5_0_1_1349923270246_100",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_101": {
      "name": "testCase_yui_3_5_0_1_1349923270246_101",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 13
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_102": {
      "name": "testCase_yui_3_5_0_1_1349923270246_102",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_103": {
      "name": "testCase_yui_3_5_0_1_1349923270246_103",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "testCase_yui_3_5_0_1_1349923270246_104": {
      "name": "testCase_yui_3_5_0_1_1349923270246_104",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:11 PM"
  },
  {
    "name": "Graphics: Shape Fill And Stroke",
    "passed": 222,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 222,
    "duration": 4436,
    "type": "report",
    "ShapeFillAndStrokeTests": {
      "name": "ShapeFillAndStrokeTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 24,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 21
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:17 PM"
  },
  {
    "name": "Graphics: Shape Depth Tests",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 135,
    "type": "report",
    "ShapeDepthTests": {
      "name": "ShapeDepthTests",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 56,
      "type": "testcase",
      "testRectToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRectToFront",
        "duration": 31
      },
      "testCircleToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCircleToFront",
        "duration": 2
      },
      "testEllipseToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEllipseToFront",
        "duration": 1
      },
      "testRoundRectToFront": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRoundRectToFront",
        "duration": 1
      },
      "testRoundRectToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRoundRectToBack",
        "duration": 2
      },
      "testEllipseToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEllipseToBack",
        "duration": 1
      },
      "testCircleToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCircleToBack",
        "duration": 1
      },
      "testRectToBack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRectToBack",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:18 PM"
  },
  {
    "name": "Graphics: Shape Anim Transform",
    "passed": 48,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 48,
    "duration": 26270,
    "type": "report",
    "ShapeAnimTests": {
      "name": "ShapeAnimTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 547,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 530
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:45 PM"
  },
  {
    "name": "Graphics: Base",
    "passed": 109,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 109,
    "duration": 1490,
    "type": "report",
    "GraphicsTests": {
      "name": "GraphicsTests",
      "passed": 64,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 64,
      "duration": 761,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 8
      },
      "test render()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render()",
        "duration": 13
      },
      "test addShape(circle)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(circle)",
        "duration": 11
      },
      "test mycircleDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircleDefaultClassString()",
        "duration": 6
      },
      "test mycircle.get(radius)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(radius)",
        "duration": 8
      },
      "test mycircle.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(width)",
        "duration": 7
      },
      "test mycircle.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(height)",
        "duration": 20
      },
      "test mycircle.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(stroke)",
        "duration": 7
      },
      "test mycircle.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(fill)",
        "duration": 6
      },
      "test mycircle.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(x)",
        "duration": 5
      },
      "test mycircle.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.get(y)",
        "duration": 6
      },
      "test mycircle.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.set(stroke)",
        "duration": 13
      },
      "test mycircle.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.set(fill)",
        "duration": 10
      },
      "test mycircle.contains()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.contains()",
        "duration": 7
      },
      "test mycircle.compareTo()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mycircle.compareTo()",
        "duration": 7
      },
      "testRemoveShape(circle)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveShape(circle)",
        "duration": 11
      },
      "test addShape(rect)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(rect)",
        "duration": 11
      },
      "test myrectDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrectDefaultClassString()",
        "duration": 30
      },
      "test myrect.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(width)",
        "duration": 31
      },
      "test myrect.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(height)",
        "duration": 21
      },
      "test myrect.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(stroke)",
        "duration": 7
      },
      "test myrect.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(fill)",
        "duration": 12
      },
      "test myrect.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(x)",
        "duration": 9
      },
      "test myrect.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.get(y)",
        "duration": 11
      },
      "test myrect.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(stroke)",
        "duration": 13
      },
      "testRectStrokeWeightType": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRectStrokeWeightType",
        "duration": 6
      },
      "test myrect.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(fill)",
        "duration": 8
      },
      "test myrect.set(stroke===0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(stroke===0)",
        "duration": 7
      },
      "test myrect.set(stroke-dashstyle)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myrect.set(stroke-dashstyle)",
        "duration": 7
      },
      "test removeShape(rect)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeShape(rect)",
        "duration": 7
      },
      "test addShape(ellipse)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(ellipse)",
        "duration": 8
      },
      "test myellipseDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipseDefaultClassString()",
        "duration": 6
      },
      "test myellipse.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(width)",
        "duration": 7
      },
      "test myellipse.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(height)",
        "duration": 8
      },
      "test myellipse.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(stroke)",
        "duration": 6
      },
      "test myellipse.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(fill)",
        "duration": 8
      },
      "test myellipse.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(x)",
        "duration": 5
      },
      "test myellipse.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.get(y)",
        "duration": 7
      },
      "test myellipse.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(stroke)",
        "duration": 6
      },
      "test myellipse.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(fill)",
        "duration": 7
      },
      "test myellipse.set(xRadius)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(xRadius)",
        "duration": 7
      },
      "test myellipse.set(yRadius)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test myellipse.set(yRadius)",
        "duration": 7
      },
      "test removeShape(ellipse)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeShape(ellipse)",
        "duration": 6
      },
      "test addEllipseWithXRadiusAndYRadius()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addEllipseWithXRadiusAndYRadius()",
        "duration": 9
      },
      "test addShape(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addShape(path)",
        "duration": 8
      },
      "test mypathDefaultClassString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypathDefaultClassString()",
        "duration": 6
      },
      "test mypath.get(width)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(width)",
        "duration": 7
      },
      "test mypath.get(height)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(height)",
        "duration": 5
      },
      "test mypath.get(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(stroke)",
        "duration": 10
      },
      "test mypath.get(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(fill)",
        "duration": 6
      },
      "test mypath.get(x)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(x)",
        "duration": 7
      },
      "test mypath.get(y)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.get(y)",
        "duration": 6
      },
      "test mypath.set(stroke)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.set(stroke)",
        "duration": 10
      },
      "test mypath.set(fill)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test mypath.set(fill)",
        "duration": 7
      },
      "test rotate(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test rotate(path)",
        "duration": 7
      },
      "test skewX(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test skewX(path)",
        "duration": 8
      },
      "test skewY(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test skewY(path)",
        "duration": 7
      },
      "test skew(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test skew(path)",
        "duration": 6
      },
      "test scale(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test scale(path)",
        "duration": 8
      },
      "test translate(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test translate(path)",
        "duration": 10
      },
      "test translateX(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test translateX(path)",
        "duration": 7
      },
      "test translateY(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test translateY(path)",
        "duration": 9
      },
      "test removeShape(path)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeShape(path)",
        "duration": 9
      },
      "test passRotation(rect)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test passRotation(rect)",
        "duration": 8
      }
    },
    "rectVisibleAttributeTest": {
      "name": "rectVisibleAttributeTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testSetVisibleUpfront()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetVisibleUpfront()",
        "duration": 17
      }
    },
    "circleVisibleAttributeTest": {
      "name": "circleVisibleAttributeTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testSetVisibleUpfront()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetVisibleUpfront()",
        "duration": 15
      }
    },
    "ellipseVisibleAttributeTest": {
      "name": "ellipseVisibleAttributeTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testSetVisibleUpfront()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetVisibleUpfront()",
        "duration": 13
      }
    },
    "rectSetIdTest": {
      "name": "rectSetIdTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 13
      }
    },
    "circleSetIdTest": {
      "name": "circleSetIdTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 15
      }
    },
    "ellipseSetIdTest": {
      "name": "ellipseSetIdTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 13
      }
    },
    "rectSetIdUpFrontTest": {
      "name": "rectSetIdUpFrontTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 13
      }
    },
    "circleSetIdUpFrontTest": {
      "name": "circleSetIdUpFrontTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 14
      }
    },
    "ellipseSetIdUpFrontTest": {
      "name": "ellipseSetIdUpFrontTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testShape.set(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.set(id)",
        "duration": 14
      }
    },
    "testCase_yui_3_5_0_1_1349923305975_64": {
      "name": "testCase_yui_3_5_0_1_1349923305975_64",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testStandaloneShape()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStandaloneShape()",
        "duration": 14
      }
    },
    "rectGetXYTest": {
      "name": "rectGetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testShape.getXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.getXY()",
        "duration": 16
      }
    },
    "circleGetXYTest": {
      "name": "circleGetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testShape.getXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.getXY()",
        "duration": 13
      }
    },
    "ellipseGetXYTest": {
      "name": "ellipseGetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.getXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.getXY()",
        "duration": 16
      }
    },
    "rectSetXYTest": {
      "name": "rectSetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.setXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.setXY()",
        "duration": 15
      }
    },
    "circleSetXYTest": {
      "name": "circleSetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testShape.setXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.setXY()",
        "duration": 17
      }
    },
    "ellipseSetXYTest": {
      "name": "ellipseSetXYTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.setXY()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.setXY()",
        "duration": 15
      }
    },
    "rectAddClassTest": {
      "name": "rectAddClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.addClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.addClass()",
        "duration": 13
      }
    },
    "circleAddClassTest": {
      "name": "circleAddClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.addClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.addClass()",
        "duration": 13
      }
    },
    "ellipseAddClassTest": {
      "name": "ellipseAddClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.addClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.addClass()",
        "duration": 14
      }
    },
    "rectRemoveClassTest": {
      "name": "rectRemoveClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testShape.removeClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.removeClass()",
        "duration": 14
      }
    },
    "circleRemoveClassTest": {
      "name": "circleRemoveClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.removeClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.removeClass()",
        "duration": 15
      }
    },
    "ellipseRemoveClassTest": {
      "name": "ellipseRemoveClassTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testShape.removeClass()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShape.removeClass()",
        "duration": 14
      }
    },
    "SVGGraphicsTests": {
      "name": "SVGGraphicsTests",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 174,
      "type": "testcase",
      "testSVGGraphic()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGGraphic()",
        "duration": 15
      },
      "testSVGRectNode()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNode()",
        "duration": 7
      },
      "testSVGRectNodeDimensions()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeDimensions()",
        "duration": 7
      },
      "testSVGRectNodeFillColor()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeFillColor()",
        "duration": 6
      },
      "testSVGRectNodeFillOpacity()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeFillOpacity()",
        "duration": 6
      },
      "testSVGRectNodeStrokeColor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeColor",
        "duration": 7
      },
      "testSVGRectNodeStrokeWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeWidth",
        "duration": 6
      },
      "testSVGRectNodeStroke": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStroke",
        "duration": 8
      },
      "testSVGRectNodeStrokeDashArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeDashArray",
        "duration": 8
      },
      "testSVGRectNodeStrokeLineCap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineCap",
        "duration": 7
      },
      "testSVGRectNodeStrokeLineJoin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineJoin",
        "duration": 6
      },
      "testSVGRectNodeStrokeLineJoinBevel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineJoinBevel",
        "duration": 6
      },
      "testSVGRectNodeWidthAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeWidthAgainstShapeAttr",
        "duration": 7
      },
      "testSVGRectNodeHeightAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeHeightAgainstShapeAttr",
        "duration": 7
      },
      "testSVGRectNodeFillAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeFillAgainstShapeAttr",
        "duration": 7
      },
      "testSVGRectNodeStrokeAgainstShapeAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeAgainstShapeAttr",
        "duration": 7
      },
      "testSVGRectNodeStrokeLineJoinMiterLimit=3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRectNodeStrokeLineJoinMiterLimit=3",
        "duration": 8
      },
      "testSVGRect.test()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSVGRect.test()",
        "duration": 7
      },
      "test addSVGPieSlice()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addSVGPieSlice()",
        "duration": 9
      }
    },
    "GraphicsTransformTests": {
      "name": "GraphicsTransformTests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 54,
      "type": "testcase",
      "testGraphicInstantiation()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicInstantiation()",
        "duration": 17
      },
      "testTransformAttributeIntantiation()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTransformAttributeIntantiation()",
        "duration": 9
      },
      "testAddTransformStringAppend()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddTransformStringAppend()",
        "duration": 7
      },
      "testAddTransformsAndCompareToString()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddTransformsAndCompareToString()",
        "duration": 7
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:48 PM"
  },
  {
    "name": "Graphics: Graphic",
    "passed": 62,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 62,
    "duration": 1817,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923308446_65": {
      "name": "testCase_yui_3_5_0_1_1349923308446_65",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 94,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 93
      }
    },
    "testCase_yui_3_5_0_1_1349923308446_66": {
      "name": "testCase_yui_3_5_0_1_1349923308446_66",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 161,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 149
      }
    },
    "testCase_yui_3_5_0_1_1349923308446_67": {
      "name": "testCase_yui_3_5_0_1_1349923308446_67",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 91,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 90
      }
    },
    "testCase_yui_3_5_0_1_1349923308446_68": {
      "name": "testCase_yui_3_5_0_1_1349923308446_68",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 175,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 165
      }
    },
    "AddAndRemoveShapes": {
      "name": "AddAndRemoveShapes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "AddAndRemoveShapesById": {
      "name": "AddAndRemoveShapesById",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 18
      }
    },
    "AddAndRemoveShapesAndSetAttributes": {
      "name": "AddAndRemoveShapesAndSetAttributes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "GraphicTestXY": {
      "name": "GraphicTestXY",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 12
      }
    },
    "ToggleVisibleTest": {
      "name": "ToggleVisibleTest",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 25,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 23
      }
    },
    "TestGraphic.getShapeById()": {
      "name": "TestGraphic.getShapeById()",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "SizeDownWide": {
      "name": "SizeDownWide",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownTall": {
      "name": "SizeDownTall",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownWideAspectRatioNone": {
      "name": "SizeDownWideAspectRatioNone",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioNoneResizeDown": {
      "name": "SizeDownWideAspectRatioNoneResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMinYMin": {
      "name": "SizeDownWideAspectRatioXMinYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMinYMinResizeDown": {
      "name": "SizeDownWideAspectRatioXMinYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMidYMin": {
      "name": "SizeDownWideAspectRatioXMidYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMidYMinResizeDown": {
      "name": "SizeDownWideAspectRatioXMidYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownWideAspectRatioXMaxYMin": {
      "name": "SizeDownWideAspectRatioXMaxYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMaxYMinResizeDown": {
      "name": "SizeDownWideAspectRatioXMaxYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMinYMid": {
      "name": "SizeDownWideAspectRatioXMinYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMinYMidResizeDown": {
      "name": "SizeDownWideAspectRatioXMinYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMidYMid": {
      "name": "SizeDownWideAspectRatioXMidYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMidYMidResizeDown": {
      "name": "SizeDownWideAspectRatioXMidYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "SizeDownWideAspectRatioXMaxYMid": {
      "name": "SizeDownWideAspectRatioXMaxYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMaxYMidResizeDown": {
      "name": "SizeDownWideAspectRatioXMaxYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 19
      }
    },
    "SizeDownWideAspectRatioXMinYMax": {
      "name": "SizeDownWideAspectRatioXMinYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownWideAspectRatioXMinYMaxResizeDown": {
      "name": "SizeDownWideAspectRatioXMinYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownWideAspectRatioXMidYMax": {
      "name": "SizeDownWideAspectRatioXMidYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownWideAspectRatioXMidYMaxResizeDown": {
      "name": "SizeDownWideAspectRatioXMidYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownWideAspectRatioXMaxYMax": {
      "name": "SizeDownWideAspectRatioXMaxYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownWideAspectRatioXMaxYMaxResizeDown": {
      "name": "SizeDownWideAspectRatioXMaxYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioNone": {
      "name": "SizeDownTallAspectRatioNone",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioNoneResizeDown": {
      "name": "SizeDownTallAspectRatioNoneResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMinYMin": {
      "name": "SizeDownTallAspectRatioXMinYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioXMinYMinResizeDown": {
      "name": "SizeDownTallAspectRatioXMinYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownTallAspectRatioXMidYMin": {
      "name": "SizeDownTallAspectRatioXMidYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "SizeDownTallAspectRatioXMidYMinResizeDown": {
      "name": "SizeDownTallAspectRatioXMidYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownTallAspectRatioXMaxYMin": {
      "name": "SizeDownTallAspectRatioXMaxYMin",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 15,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownTallAspectRatioXMaxYMinResizeDown": {
      "name": "SizeDownTallAspectRatioXMaxYMinResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 26,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 24
      }
    },
    "SizeDownTallAspectRatioXMinYMid": {
      "name": "SizeDownTallAspectRatioXMinYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 93,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 90
      }
    },
    "SizeDownTallAspectRatioXMinYMidResizeDown": {
      "name": "SizeDownTallAspectRatioXMinYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 30,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownTallAspectRatioXMidYMid": {
      "name": "SizeDownTallAspectRatioXMidYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 20
      }
    },
    "SizeDownTallAspectRatioXMidYMidResizeDown": {
      "name": "SizeDownTallAspectRatioXMidYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioXMaxYMid": {
      "name": "SizeDownTallAspectRatioXMaxYMid",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 13
      }
    },
    "SizeDownTallAspectRatioXMaxYMidResizeDown": {
      "name": "SizeDownTallAspectRatioXMaxYMidResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioXMinYMax": {
      "name": "SizeDownTallAspectRatioXMinYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioXMinYMaxResizeDown": {
      "name": "SizeDownTallAspectRatioXMinYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 14
      }
    },
    "SizeDownTallAspectRatioXMidYMax": {
      "name": "SizeDownTallAspectRatioXMidYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 16
      }
    },
    "SizeDownTallAspectRatioXMidYMaxResizeDown": {
      "name": "SizeDownTallAspectRatioXMidYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 17,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 15
      }
    },
    "SizeDownTallAspectRatioXMaxYMax": {
      "name": "SizeDownTallAspectRatioXMaxYMax",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "SizeDownTallAspectRatioXMaxYMaxResizeDown": {
      "name": "SizeDownTallAspectRatioXMaxYMaxResizeDown",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 20,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 17
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:41:51 PM"
  },
  {
    "name": "Gesture Simulate",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 14099,
    "type": "report",
    "Gesture 'tap' Tests": {
      "name": "Gesture 'tap' Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 5780,
      "type": "testcase",
      "test gesture callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test gesture callback function",
        "duration": 3080
      },
      "test default tap gesture": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default tap gesture",
        "duration": 42
      },
      "test double taps on a designated spot with 500ms delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test double taps on a designated spot with 500ms delay",
        "duration": 2639
      }
    },
    "Gesture 'doubletap' Tests": {
      "name": "Gesture 'doubletap' Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 80,
      "type": "testcase",
      "test doubletap gesture": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test doubletap gesture",
        "duration": 74
      }
    },
    "Gesture 'press' Tests": {
      "name": "Gesture 'press' Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4133,
      "type": "testcase",
      "test default press gesture": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default press gesture",
        "duration": 3054
      },
      "test long press for 1 sec": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test long press for 1 sec",
        "duration": 1059
      }
    },
    "Gesture 'move' Tests": {
      "name": "Gesture 'move' Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3285,
      "type": "testcase",
      "test default move gesture": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default move gesture",
        "duration": 1123
      },
      "test move gesture on a designated spot to X and Y axies direction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test move gesture on a designated spot to X and Y axies direction",
        "duration": 2145
      }
    },
    "Gesture 'flick' Tests": {
      "name": "Gesture 'flick' Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 699,
      "type": "testcase",
      "test default flick gesture": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default flick gesture",
        "duration": 231
      },
      "test flick to left for 100ms on a designated spot": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test flick to left for 100ms on a designated spot",
        "duration": 193
      },
      "test flick gesture with auto adjustment of duration when too slow": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test flick gesture with auto adjustment of duration when too slow",
        "duration": 241
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:06 PM"
  },
  {
    "name": "DataSource: XMLSchema",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 140,
    "type": "report",
    "DataSource XMLSchema Plugin Tests": {
      "name": "DataSource XMLSchema Plugin Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 48,
      "type": "testcase",
      "testXMLSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLSchema",
        "duration": 43
      },
      "testSchemaError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSchemaError",
        "duration": 5
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:07 PM"
  },
  {
    "name": "DataSource: TextSchema",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 85,
    "type": "report",
    "DataSource TextSchema Plugin Tests": {
      "name": "DataSource TextSchema Plugin Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "testTextSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextSchema",
        "duration": 6
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:08 PM"
  },
  {
    "name": "DataSource: Polling",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 1829,
    "type": "report",
    "DataSource Polling Tests": {
      "name": "DataSource Polling Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1749,
      "type": "testcase",
      "testClass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClass",
        "duration": 3
      },
      "testSetAndClear": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetAndClear",
        "duration": 666
      },
      "testClearAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClearAll",
        "duration": 620
      },
      "setInterval should fire first sendRequest immediately, async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setInterval should fire first sendRequest immediately, async",
        "duration": 417
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:11 PM"
  },
  {
    "name": "DataSource: Local",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 122,
    "type": "report",
    "DataSource.Local Tests": {
      "name": "DataSource.Local Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 27,
      "type": "testcase",
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 2
      },
      "testLocalDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalDefaults",
        "duration": 3
      },
      "testLocalEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalEvents",
        "duration": 5
      },
      "testLocalError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalError",
        "duration": 5
      },
      "test sendRequest({ callback: { ... }}) is alias for on: { ... }": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sendRequest({ callback: { ... }}) is alias for on: { ... }",
        "duration": 6
      },
      "test sendRequest() does not throw an error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sendRequest() does not throw an error",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:12 PM"
  },
  {
    "name": "DataSource: JSONSchema",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 85,
    "type": "report",
    "DataSource JSONSchema Plugin Tests": {
      "name": "DataSource JSONSchema Plugin Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 10,
      "type": "testcase",
      "testJSONSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONSchema",
        "duration": 5
      },
      "testSchemaError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSchemaError",
        "duration": 5
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:13 PM"
  },
  {
    "name": "DataSource: IO",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 142,
    "type": "report",
    "DataSource.IO Tests": {
      "name": "DataSource.IO Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 26,
      "type": "testcase",
      "testConstructorIO": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructorIO",
        "duration": 3
      },
      "testIODefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIODefaults",
        "duration": 4
      },
      "testIOConfig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOConfig",
        "duration": 4
      },
      "testIOPost": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOPost",
        "duration": 3
      },
      "testIOEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOEvents",
        "duration": 4
      },
      "testIOError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIOError",
        "duration": 4
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:14 PM"
  },
  {
    "name": "DataSource: Get",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 107,
    "type": "report",
    "DataSource.Get Tests": {
      "name": "DataSource.Get Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 20,
      "type": "testcase",
      "testGetDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetDefaults",
        "duration": 3
      },
      "testGetEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetEvents",
        "duration": 4
      },
      "testGetError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetError",
        "duration": 5
      },
      "testGetTimeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetTimeout",
        "duration": 4
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:15 PM"
  },
  {
    "name": "DataSource: Function",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 132,
    "type": "report",
    "DataSource.Function Tests": {
      "name": "DataSource.Function Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 28,
      "type": "testcase",
      "testFunctionDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionDefaults",
        "duration": 3
      },
      "testFunctionEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionEvents",
        "duration": 4
      },
      "testFunctionError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionError",
        "duration": 3
      },
      "testFunctionException": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionException",
        "duration": 10
      },
      "success or failure callback should not cause data event to fire again": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "success or failure callback should not cause data event to fire again",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:16 PM"
  },
  {
    "name": "Datasource: Cache",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 112,
    "type": "report",
    "DataSource Caching Tests": {
      "name": "DataSource Caching Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 38,
      "type": "testcase",
      "testCacheDefaultMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCacheDefaultMax",
        "duration": 7
      },
      "testCacheInitMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCacheInitMax",
        "duration": 5
      },
      "testCacheSetMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCacheSetMax",
        "duration": 4
      },
      "testLocalCache": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalCache",
        "duration": 6
      },
      "testLocalCacheUnplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalCacheUnplug",
        "duration": 8
      },
      "cache retrieval should not overwrite callback": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cache retrieval should not overwrite callback",
        "duration": 6
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:17 PM"
  },
  {
    "name": "DataSource: ArraySchema",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 82,
    "type": "report",
    "DataSource ArraySchema Plugin Tests": {
      "name": "DataSource ArraySchema Plugin Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "testArraySchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArraySchema",
        "duration": 5
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:18 PM"
  },
  {
    "name": "Cache Plugin",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 310,
    "type": "report",
    "Class Tests": {
      "name": "Class Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 45,
      "type": "testcase",
      "testDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaults",
        "duration": 23
      },
      "testDestructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestructor",
        "duration": 20
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 181,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 18
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 45
      },
      "testRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRequest",
        "duration": 23
      },
      "testRetrieveSuccess": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveSuccess",
        "duration": 25
      },
      "testRetrieveFailure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveFailure",
        "duration": 15
      },
      "testCancelAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelAdd",
        "duration": 18
      },
      "testCancelFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelFlush",
        "duration": 20
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:19 PM"
  },
  {
    "name": "Cache Offline",
    "passed": 27,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 27,
    "duration": 344,
    "type": "report",
    "Class Tests": {
      "name": "Class Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "testDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaults",
        "duration": 4
      },
      "testDestructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestructor",
        "duration": 3
      }
    },
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 146,
      "type": "testcase",
      "testMaxDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxDefault",
        "duration": 6
      },
      "testMaxConfig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxConfig",
        "duration": 4
      },
      "testMaxSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxSet",
        "duration": 4
      },
      "testMaxSetNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxSetNull",
        "duration": 4
      },
      "testMaxSetNegative": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxSetNegative",
        "duration": 3
      },
      "testRetrieve": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieve",
        "duration": 4
      },
      "testNoExpires": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoExpires",
        "duration": 4
      },
      "testExpiresNumber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresNumber",
        "duration": 72
      },
      "testExpiresDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresDate",
        "duration": 5
      },
      "testNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoMatch",
        "duration": 4
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 5
      },
      "testFlushAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlushAll",
        "duration": 6
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 38,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 3
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 4
      },
      "testRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRequest",
        "duration": 4
      },
      "testRetrieveSuccess": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveSuccess",
        "duration": 4
      },
      "testRetrieveFailure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveFailure",
        "duration": 4
      },
      "testCancelAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelAdd",
        "duration": 4
      },
      "testCancelFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelFlush",
        "duration": 10
      }
    },
    "Entry Management Tests": {
      "name": "Entry Management Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 35,
      "type": "testcase",
      "testNonUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonUniqueKeys",
        "duration": 5
      },
      "testUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUniqueKeys",
        "duration": 27
      }
    },
    "Invalid Value Tests": {
      "name": "Invalid Value Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 21,
      "type": "testcase",
      "testUndefinedRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefinedRequest",
        "duration": 6
      },
      "testNullRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNullRequest",
        "duration": 4
      },
      "testNaNRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNaNRequest",
        "duration": 3
      },
      "testEmptyStringRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEmptyStringRequest",
        "duration": 5
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:20 PM"
  },
  {
    "name": "Cache",
    "passed": 29,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 29,
    "duration": 322,
    "type": "report",
    "Class Tests": {
      "name": "Class Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 9,
      "type": "testcase",
      "testDefaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaults",
        "duration": 3
      },
      "testDestructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestructor",
        "duration": 3
      }
    },
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 133,
      "type": "testcase",
      "testmax0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax0",
        "duration": 2
      },
      "testmax2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2",
        "duration": 4
      },
      "testmax2to1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2to1",
        "duration": 4
      },
      "testmax2to0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2to0",
        "duration": 3
      },
      "testmax2toNegative": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testmax2toNegative",
        "duration": 3
      },
      "testRetrieve": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieve",
        "duration": 3
      },
      "testNoExpires": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoExpires",
        "duration": 3
      },
      "testExpiresNumber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresNumber",
        "duration": 64
      },
      "testExpiresDate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExpiresDate",
        "duration": 4
      },
      "testNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoMatch",
        "duration": 4
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 5
      },
      "testFlushItem": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlushItem",
        "duration": 5
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 27,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 4
      },
      "testFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlush",
        "duration": 4
      },
      "testRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRequest",
        "duration": 3
      },
      "testRetrieveSuccess": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveSuccess",
        "duration": 3
      },
      "testRetrieveFailure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRetrieveFailure",
        "duration": 3
      },
      "testCancelAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelAdd",
        "duration": 3
      },
      "testCancelFlush": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCancelFlush",
        "duration": 3
      }
    },
    "Entry Management Tests": {
      "name": "Entry Management Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 22,
      "type": "testcase",
      "testNonUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonUniqueKeys",
        "duration": 4
      },
      "testUniqueKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUniqueKeys",
        "duration": 3
      },
      "testUniqueKeyValues": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUniqueKeyValues",
        "duration": 10
      },
      "testFreshness": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFreshness",
        "duration": 5
      }
    },
    "Invalid Value Tests": {
      "name": "Invalid Value Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 47,
      "type": "testcase",
      "testUndefinedRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefinedRequest",
        "duration": 28
      },
      "testNullRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNullRequest",
        "duration": 5
      },
      "testNaNRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNaNRequest",
        "duration": 3
      },
      "testEmptyStringRequest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEmptyStringRequest",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:22 PM"
  },
  {
    "name": "Widget: ParentChild",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 17,
    "duration": 3061,
    "type": "report",
    "Widget Parent API, Widget Child API Tests": {
      "name": "Widget Parent API, Widget Child API Tests",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 2989,
      "type": "testcase",
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 225
      },
      "testInsert": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInsert",
        "duration": 199
      },
      "testPreRenderedChildWithEmptyParent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPreRenderedChildWithEmptyParent",
        "duration": 143
      },
      "testAddOutOfOrderPreRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddOutOfOrderPreRender",
        "duration": 90
      },
      "testAddOutOfOrderPostRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddOutOfOrderPostRender",
        "duration": 104
      },
      "testRemove": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemove",
        "duration": 128
      },
      "testRemoveSelectedChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSelectedChild",
        "duration": 124
      },
      "testRemoveFocusedChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveFocusedChild",
        "duration": 135
      },
      "testSingleSelection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSelection",
        "duration": 376
      },
      "testMultipleSelection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultipleSelection",
        "duration": 349
      },
      "testAncestorNavigation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAncestorNavigation",
        "duration": 150
      },
      "testSiblingNavigation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSiblingNavigation",
        "duration": 127
      },
      "testActiveDescendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testActiveDescendant",
        "duration": 190
      },
      "testFullDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFullDestroy",
        "duration": 145
      },
      "testRemoveChildOnDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveChildOnDestroy",
        "duration": 155
      },
      "testUIEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUIEvents",
        "duration": 100
      },
      "testCustomAsyncRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomAsyncRender",
        "duration": 114
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:25 PM"
  },
  {
    "name": "SimpleYUI",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 88,
    "type": "report",
    "simpleyui": {
      "name": "simpleyui",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 14,
      "type": "testcase",
      "test global Y": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test global Y",
        "duration": 1
      },
      "test module inclusion": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test module inclusion",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:26 PM"
  },
  {
    "name": "JSON",
    "passed": 69,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 69,
    "duration": 499,
    "type": "report",
    "Y.JSON.parse (JavaScript implementation)": {
      "name": "Y.JSON.parse (JavaScript implementation)",
      "passed": 48,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 48,
      "duration": 260,
      "type": "testsuite",
      "parse": {
        "name": "parse",
        "passed": 47,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 47,
        "duration": 251,
        "type": "testcase",
        "test_emptyObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_emptyObject",
          "duration": 11
        },
        "test_emptyArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_emptyArray",
          "duration": 1
        },
        "test_JSONNatives": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_JSONNatives",
          "duration": 1
        },
        "test_basics": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_basics",
          "duration": 1
        },
        "test_nonObjectWrapper": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_nonObjectWrapper",
          "duration": 1
        },
        "test_failOnEmptyString": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnEmptyString",
          "duration": 5
        },
        "test_failOnFunction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnFunction",
          "duration": 6
        },
        "test_failOnRegex": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnRegex",
          "duration": 5
        },
        "test_failOnNew": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnNew",
          "duration": 5
        },
        "test_failOnUnquotedVal": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnquotedVal",
          "duration": 5
        },
        "test_failOnUnquotedKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnquotedKey",
          "duration": 4
        },
        "test_failOnUnclosedObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnclosedObject",
          "duration": 4
        },
        "test_failOnUnclosedArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUnclosedArray",
          "duration": 5
        },
        "test_failOnExtraCommaInObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExtraCommaInObject",
          "duration": 7
        },
        "test_failOnDoubleExtraCommaInObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDoubleExtraCommaInObject",
          "duration": 4
        },
        "test_failOnExtraCommaInArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExtraCommaInArray",
          "duration": 5
        },
        "test_failOnDoubleExtraCommaInArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDoubleExtraCommaInArray",
          "duration": 5
        },
        "test_failOnMissingValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnMissingValue",
          "duration": 5
        },
        "test_failOnCommaAfterClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnCommaAfterClose",
          "duration": 4
        },
        "test_failOnValueAfterClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnValueAfterClose",
          "duration": 5
        },
        "test_failOnExtraClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExtraClose",
          "duration": 5
        },
        "test_failOnExpression": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnExpression",
          "duration": 5
        },
        "test_failOnZeroPrefixedNumber": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnZeroPrefixedNumber",
          "duration": 5
        },
        "test_failOnHex": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnHex",
          "duration": 5
        },
        "test_failOnIllegalBackslashEscape": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnIllegalBackslashEscape",
          "duration": 5
        },
        "test_failOnMissingColon": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnMissingColon",
          "duration": 5
        },
        "test_failOnDoubleColon": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDoubleColon",
          "duration": 5
        },
        "test_failOnCommaInsteadOfColon": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnCommaInsteadOfColon",
          "duration": 5
        },
        "test_failOnColonInsteadOfComma": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnColonInsteadOfComma",
          "duration": 5
        },
        "test_failOnSingleQuote": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnSingleQuote",
          "duration": 5
        },
        "test_failOnLineBreakChar": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnLineBreakChar",
          "duration": 6
        },
        "test_failOnMismatchedClose": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnMismatchedClose",
          "duration": 6
        },
        "test_failOnObjectInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnObjectInput",
          "duration": 5
        },
        "test_arrayContainingValidJSON": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_arrayContainingValidJSON",
          "duration": 1
        },
        "test_failOnArrayInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnArrayInput",
          "duration": 5
        },
        "test_failOnDateInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnDateInput",
          "duration": 5
        },
        "test_failOnRegExpInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnRegExpInput",
          "duration": 5
        },
        "test_failOnErrorInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnErrorInput",
          "duration": 6
        },
        "test_failOnFunctionInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnFunctionInput",
          "duration": 5
        },
        "test_failOnNaNInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnNaNInput",
          "duration": 5
        },
        "test_failOnInfinityInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnInfinityInput",
          "duration": 5
        },
        "test_failOnUndefinedInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnUndefinedInput",
          "duration": 5
        },
        "test_booleanInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_booleanInput",
          "duration": 1
        },
        "test_stringObjectInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringObjectInput",
          "duration": 1
        },
        "test_numberInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_numberInput",
          "duration": 2
        },
        "test_nullInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_nullInput",
          "duration": 1
        },
        "test_objectWithToStringInput": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_objectWithToStringInput",
          "duration": 1
        }
      },
      "reviver": {
        "name": "reviver",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test_reviver": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_reviver",
          "duration": 2
        }
      }
    },
    "Y.JSON.stringify (JavaScript implementation)": {
      "name": "Y.JSON.stringify (JavaScript implementation)",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 143,
      "type": "testsuite",
      "stringify": {
        "name": "stringify",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 81,
        "type": "testcase",
        "test_stringifyNatives": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyNatives",
          "duration": 1
        },
        "test_stringifyEscapes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyEscapes",
          "duration": 2
        },
        "test_stringifyObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyObject",
          "duration": 1
        },
        "test_failOnStringifyCyclicalRef1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnStringifyCyclicalRef1",
          "duration": 25
        },
        "test_failOnStringifyCyclicalRef2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnStringifyCyclicalRef2",
          "duration": 16
        },
        "test_failOnStringifyCyclicalRef3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_failOnStringifyCyclicalRef3",
          "duration": 6
        },
        "test_stringifyFunction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyFunction",
          "duration": 1
        },
        "test_stringifyRegex": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyRegex",
          "duration": 2
        },
        "test_stringifyUndefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyUndefined",
          "duration": 1
        },
        "test_stringifyDate": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyDate",
          "duration": 1
        }
      },
      "DOM based tests": {
        "name": "DOM based tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 18,
        "type": "testcase",
        "test_stringifyFormValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stringifyFormValue",
          "duration": 10
        }
      },
      "whitelist": {
        "name": "whitelist",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 6,
        "type": "testcase",
        "test_emptyWhitelistArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_emptyWhitelistArray",
          "duration": 1
        },
        "test_whitelistArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_whitelistArray",
          "duration": 1
        }
      },
      "formatting": {
        "name": "formatting",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 9,
        "type": "testcase",
        "test_falseyIndents": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_falseyIndents",
          "duration": 2
        },
        "test_indentNumber": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_indentNumber",
          "duration": 1
        },
        "test_indentString": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_indentString",
          "duration": 1
        }
      },
      "toJSON": {
        "name": "toJSON",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 4,
        "type": "testcase",
        "test_toJSON_on_object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toJSON_on_object",
          "duration": 1
        },
        "test_toJSON_on_proto": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toJSON_on_proto",
          "duration": 1
        }
      },
      "replacer": {
        "name": "replacer",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 12,
        "type": "testcase",
        "test_replacer": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replacer",
          "duration": 2
        },
        "test_replacer_after_toJSON": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replacer_after_toJSON",
          "duration": 1
        },
        "test_replacer_returning_Date": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replacer_returning_Date",
          "duration": 2
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:28 PM"
  },
  {
    "name": "Event: Simulate",
    "passed": 67,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 67,
    "duration": 710,
    "type": "report",
    "MouseEvent Tests": {
      "name": "MouseEvent Tests",
      "passed": 44,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 44,
      "duration": 368,
      "type": "testsuite",
      "Event 'click' Tests": {
        "name": "Event 'click' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 57,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'dblclick' Tests": {
        "name": "Event 'dblclick' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 129,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 4
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 3
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'mousedown' Tests": {
        "name": "Event 'mousedown' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 55,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 1
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'mouseup' Tests": {
        "name": "Event 'mouseup' Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 24,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 1
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 2
        }
      },
      "Event 'mouseover' Tests": {
        "name": "Event 'mouseover' Tests",
        "passed": 8,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 8,
        "duration": 62,
        "type": "testcase",
        "testRelatedTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRelatedTarget",
          "duration": 2
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 2
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 2
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 2
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 1
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 1
        }
      },
      "Event 'mouseout' Tests": {
        "name": "Event 'mouseout' Tests",
        "passed": 8,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 8,
        "duration": 33,
        "type": "testcase",
        "testRelatedTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRelatedTarget",
          "duration": 1
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        },
        "testRightBtn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testRightBtn",
          "duration": 1
        },
        "testCoords": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCoords",
          "duration": 1
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 1
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 2
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 2
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 1
        }
      }
    },
    "KeyEvent Tests": {
      "name": "KeyEvent Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 155,
      "type": "testsuite",
      "Event 'keyup' Tests": {
        "name": "Event 'keyup' Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 42,
        "type": "testcase",
        "testKeyCode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testKeyCode",
          "duration": 7
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 4
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 4
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 4
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 3
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 5
        }
      },
      "Event 'keydown' Tests": {
        "name": "Event 'keydown' Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 73,
        "type": "testcase",
        "testKeyCode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testKeyCode",
          "duration": 5
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 4
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 7
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 5
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 4
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 4
        }
      },
      "Event 'keypress' Tests": {
        "name": "Event 'keypress' Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 35,
        "type": "testcase",
        "testCharCode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCharCode",
          "duration": 5
        },
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 4
        },
        "testCtrlKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testCtrlKey",
          "duration": 4
        },
        "testAltKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAltKey",
          "duration": 5
        },
        "testShiftKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testShiftKey",
          "duration": 5
        },
        "testMetaKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMetaKey",
          "duration": 4
        }
      }
    },
    "UIEvents Tests": {
      "name": "UIEvents Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 102,
      "type": "testsuite",
      "Event 'change' Tests": {
        "name": "Event 'change' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 25,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        }
      },
      "Event 'select' Tests": {
        "name": "Event 'select' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 9,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        }
      },
      "Event 'submit' Tests": {
        "name": "Event 'submit' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 5,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 1
        }
      },
      "Event 'blur' Tests": {
        "name": "Event 'blur' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 9,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        }
      },
      "Event 'focus' Tests": {
        "name": "Event 'focus' Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 4,
        "type": "testcase",
        "testDefault": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDefault",
          "duration": 2
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:29 PM"
  },
  {
    "name": "Sortable",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 323,
    "type": "report",
    "Sortable Test": {
      "name": "Sortable Test",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 244,
      "type": "testcase",
      "test: loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: loading",
        "duration": 1
      },
      "test: instantiate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: instantiate",
        "duration": 67
      },
      "test: getSortable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: getSortable",
        "duration": 2
      },
      "test: full join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: full join",
        "duration": 2
      },
      "test: outer join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: outer join",
        "duration": 1
      },
      "test: inner join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: inner join",
        "duration": 2
      },
      "test: no join": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: no join",
        "duration": 2
      },
      "test: ordering": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: ordering",
        "duration": 1
      },
      "test: dragging start": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: dragging start",
        "duration": 2
      },
      "test: startDrag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: startDrag",
        "duration": 2
      },
      "test: onDrag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: onDrag",
        "duration": 10
      },
      "test: dragEnd event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: dragEnd event",
        "duration": 52
      },
      "test: DD passthru for errors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: DD passthru for errors",
        "duration": 3
      },
      "test: destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: destroy",
        "duration": 13
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:31 PM"
  },
  {
    "name": "Matrix",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 138,
    "type": "report",
    "MatrixUtil tests": {
      "name": "MatrixUtil tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 20,
      "type": "testcase",
      "testGet3x3Determinant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet3x3Determinant",
        "duration": 1
      },
      "testGet4x4Determinant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet4x4Determinant",
        "duration": 2
      },
      "testGet3x3Inverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet3x3Inverse",
        "duration": 2
      },
      "test4x4Inverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test4x4Inverse",
        "duration": 6
      },
      "test3x3Transpose": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test3x3Transpose",
        "duration": 1
      },
      "test4x4Transpose": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test4x4Transpose",
        "duration": 2
      }
    },
    "Matrix tests": {
      "name": "Matrix tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "testGetDeterminant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetDeterminant",
        "duration": 2
      },
      "testGetInverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInverse",
        "duration": 3
      },
      "testGetTranspose": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetTranspose",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:32 PM"
  },
  {
    "name": "Widget: StdMod",
    "passed": 8,
    "failed": 0,
    "errors": 1,
    "ignored": 0,
    "total": 8,
    "duration": 513,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 49,
      "type": "testcase",
      "WidgetStdMod should add `headerContent`, `bodyContent`, `footerContent`, and `fillHeight` attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetStdMod should add `headerContent`, `bodyContent`, `footerContent`, and `fillHeight` attributes",
        "duration": 48
      }
    },
    "Methods": {
      "name": "Methods",
      "passed": 7,
      "failed": 0,
      "errors": 1,
      "ignored": 0,
      "total": 7,
      "duration": 384,
      "type": "testcase",
      "getStdModNode() should return the section node if there is content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getStdModNode() should return the section node if there is content",
        "duration": 47
      },
      "getStdModNode() should create the section node when `forceCreate` is truthy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getStdModNode() should create the section node when `forceCreate` is truthy",
        "duration": 60
      },
      "setStdModContent() should update the body section of the standard module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setStdModContent() should update the body section of the standard module",
        "duration": 36
      },
      "setStdModContent() should also accept Node objects as input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setStdModContent() should also accept Node objects as input",
        "duration": 67
      },
      "fillHeight() should fill the a widget height using the provided node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fillHeight() should fill the a widget height using the provided node",
        "duration": 39
      },
      "fillHeight() should fill up the widget correctly with multiple nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fillHeight() should fill up the widget correctly with multiple nodes",
        "duration": 47
      },
      "HTML_PARSER rules should return the proper inner HTML contents from markup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HTML_PARSER rules should return the proper inner HTML contents from markup",
        "duration": 62
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:33 PM"
  },
  {
    "name": "Highlight",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 188,
    "type": "report",
    "API": {
      "name": "API",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 93,
      "type": "testcase",
      "all() should highlight all occurrences of needles in haystack": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should highlight all occurrences of needles in haystack",
        "duration": 1
      },
      "all() should escape HTML characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should escape HTML characters",
        "duration": 1
      },
      "all() should not highlight matches inside HTML entities": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should not highlight matches inside HTML entities",
        "duration": 1
      },
      "all() should highlight complete HTML entities when part of a match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should highlight complete HTML entities when part of a match",
        "duration": 1
      },
      "all() should be case-insensitive by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should be case-insensitive by default",
        "duration": 1
      },
      "all() should support a caseSensitive option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should support a caseSensitive option",
        "duration": 2
      },
      "all() should support a startsWith option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should support a startsWith option",
        "duration": 1
      },
      "all() should support caseSensitive and startsWith together": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should support caseSensitive and startsWith together",
        "duration": 2
      },
      "all() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "all() should not attempt to highlight empty needles",
        "duration": 1
      },
      "allCase() should be a shortcut for case-sensitive all()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "allCase() should be a shortcut for case-sensitive all()",
        "duration": 1
      },
      "allFold() should be an accent-folding variant of all()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "allFold() should be an accent-folding variant of all()",
        "duration": 4
      },
      "allFold() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "allFold() should not attempt to highlight empty needles",
        "duration": 3
      },
      "start() should be a shortcut for all() with startsWith option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "start() should be a shortcut for all() with startsWith option",
        "duration": 1
      },
      "startCase() should be a shortcut for caseSensitive + startsWith all()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "startCase() should be a shortcut for caseSensitive + startsWith all()",
        "duration": 1
      },
      "startFold() should be an accent-folding variant of start()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "startFold() should be an accent-folding variant of start()",
        "duration": 3
      },
      "words() should highlight complete words": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should highlight complete words",
        "duration": 2
      },
      "words() should escape HTML characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should escape HTML characters",
        "duration": 1
      },
      "words() should not highlight matches inside HTML entities": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should not highlight matches inside HTML entities",
        "duration": 1
      },
      "words() should be case-insensitive by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should be case-insensitive by default",
        "duration": 1
      },
      "words() should support a caseSensitive option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should support a caseSensitive option",
        "duration": 2
      },
      "words() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "words() should not attempt to highlight empty needles",
        "duration": 1
      },
      "wordsCase() should be a shortcut for case-sensitive words()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "wordsCase() should be a shortcut for case-sensitive words()",
        "duration": 1
      },
      "wordsFold() should be an accent-folding variant of words()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "wordsFold() should be an accent-folding variant of words()",
        "duration": 10
      },
      "wordsFold() should not attempt to highlight empty needles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "wordsFold() should not attempt to highlight empty needles",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:34 PM"
  },
  {
    "name": "Event: FocusBlur",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 399,
    "type": "report",
    "Event Focus And Blur Test": {
      "name": "Event Focus And Blur Test",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 306,
      "type": "testcase",
      "test_add_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_focus",
        "duration": 30
      },
      "test_remove_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_remove_focus",
        "duration": 21
      },
      "test_purge_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_purge_focus",
        "duration": 18
      },
      "test_bubble_order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bubble_order",
        "duration": 16
      },
      "test_add_blur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add_blur",
        "duration": 39
      },
      "test_remove_blur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_remove_blur",
        "duration": 23
      },
      "test_purge_blur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_purge_blur",
        "duration": 23
      },
      "test delegating with filter matching non-focusable elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test delegating with filter matching non-focusable elements",
        "duration": 15
      },
      "test stopping propagation for on() subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopping propagation for on() subs",
        "duration": 10
      },
      "test stopping propagation for delegate() subs matching the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopping propagation for delegate() subs matching the same node",
        "duration": 6
      },
      "test stopping propagation for delegate() subs not matching the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopping propagation for delegate() subs not matching the same node",
        "duration": 6
      },
      "test stopImmediatePropagation for on() and delegate() subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test stopImmediatePropagation for on() and delegate() subs",
        "duration": 6
      },
      "test callback order from a mix of subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback order from a mix of subs",
        "duration": 9
      },
      "test useActive feature test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test useActive feature test",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:36 PM"
  },
  {
    "name": "Event: Touch",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 101,
    "type": "report",
    "Touch": {
      "name": "Touch",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 9,
      "type": "testcase",
      "test: touch init": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: touch init",
        "duration": 1
      },
      "test: touch properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: touch properties",
        "duration": 1
      },
      "test: touch nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: touch nodes",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:37 PM"
  },
  {
    "name": "Event: Tap",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 121,
    "type": "report",
    "event tap events": {
      "name": "event tap events",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 23,
      "type": "testcase",
      "on tap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "on tap",
        "duration": 4
      },
      "touchend not in same area": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "touchend not in same area",
        "duration": 4
      },
      "delegate tap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegate tap",
        "duration": 7
      },
      "touchmove\/mousemove fired": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "touchmove\/mousemove fired",
        "duration": 5
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:38 PM"
  },
  {
    "name": "Event: Synthetic",
    "passed": 90,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 90,
    "duration": 3089,
    "type": "report",
    "Y.Event.define": {
      "name": "Y.Event.define",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 19,
      "type": "testcase",
      "Y.Event.define(name) should add to DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define(name) should add to DOM_EVENTS",
        "duration": 1
      },
      "Y.Event.define([name1, name2]) should add to DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define([name1, name2]) should add to DOM_EVENTS",
        "duration": 0
      },
      "Y.Event.define(type, {...}) should register a new synth in DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define(type, {...}) should register a new synth in DOM_EVENTS",
        "duration": 1
      },
      "Subsequent Y.Event.define() should not overwrite existing synth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Subsequent Y.Event.define() should not overwrite existing synth",
        "duration": 1
      },
      "Y.Event.define(..., true) should overwrite existing synth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define(..., true) should overwrite existing synth",
        "duration": 1
      },
      "Y.Event.define({ type: ...}) should register a new synth in DOM_EVENTS": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define({ type: ...}) should register a new synth in DOM_EVENTS",
        "duration": 1
      },
      "Y.Event.define({...}, true) should overwrite existing synth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Event.define({...}, true) should overwrite existing synth",
        "duration": 1
      }
    },
    "Y.on": {
      "name": "Y.on",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 692,
      "type": "testcase",
      "test Y.on('synth', fn, node)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node)",
        "duration": 20
      },
      "test Y.on('synth', fn, node, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node, thisObj)",
        "duration": 33
      },
      "test Y.on('synth', fn, node, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node, thisObj, arg)",
        "duration": 22
      },
      "test Y.on('synth', fn, node, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, node, null, arg)",
        "duration": 17
      },
      "test Y.on('synth', fn, el)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el)",
        "duration": 18
      },
      "test Y.on('synth', fn, el, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el, thisObj)",
        "duration": 17
      },
      "test Y.on('synth', fn, el, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el, thisObj, arg)",
        "duration": 17
      },
      "test Y.on('synth', fn, el, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, el, null, arg)",
        "duration": 17
      },
      "test Y.on('synth', fn, selectorOne)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne)",
        "duration": 18
      },
      "test Y.on('synth', fn, selectorOne, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne, thisObj)",
        "duration": 17
      },
      "test Y.on('synth', fn, selectorOne, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne, thisObj, arg)",
        "duration": 17
      },
      "test Y.on('synth', fn, selectorOne, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorOne, null, arg)",
        "duration": 16
      },
      "test Y.on('synth', fn, selectorMultiple)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple)",
        "duration": 20
      },
      "test Y.on('synth', fn, selectorMultiple, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple, thisObj)",
        "duration": 20
      },
      "test Y.on('synth', fn, selectorMultiple, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple, thisObj, arg)",
        "duration": 18
      },
      "test Y.on('synth', fn, selectorMultiple, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selectorMultiple, null, arg)",
        "duration": 27
      },
      "test Y.on('synth', fn, notYetAvailable)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable)",
        "duration": 43
      },
      "test Y.on('synth', fn, notYetAvailable, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable, thisObj)",
        "duration": 64
      },
      "test Y.on('synth', fn, notYetAvailable, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable, thisObj, arg)",
        "duration": 113
      },
      "test Y.on('synth', fn, notYetAvailable, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, notYetAvailable, null, arg)",
        "duration": 33
      },
      "test Y.on('synth', fn) defaults to window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn) defaults to window",
        "duration": 14
      }
    },
    "node.on": {
      "name": "node.on",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 106,
      "type": "testcase",
      "test node.on(x, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn)",
        "duration": 17
      },
      "test node.on(x, fn, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn, thisObj)",
        "duration": 16
      },
      "test node.on(x, fn, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn, thisObj, arg)",
        "duration": 16
      },
      "test node.on(x, fn, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(x, fn, null, arg)",
        "duration": 24
      }
    },
    "nodelist.on": {
      "name": "nodelist.on",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 99,
      "type": "testcase",
      "test nodelist.on(x, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn)",
        "duration": 20
      },
      "test nodelist.on(x, fn, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn, thisObj)",
        "duration": 18
      },
      "test nodelist.on(x, fn, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn, thisObj, arg)",
        "duration": 22
      },
      "test nodelist.on(x, fn, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(x, fn, null, arg)",
        "duration": 26
      }
    },
    "preventDups": {
      "name": "preventDups",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 135,
      "type": "testcase",
      "node.on(x, fn) + node.on(x, fn) should  allow dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.on(x, fn) + node.on(x, fn) should  allow dups",
        "duration": 20
      },
      "Y.on(x, fn) + node.on(x, fn) should allow dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.on(x, fn) + node.on(x, fn) should allow dups",
        "duration": 16
      },
      "nodelist.on(x, fn) + node.on(x, fn) should allow dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "nodelist.on(x, fn) + node.on(x, fn) should allow dups",
        "duration": 17
      },
      "preventDups:true node.on(x, fn) + node.on(x, fn) should prevent dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "preventDups:true node.on(x, fn) + node.on(x, fn) should prevent dups",
        "duration": 17
      },
      "preventDups:true Y.on(x, fn) + node.on(x, fn) should prevent dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "preventDups:true Y.on(x, fn) + node.on(x, fn) should prevent dups",
        "duration": 20
      },
      "preventDups:true nodelist.on(x, fn) + node.on(x, fn) should prevent dups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "preventDups:true nodelist.on(x, fn) + node.on(x, fn) should prevent dups",
        "duration": 14
      }
    },
    "node.delegate": {
      "name": "node.delegate",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 133,
      "type": "testcase",
      "test node.delegate(synth, fn, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter)",
        "duration": 23
      },
      "test node.delegate(synth, fn, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter, thisObj)",
        "duration": 42
      },
      "test node.delegate(synth, fn, filter, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter, thisObj, arg)",
        "duration": 19
      },
      "test node.delegate(synth, fn, filter, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate(synth, fn, filter, null, arg)",
        "duration": 22
      }
    },
    "Y.delegate": {
      "name": "Y.delegate",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 385,
      "type": "testcase",
      "test Y.delegate(synth, fn, node, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter)",
        "duration": 22
      },
      "test Y.delegate(synth, fn, el, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, el, filter)",
        "duration": 27
      },
      "test Y.delegate(synth, fn, selectorOne, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, selectorOne, filter)",
        "duration": 23
      },
      "test Y.delegate(synth, fn, node, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter, thisObj)",
        "duration": 22
      },
      "test Y.delegate(synth, fn, node, filter, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter, thisObj, arg)",
        "duration": 21
      },
      "test Y.delegate(synth, fn, node, filter, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, node, filter, null, arg)",
        "duration": 16
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter)",
        "duration": 73
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj)",
        "duration": 41
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter, thisObj, arg)",
        "duration": 45
      },
      "test Y.delegate(synth, fn, notAvailableYet, filter, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, notAvailableYet, filter, null, arg)",
        "duration": 30
      },
      "test Y.delegate(synth, fn, selectorMulti, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate(synth, fn, selectorMulti, filter)",
        "duration": 27
      }
    },
    "Detach": {
      "name": "Detach",
      "passed": 31,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 31,
      "duration": 903,
      "type": "testcase",
      "test node.on() + node.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach(synth, fn)",
        "duration": 19
      },
      "test node.on(synth, fn, thisObj) + node.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(synth, fn, thisObj) + node.detach(synth, fn)",
        "duration": 21
      },
      "test node.on() + node.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach(synth)",
        "duration": 20
      },
      "test node.on() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach()",
        "duration": 19
      },
      "test node.on() + node.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detachAll()",
        "duration": 19
      },
      "test node.on() + node.purge(true, synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.purge(true, synth)",
        "duration": 21
      },
      "test node.on() + parent.purge(true, synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + parent.purge(true, synth)",
        "duration": 19
      },
      "test nodelist.on(synth, fn) + node.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(synth, fn) + node.detach(synth, fn)",
        "duration": 20
      },
      "test nodelist.on(synth, fn) + node.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(synth, fn) + node.detach(synth)",
        "duration": 23
      },
      "test node.on(synth, fn) + nodelist.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(synth, fn) + nodelist.detach(synth, fn)",
        "duration": 19
      },
      "test node.on(synth, fn) + nodelist.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on(synth, fn) + nodelist.detach(synth)",
        "duration": 16
      },
      "test node.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + handle.detach()",
        "duration": 16
      },
      "test nodelist.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + handle.detach()",
        "duration": 18
      },
      "test nodelist.on() + nodelist.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detach(synth, fn)",
        "duration": 26
      },
      "test nodelist.on(synth, fn, thisObj) + nodelist.detach(synth, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on(synth, fn, thisObj) + nodelist.detach(synth, fn)",
        "duration": 29
      },
      "test nodelist.on() + nodelist.detach(synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detach(synth)",
        "duration": 25
      },
      "test nodelist.on() + nodelist.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detach()",
        "duration": 26
      },
      "test nodelist.on() + nodelist.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + nodelist.detachAll()",
        "duration": 25
      },
      "test nodelist.on() + parent.purge(true, synth)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on() + parent.purge(true, synth)",
        "duration": 32
      },
      "test node.on('cat|__', fn) + node.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|__', fn) + node.detach('cat|___')",
        "duration": 15
      },
      "test node.on('cat|__', fn) + node.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|__', fn) + node.detach('cat|___', fn)",
        "duration": 23
      },
      "test node.on('cat|__', fn) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|__', fn) + node.detach('cat|*')",
        "duration": 18
      },
      "test Y.on('cat|__', fn, sel) + node.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, sel) + node.detach('cat|___')",
        "duration": 19
      },
      "test Y.on('cat|__', fn, sel) + node.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, sel) + node.detach('cat|___', fn)",
        "duration": 23
      },
      "test Y.on('cat|__', fn) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn) + node.detach('cat|*')",
        "duration": 23
      },
      "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___')",
        "duration": 27
      },
      "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('cat|__', fn) + nodelist.detach('cat|___', fn)",
        "duration": 34
      },
      "test nodelist.on('cat|__', fn) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('cat|__', fn) + node.detach('cat|*')",
        "duration": 62
      },
      "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___')",
        "duration": 34
      },
      "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, multiSelector) + nodelist.detach('cat|___', fn)",
        "duration": 30
      },
      "test Y.on('cat|__', fn, multiSelector) + node.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('cat|__', fn, multiSelector) + node.detach('cat|*')",
        "duration": 32
      }
    },
    "processArgs": {
      "name": "processArgs",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 476,
      "type": "testcase",
      "test Y.on('synth', fn, selector, extra)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('synth', fn, selector, extra)",
        "duration": 22
      },
      "Y.on('synth', fn, '#not-here-yet', extra) should resubscribe with original arguments": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.on('synth', fn, '#not-here-yet', extra) should resubscribe with original arguments",
        "duration": 433
      }
    },
    "Notifier": {
      "name": "Notifier",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 0,
      "duration": 1,
      "type": "testcase"
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:42 PM"
  },
  {
    "name": "Event: resize",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 3,
    "duration": 405,
    "type": "report",
    "subscribe": {
      "name": "subscribe",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 3,
      "duration": 314,
      "type": "testcase",
      "test Y.on('windowresize', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('windowresize', fn)",
        "duration": 134
      },
      "test node.on('windowresize', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('windowresize', fn)",
        "duration": 144
      },
      "test resize event throttling": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test resize event throttling"
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:44 PM"
  },
  {
    "name": "Event: outside",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 104,
    "type": "report",
    "outside events": {
      "name": "outside events",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 5,
      "type": "testcase",
      "test: on": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: on",
        "duration": 3
      },
      "test: delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: delegate",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:45 PM"
  },
  {
    "name": "Event: mousewheel",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 96,
    "type": "report",
    "Mousewheel": {
      "name": "Mousewheel",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 3,
      "type": "testcase",
      "test: attach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attach",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:46 PM"
  },
  {
    "name": "Event: mouseenter",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 91,
    "type": "report",
    "mouseenter": {
      "name": "mouseenter",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 10,
      "type": "testcase",
      "test: _filterNotify": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _filterNotify",
        "duration": 3
      },
      "test: delegateDetach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: delegateDetach",
        "duration": 3
      },
      "test: _notify": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _notify",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:47 PM"
  },
  {
    "name": "Event: key",
    "passed": 45,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 45,
    "duration": 2171,
    "type": "report",
    "node.on('key',...)": {
      "name": "node.on('key',...)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 103,
      "type": "testcase",
      "test node.on('key', fn, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('key', fn, '65')",
        "duration": 41
      },
      "test node.on('key', fn, '65', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('key', fn, '65', thisObj)",
        "duration": 25
      },
      "test node.on('key', fn, '65', thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('key', fn, '65', thisObj, args)",
        "duration": 28
      }
    },
    "nodelist.on('key',...)": {
      "name": "nodelist.on('key',...)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 141,
      "type": "testcase",
      "test nodelist.on('key', fn, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('key', fn, '65')",
        "duration": 47
      },
      "test nodelist.on('key', fn, '65', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('key', fn, '65', thisObj)",
        "duration": 35
      },
      "test nodelist.on('key', fn, '65', thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('key', fn, '65', thisObj, args)",
        "duration": 38
      }
    },
    "Y.on('key',...)": {
      "name": "Y.on('key',...)",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 161,
      "type": "testcase",
      "test Y.on('key', fn, selector, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, selector, '65')",
        "duration": 27
      },
      "test Y.on('key', fn, node, '65')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, node, '65')",
        "duration": 24
      },
      "test Y.on('key', fn, selector, '65', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, selector, '65', thisObj)",
        "duration": 24
      },
      "test Y.on('key', fn, selector, '65', thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('key', fn, selector, '65', thisObj, args)",
        "duration": 56
      }
    },
    "node.delegate('key',...)": {
      "name": "node.delegate('key',...)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 137,
      "type": "testcase",
      "test node.delegate('key', fn, '65', filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('key', fn, '65', filter)",
        "duration": 43
      },
      "test node.delegate('key', fn, '65', filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('key', fn, '65', filter, thisObj)",
        "duration": 46
      },
      "test node.delegate('key', fn, '65', filter, thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('key', fn, '65', filter, thisObj, args)",
        "duration": 38
      }
    },
    "Y.delegate('key',...)": {
      "name": "Y.delegate('key',...)",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 197,
      "type": "testcase",
      "test Y.delegate('key', fn, '65', selector, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', selector, filter)",
        "duration": 37
      },
      "test Y.delegate('key', fn, '65', node, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', node, filter)",
        "duration": 40
      },
      "test Y.delegate('key', fn, '65', selector, filter, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', selector, filter, thisObj)",
        "duration": 43
      },
      "test Y.delegate('key', fn, '65', selector, filter, thisObj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.delegate('key', fn, '65', selector, filter, thisObj, args)",
        "duration": 49
      }
    },
    "key spec\/filter": {
      "name": "key spec\/filter",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 1219,
      "type": "testcase",
      "test 'down:65'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'down:65'",
        "duration": 40
      },
      "test 'up:65'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'up:65'",
        "duration": 38
      },
      "test 'press:65'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'press:65'",
        "duration": 38
      },
      "test 'a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a'",
        "duration": 46
      },
      "test 'down:a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'down:a'",
        "duration": 38
      },
      "test 'up:a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'up:a'",
        "duration": 35
      },
      "test 'press:a'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'press:a'",
        "duration": 55
      },
      "test 'A'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'A'",
        "duration": 39
      },
      "test 'enter', 'esc', 'backspace', 'tab', 'pageup', 'pagedown'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'enter', 'esc', 'backspace', 'tab', 'pageup', 'pagedown'",
        "duration": 158
      },
      "test 'a,b'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a,b'",
        "duration": 45
      },
      "test '65,b,esc'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test '65,b,esc'",
        "duration": 65
      },
      "test 'unknownKeyName'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'unknownKeyName'",
        "duration": 38
      },
      "test '65,unknownKeyName'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test '65,unknownKeyName'",
        "duration": 12
      },
      "test '65,unknownKeyName+alt'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test '65,unknownKeyName+alt'",
        "duration": 13
      },
      "test 'press:a,b'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'press:a,b'",
        "duration": 13
      },
      "test 'a+shift'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a+shift'",
        "duration": 48
      },
      "test 'enter+ctrl'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'enter+ctrl'",
        "duration": 74
      },
      "test 'up:a+alt'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'up:a+alt'",
        "duration": 11
      },
      "test 'a,b+shift+meta'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test 'a,b+shift+meta'",
        "duration": 78
      },
      "test spec with spaces 'down:65, 66,   67'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test spec with spaces 'down:65, 66,   67'",
        "duration": 46
      },
      "test spec with no keyCodes 'down:'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test spec with no keyCodes 'down:'",
        "duration": 71
      },
      "test spec with only modifiers '+ctrl+shift'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test spec with only modifiers '+ctrl+shift'",
        "duration": 78
      }
    },
    "detach": {
      "name": "detach",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 117,
      "type": "testcase",
      "test node.on() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + node.detach()",
        "duration": 13
      },
      "test Y.on() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on() + node.detach()",
        "duration": 19
      },
      "test node.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on() + handle.detach()",
        "duration": 20
      },
      "test node.on('cat|key',...) + node.detach('cat|...')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|key',...) + node.detach('cat|...')",
        "duration": 16
      },
      "test node.delegate() + node.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate() + node.detach()",
        "duration": 13
      },
      "test node.delegate() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate() + handle.detach()",
        "duration": 18
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:50 PM"
  },
  {
    "name": "Event: hover",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 901,
    "type": "report",
    "subscribe": {
      "name": "subscribe",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 513,
      "type": "testcase",
      "test node.on('hover', over, out)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out)",
        "duration": 32
      },
      "test container.on('hover', over, out)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test container.on('hover', over, out)",
        "duration": 22
      },
      "test Y.on('hover', over, out, '#foo')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo')",
        "duration": 40
      },
      "test nodelist.on('hover', over, out)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out)",
        "duration": 34
      },
      "test node.delegate('hover', over, out, filter)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter)",
        "duration": 35
      },
      "test node.on('hover', over, out, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out, thisObj)",
        "duration": 30
      },
      "test Y.on('hover', over, out, '#foo', thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo', thisObj)",
        "duration": 27
      },
      "test nodelist.on('hover', over, out, thisObj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out, thisObj)",
        "duration": 59
      },
      "test node.on('hover', over, out, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out, thisObj, arg)",
        "duration": 23
      },
      "test Y.on('hover', over, out, '#foo', thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo', thisObj, arg)",
        "duration": 23
      },
      "test nodelist.on('hover', over, out, thisObj, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out, thisObj, arg)",
        "duration": 28
      },
      "test node.on('hover', over, out, null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out, null, arg)",
        "duration": 19
      },
      "test Y.on('hover', over, out, '#foo', null, arg)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on('hover', over, out, '#foo', null, arg)",
        "duration": 22
      },
      "test nodelist.on('hover', over, out, null, arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nodelist.on('hover', over, out, null, arg",
        "duration": 29
      }
    },
    "detach": {
      "name": "detach",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 311,
      "type": "testcase",
      "test node.on('hover', over, out); node.detach('hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out); node.detach('hover');",
        "duration": 19
      },
      "test node.on('hover', over, out); node.detach('hover', over);": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out); node.detach('hover', over);",
        "duration": 25
      },
      "test node.on('cat|hover', over, out); node.detach('cat|hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|hover', over, out); node.detach('cat|hover');",
        "duration": 25
      },
      "test node.on('cat|hover', over, out); node.detach('cat|*');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('cat|hover', over, out); node.detach('cat|*');",
        "duration": 26
      },
      "test node.on('hover', over, out); handle.detach();": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.on('hover', over, out); handle.detach();",
        "duration": 21
      },
      "test node.delegate('hover', over, out, filter); node.detach('hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter); node.detach('hover');",
        "duration": 23
      },
      "test node.delegate('hover', over, out, filter); node.detach('hover', over);": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter); node.detach('hover', over);",
        "duration": 31
      },
      "test node.delegate('cat|hover', over, out, filter); node.detach('cat|hover');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('cat|hover', over, out, filter); node.detach('cat|hover');",
        "duration": 30
      },
      "test node.delegate('cat|hover', over, out, filter); node.detach('cat|*');": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('cat|hover', over, out, filter); node.detach('cat|*');",
        "duration": 27
      },
      "test node.delegate('hover', over, out, filter); handle.detach();": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test node.delegate('hover', over, out, filter); handle.detach();",
        "duration": 25
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:52 PM"
  },
  {
    "name": "Event: ContextMenu",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 356,
    "type": "report",
    "ContextMenu Synth Tests": {
      "name": "ContextMenu Synth Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 241,
      "type": "testcase",
      "test_contextmenu_event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_contextmenu_event",
        "duration": 3
      },
      "test_mac_kb_shortct": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_mac_kb_shortct",
        "duration": 9
      },
      "test_shiftF10_key": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_shiftF10_key",
        "duration": 6
      },
      "test_menu_key": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_menu_key",
        "duration": 13
      },
      "test_xy_coords_for_menu": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_xy_coords_for_menu",
        "duration": 34
      },
      "test_xy_coords_for_shift10_or_ctrl_shift_option_m": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_xy_coords_for_shift10_or_ctrl_shift_option_m",
        "duration": 10
      },
      "test_multiple_on_listeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_on_listeners",
        "duration": 33
      },
      "test_multiple_delegate_listeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_delegate_listeners",
        "duration": 8
      },
      "test_multiple_on_and_delegate_listeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_on_and_delegate_listeners",
        "duration": 9
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:53 PM"
  },
  {
    "name": "Event: DOM",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 918,
    "type": "report",
    "DOM Events": {
      "name": "DOM Events",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 828,
      "type": "testcase",
      "test_on_with_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_on_with_string",
        "duration": 3
      },
      "test_on_with_node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_on_with_node",
        "duration": 2
      },
      "test_node_on": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_node_on",
        "duration": 2
      },
      "test_node_detachall": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_node_detachall",
        "duration": 2
      },
      "test_nodelist_on": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_nodelist_on",
        "duration": 2
      },
      "test_y_on_with_nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_with_nodelist",
        "duration": 2
      },
      "test_y_detach_with_nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_detach_with_nodelist",
        "duration": 3
      },
      "test_y_detach_with_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_detach_with_array",
        "duration": 2
      },
      "test_y_on_with_selector_multiple_match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_with_selector_multiple_match",
        "duration": 2
      },
      "test_y_on_with_htmlelementcollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_with_htmlelementcollection",
        "duration": 2
      },
      "test_y_on_empty_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_y_on_empty_array",
        "duration": 1
      },
      "test_detach_by_sig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_detach_by_sig",
        "duration": 4
      },
      "test_multi_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_detach",
        "duration": 2
      },
      "test_onavail_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_onavail_detach",
        "duration": 334
      },
      "test_lazy_attach_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_lazy_attach_detach",
        "duration": 320
      },
      "test_purge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_purge",
        "duration": 5
      },
      "test_categories": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_categories",
        "duration": 3
      },
      "test left and right click, mouseup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test left and right click, mouseup",
        "duration": 4
      },
      "test Y.on(load)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.on(load)",
        "duration": 5
      },
      "error in onavailable callback should not result in infinite _poll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "error in onavailable callback should not result in infinite _poll",
        "duration": 67
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:55 PM"
  },
  {
    "name": "Event: Delegate",
    "passed": 33,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 33,
    "duration": 686,
    "type": "report",
    "Event Delegate Tests": {
      "name": "Event Delegate Tests",
      "passed": 27,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 27,
      "duration": 523,
      "type": "testcase",
      "test_simple_delegate_for_anchors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_simple_delegate_for_anchors",
        "duration": 4
      },
      "test_multiple_selectors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_selectors",
        "duration": 4
      },
      "test_filter_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_filter_function",
        "duration": 4
      },
      "test_filter_function_for_focus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_filter_function_for_focus",
        "duration": 15
      },
      "test_document_as_container": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_document_as_container",
        "duration": 5
      },
      "test_checking_delegation_target": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_checking_delegation_target",
        "duration": 6
      },
      "test_including_container_in_selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_including_container_in_selector",
        "duration": 5
      },
      "test_targeting_container_without_selectors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_targeting_container_without_selectors",
        "duration": 5
      },
      "test_multiple_selectors_one_match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_selectors_one_match",
        "duration": 5
      },
      "test_multiple_delegate_matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_delegate_matches",
        "duration": 7
      },
      "test_bubble_up_after_delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bubble_up_after_delegate",
        "duration": 8
      },
      "test_bubble_up_after_delegate_halt": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_bubble_up_after_delegate_halt",
        "duration": 8
      },
      "test_direct_descendant_combinator": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_direct_descendant_combinator",
        "duration": 17
      },
      "test_multiple_matches_in_subtree": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_matches_in_subtree",
        "duration": 7
      },
      "test_removing_parent_in_subscriber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_removing_parent_in_subscriber",
        "duration": 3
      },
      "test_successful_purge": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_successful_purge",
        "duration": 25
      },
      "test_successful_detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_successful_detach",
        "duration": 20
      },
      "Y.delegate('cat|type') should subscribe event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.delegate('cat|type') should subscribe event",
        "duration": 13
      },
      "node.delegate('cat|type') should subscribe event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.delegate('cat|type') should subscribe event",
        "duration": 10
      },
      "node.detach('cat|type', fn) should detach delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.detach('cat|type', fn) should detach delegate",
        "duration": 12
      },
      "node.detach('cat|type') should detach delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.detach('cat|type') should detach delegate",
        "duration": 13
      },
      "node.detach('cat|*') should detach delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "node.detach('cat|*') should detach delegate",
        "duration": 10
      },
      "testPassingObjectForMultipleSubscriptions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPassingObjectForMultipleSubscriptions",
        "duration": 15
      },
      "testThisObjOverrideWithObjectSubscription": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testThisObjOverrideWithObjectSubscription",
        "duration": 39
      },
      "testPassingExtraArgsWithObjectSubscription": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPassingExtraArgsWithObjectSubscription",
        "duration": 17
      },
      "testDetachingObjectSubscriptionViaHandle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachingObjectSubscriptionViaHandle",
        "duration": 16
      },
      "testPassingArrayForMultipleSubscriptions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPassingArrayForMultipleSubscriptions",
        "duration": 10
      }
    },
    "Y.delegate.compileFilter": {
      "name": "Y.delegate.compileFilter",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "Y.delegate.compileFilter should return a function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.delegate.compileFilter should return a function",
        "duration": 1
      },
      "filter should return true for matching descendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter should return true for matching descendant",
        "duration": 2
      },
      "filter should return false if no descendant matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter should return false if no descendant matches",
        "duration": 1
      },
      "filter should return true if the currentTarget is the target and it matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter should return true if the currentTarget is the target and it matches",
        "duration": 1
      }
    },
    "Bugs": {
      "name": "Bugs",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 44,
      "type": "testcase",
      "test_filter_function_for_focus_from_body": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_filter_function_for_focus_from_body",
        "duration": 16
      },
      "stopPropagation should stop multiple matches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "stopPropagation should stop multiple matches",
        "duration": 20
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:42:56 PM"
  },
  {
    "name": "Charts: VerticalSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8756,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923376769_78": {
      "name": "testCase_yui_3_5_0_1_1349923376769_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 473
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_79": {
      "name": "testCase_yui_3_5_0_1_1349923376769_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 426
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_80": {
      "name": "testCase_yui_3_5_0_1_1349923376769_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 499,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 496
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_81": {
      "name": "testCase_yui_3_5_0_1_1349923376769_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 401
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_82": {
      "name": "testCase_yui_3_5_0_1_1349923376769_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 414,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_83": {
      "name": "testCase_yui_3_5_0_1_1349923376769_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 486,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 465
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_84": {
      "name": "testCase_yui_3_5_0_1_1349923376769_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 431
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_85": {
      "name": "testCase_yui_3_5_0_1_1349923376769_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 485,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 481
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_86": {
      "name": "testCase_yui_3_5_0_1_1349923376769_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_87": {
      "name": "testCase_yui_3_5_0_1_1349923376769_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 465
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_88": {
      "name": "testCase_yui_3_5_0_1_1349923376769_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 625,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 603
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_89": {
      "name": "testCase_yui_3_5_0_1_1349923376769_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 446,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 443
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_90": {
      "name": "testCase_yui_3_5_0_1_1349923376769_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 506
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_91": {
      "name": "testCase_yui_3_5_0_1_1349923376769_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 450,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 437
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_92": {
      "name": "testCase_yui_3_5_0_1_1349923376769_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 605,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 602
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_93": {
      "name": "testCase_yui_3_5_0_1_1349923376769_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 455,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 452
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_94": {
      "name": "testCase_yui_3_5_0_1_1349923376769_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 462,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "testCase_yui_3_5_0_1_1349923376769_95": {
      "name": "testCase_yui_3_5_0_1_1349923376769_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 555,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 552
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:43:06 PM"
  },
  {
    "name": "Charts: VerticalLineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 11841,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923386855_78": {
      "name": "testCase_yui_3_5_0_1_1349923386855_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1373,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 649
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 697
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_79": {
      "name": "testCase_yui_3_5_0_1_1349923386855_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1269,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 589
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 580
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_80": {
      "name": "testCase_yui_3_5_0_1_1349923386855_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1442,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 697
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 623
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_81": {
      "name": "testCase_yui_3_5_0_1_1349923386855_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1282,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 585
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 676
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_82": {
      "name": "testCase_yui_3_5_0_1_1349923386855_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1503,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 840
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 657
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_83": {
      "name": "testCase_yui_3_5_0_1_1349923386855_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1534,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 763
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 766
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_84": {
      "name": "testCase_yui_3_5_0_1_1349923386855_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1668,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 795
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 854
      }
    },
    "testCase_yui_3_5_0_1_1349923386855_85": {
      "name": "testCase_yui_3_5_0_1_1349923386855_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1558,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 689
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 848
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:43:19 PM"
  },
  {
    "name": "Charts: VerticalComboSplineShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 31820,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923400088_78": {
      "name": "testCase_yui_3_5_0_1_1349923400088_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3244,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1574
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1558
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_79": {
      "name": "testCase_yui_3_5_0_1_1349923400088_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3387,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1639
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1715
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_80": {
      "name": "testCase_yui_3_5_0_1_1349923400088_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3937,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1976
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1954
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_81": {
      "name": "testCase_yui_3_5_0_1_1349923400088_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3900,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1915
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1867
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_82": {
      "name": "testCase_yui_3_5_0_1_1349923400088_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3865,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1915
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1943
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_83": {
      "name": "testCase_yui_3_5_0_1_1349923400088_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3886,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1893
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1952
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_84": {
      "name": "testCase_yui_3_5_0_1_1349923400088_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4737,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2343
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2382
      }
    },
    "testCase_yui_3_5_0_1_1349923400088_85": {
      "name": "testCase_yui_3_5_0_1_1349923400088_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4739,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2306
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2406
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:43:52 PM"
  },
  {
    "name": "Charts: VerticalComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 9404,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923433188_78": {
      "name": "testCase_yui_3_5_0_1_1349923433188_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 605,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 602
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_79": {
      "name": "testCase_yui_3_5_0_1_1349923433188_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 437
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_80": {
      "name": "testCase_yui_3_5_0_1_1349923433188_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 516
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_81": {
      "name": "testCase_yui_3_5_0_1_1349923433188_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_82": {
      "name": "testCase_yui_3_5_0_1_1349923433188_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 536,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 532
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_83": {
      "name": "testCase_yui_3_5_0_1_1349923433188_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 488,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 472
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_84": {
      "name": "testCase_yui_3_5_0_1_1349923433188_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 515,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 512
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_85": {
      "name": "testCase_yui_3_5_0_1_1349923433188_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 442
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_86": {
      "name": "testCase_yui_3_5_0_1_1349923433188_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 417
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_87": {
      "name": "testCase_yui_3_5_0_1_1349923433188_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 468,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 452
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_88": {
      "name": "testCase_yui_3_5_0_1_1349923433188_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 457,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_89": {
      "name": "testCase_yui_3_5_0_1_1349923433188_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 518,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 514
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_90": {
      "name": "testCase_yui_3_5_0_1_1349923433188_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 487,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 484
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_91": {
      "name": "testCase_yui_3_5_0_1_1349923433188_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 624,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 621
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_92": {
      "name": "testCase_yui_3_5_0_1_1349923433188_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 517,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 482
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_93": {
      "name": "testCase_yui_3_5_0_1_1349923433188_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 571,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 568
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_94": {
      "name": "testCase_yui_3_5_0_1_1349923433188_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 486
      }
    },
    "testCase_yui_3_5_0_1_1349923433188_95": {
      "name": "testCase_yui_3_5_0_1_1349923433188_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 573,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 564
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:44:03 PM"
  },
  {
    "name": "Charts: VerticalComboSplineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 21610,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923443810_78": {
      "name": "testCase_yui_3_5_0_1_1349923443810_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2332,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1172
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1139
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_79": {
      "name": "testCase_yui_3_5_0_1_1349923443810_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2306,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1136
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1162
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_80": {
      "name": "testCase_yui_3_5_0_1_1349923443810_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2452,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1211
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1197
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_81": {
      "name": "testCase_yui_3_5_0_1_1349923443810_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2674,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1347
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1321
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_82": {
      "name": "testCase_yui_3_5_0_1_1349923443810_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2825,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1382
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1408
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_83": {
      "name": "testCase_yui_3_5_0_1_1349923443810_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3008,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1618
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1348
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_84": {
      "name": "testCase_yui_3_5_0_1_1349923443810_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2886,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1460
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1420
      }
    },
    "testCase_yui_3_5_0_1_1349923443810_85": {
      "name": "testCase_yui_3_5_0_1_1349923443810_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2898,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1418
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1474
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:44:26 PM"
  },
  {
    "name": "Charts: VerticalComboShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 15300,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923466852_78": {
      "name": "testCase_yui_3_5_0_1_1349923466852_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1738,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 880
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 829
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_79": {
      "name": "testCase_yui_3_5_0_1_1349923466852_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1735,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 834
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 870
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_80": {
      "name": "testCase_yui_3_5_0_1_1349923466852_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1746,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 861
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 878
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_81": {
      "name": "testCase_yui_3_5_0_1_1349923466852_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1821,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 906
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 877
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_82": {
      "name": "testCase_yui_3_5_0_1_1349923466852_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1979,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 984
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 988
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_83": {
      "name": "testCase_yui_3_5_0_1_1349923466852_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1973,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 982
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 977
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_84": {
      "name": "testCase_yui_3_5_0_1_1349923466852_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2060,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1035
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1020
      }
    },
    "testCase_yui_3_5_0_1_1349923466852_85": {
      "name": "testCase_yui_3_5_0_1_1349923466852_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2093,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1049
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1015
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:44:43 PM"
  },
  {
    "name": "Charts: VerticalComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8402,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923483437_78": {
      "name": "testCase_yui_3_5_0_1_1349923483437_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 556,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 529
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_79": {
      "name": "testCase_yui_3_5_0_1_1349923483437_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_80": {
      "name": "testCase_yui_3_5_0_1_1349923483437_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_81": {
      "name": "testCase_yui_3_5_0_1_1349923483437_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_82": {
      "name": "testCase_yui_3_5_0_1_1349923483437_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 553,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 547
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_83": {
      "name": "testCase_yui_3_5_0_1_1349923483437_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 438
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_84": {
      "name": "testCase_yui_3_5_0_1_1349923483437_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_85": {
      "name": "testCase_yui_3_5_0_1_1349923483437_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 488,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 474
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_86": {
      "name": "testCase_yui_3_5_0_1_1349923483437_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 361
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_87": {
      "name": "testCase_yui_3_5_0_1_1349923483437_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 494,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 491
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_88": {
      "name": "testCase_yui_3_5_0_1_1349923483437_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 395
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_89": {
      "name": "testCase_yui_3_5_0_1_1349923483437_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 398
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_90": {
      "name": "testCase_yui_3_5_0_1_1349923483437_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_91": {
      "name": "testCase_yui_3_5_0_1_1349923483437_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 424
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_92": {
      "name": "testCase_yui_3_5_0_1_1349923483437_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 486,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_93": {
      "name": "testCase_yui_3_5_0_1_1349923483437_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_94": {
      "name": "testCase_yui_3_5_0_1_1349923483437_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 553,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 550
      }
    },
    "testCase_yui_3_5_0_1_1349923483437_95": {
      "name": "testCase_yui_3_5_0_1_1349923483437_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:44:52 PM"
  },
  {
    "name": "Charts: VerticalComboGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 14653,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923493206_78": {
      "name": "testCase_yui_3_5_0_1_1349923493206_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1725,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 900
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 818
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_79": {
      "name": "testCase_yui_3_5_0_1_1349923493206_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1763,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 882
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 851
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_80": {
      "name": "testCase_yui_3_5_0_1_1349923493206_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1615,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 815
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 793
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_81": {
      "name": "testCase_yui_3_5_0_1_1349923493206_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1537,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 742
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 788
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_82": {
      "name": "testCase_yui_3_5_0_1_1349923493206_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1914,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 899
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 965
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_83": {
      "name": "testCase_yui_3_5_0_1_1349923493206_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1916,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 966
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 944
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_84": {
      "name": "testCase_yui_3_5_0_1_1349923493206_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2136,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 961
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1114
      }
    },
    "testCase_yui_3_5_0_1_1349923493206_85": {
      "name": "testCase_yui_3_5_0_1_1349923493206_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1935,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 938
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 965
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:45:08 PM"
  },
  {
    "name": "Charts: VerticalAreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7908,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923509101_78": {
      "name": "testCase_yui_3_5_0_1_1349923509101_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 491,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 488
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_79": {
      "name": "testCase_yui_3_5_0_1_1349923509101_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 355
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_80": {
      "name": "testCase_yui_3_5_0_1_1349923509101_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 478
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_81": {
      "name": "testCase_yui_3_5_0_1_1349923509101_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 359
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_82": {
      "name": "testCase_yui_3_5_0_1_1349923509101_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 397
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_83": {
      "name": "testCase_yui_3_5_0_1_1349923509101_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 458,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 455
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_84": {
      "name": "testCase_yui_3_5_0_1_1349923509101_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 371,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_85": {
      "name": "testCase_yui_3_5_0_1_1349923509101_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 472,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 469
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_86": {
      "name": "testCase_yui_3_5_0_1_1349923509101_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 355
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_87": {
      "name": "testCase_yui_3_5_0_1_1349923509101_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 414,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_88": {
      "name": "testCase_yui_3_5_0_1_1349923509101_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 507
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_89": {
      "name": "testCase_yui_3_5_0_1_1349923509101_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_90": {
      "name": "testCase_yui_3_5_0_1_1349923509101_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 503,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 500
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_91": {
      "name": "testCase_yui_3_5_0_1_1349923509101_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_92": {
      "name": "testCase_yui_3_5_0_1_1349923509101_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 477,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 474
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_93": {
      "name": "testCase_yui_3_5_0_1_1349923509101_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 392,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 388
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_94": {
      "name": "testCase_yui_3_5_0_1_1349923509101_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 425
      }
    },
    "testCase_yui_3_5_0_1_1349923509101_95": {
      "name": "testCase_yui_3_5_0_1_1349923509101_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 478
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:45:17 PM"
  },
  {
    "name": "Charts: VerticalAreaGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6686,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923518247_78": {
      "name": "testCase_yui_3_5_0_1_1349923518247_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 475,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 464
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_79": {
      "name": "testCase_yui_3_5_0_1_1349923518247_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 290,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 285
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_80": {
      "name": "testCase_yui_3_5_0_1_1349923518247_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 314,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 310
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_81": {
      "name": "testCase_yui_3_5_0_1_1349923518247_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 350
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_82": {
      "name": "testCase_yui_3_5_0_1_1349923518247_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 319
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_83": {
      "name": "testCase_yui_3_5_0_1_1349923518247_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_84": {
      "name": "testCase_yui_3_5_0_1_1349923518247_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 350,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_85": {
      "name": "testCase_yui_3_5_0_1_1349923518247_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 296,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 293
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_86": {
      "name": "testCase_yui_3_5_0_1_1349923518247_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_87": {
      "name": "testCase_yui_3_5_0_1_1349923518247_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 322
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_88": {
      "name": "testCase_yui_3_5_0_1_1349923518247_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 354
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_89": {
      "name": "testCase_yui_3_5_0_1_1349923518247_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 398
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_90": {
      "name": "testCase_yui_3_5_0_1_1349923518247_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 343
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_91": {
      "name": "testCase_yui_3_5_0_1_1349923518247_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_92": {
      "name": "testCase_yui_3_5_0_1_1349923518247_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 359
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_93": {
      "name": "testCase_yui_3_5_0_1_1349923518247_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 329,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 326
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_94": {
      "name": "testCase_yui_3_5_0_1_1349923518247_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 458,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 454
      }
    },
    "testCase_yui_3_5_0_1_1349923518247_95": {
      "name": "testCase_yui_3_5_0_1_1349923518247_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:45:25 PM"
  },
  {
    "name": "Charts: VerticalAreaGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 10831,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923526201_78": {
      "name": "testCase_yui_3_5_0_1_1349923526201_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1286,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 657
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 603
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_79": {
      "name": "testCase_yui_3_5_0_1_1349923526201_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1249,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 607
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 633
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_80": {
      "name": "testCase_yui_3_5_0_1_1349923526201_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1231,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 655
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 562
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_81": {
      "name": "testCase_yui_3_5_0_1_1349923526201_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1286,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 646
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 635
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_82": {
      "name": "testCase_yui_3_5_0_1_1349923526201_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1342,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 699
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 599
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_83": {
      "name": "testCase_yui_3_5_0_1_1349923526201_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1419,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 692
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 706
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_84": {
      "name": "testCase_yui_3_5_0_1_1349923526201_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1511,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 709
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 776
      }
    },
    "testCase_yui_3_5_0_1_1349923526201_85": {
      "name": "testCase_yui_3_5_0_1_1349923526201_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1383,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 647
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 731
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:45:37 PM"
  },
  {
    "name": "Charts: VerticalAreaDataProvider",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 9413,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 446,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 424
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 291,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 274
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 312,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 328,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 324
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 332,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 325
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 292,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 287
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 310
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 367
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 289,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 286
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 292,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 280
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 334,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 331
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 353
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 419,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "Missing Values Large Data DataProvider Tests": {
      "name": "Missing Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "Missing Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 305
      }
    },
    "Missing First Values Large Data DataProvider Tests": {
      "name": "Missing First Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 440
      }
    },
    "Missing First Values Large Data Stacked DataProvider Tests": {
      "name": "Missing First Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 319,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 308
      }
    },
    "Missing Last Values Large Data DataProvider Tests": {
      "name": "Missing Last Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "Missing Last Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Last Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "Split Trailing Series DataProvider DataProvider Tests": {
      "name": "Split Trailing Series DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 335,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 333
      }
    },
    "Split Trailing Series DataProvider Stacked DataProvider Tests": {
      "name": "Split Trailing Series DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 435
      }
    },
    "Two Series End Together DataProvider DataProvider Tests": {
      "name": "Two Series End Together DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "Two Series End Together DataProvider Stacked DataProvider Tests": {
      "name": "Two Series End Together DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 308
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:45:48 PM"
  },
  {
    "name": "Charts: StackedVerticalSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8192,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923548909_78": {
      "name": "testCase_yui_3_5_0_1_1349923548909_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 533
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_79": {
      "name": "testCase_yui_3_5_0_1_1349923548909_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_80": {
      "name": "testCase_yui_3_5_0_1_1349923548909_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 469,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 465
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_81": {
      "name": "testCase_yui_3_5_0_1_1349923548909_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 361
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_82": {
      "name": "testCase_yui_3_5_0_1_1349923548909_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 403,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_83": {
      "name": "testCase_yui_3_5_0_1_1349923548909_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 479,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 476
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_84": {
      "name": "testCase_yui_3_5_0_1_1349923548909_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 388
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_85": {
      "name": "testCase_yui_3_5_0_1_1349923548909_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 460,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_86": {
      "name": "testCase_yui_3_5_0_1_1349923548909_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 359
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_87": {
      "name": "testCase_yui_3_5_0_1_1349923548909_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_88": {
      "name": "testCase_yui_3_5_0_1_1349923548909_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 482,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 467
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_89": {
      "name": "testCase_yui_3_5_0_1_1349923548909_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_90": {
      "name": "testCase_yui_3_5_0_1_1349923548909_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 523,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 502
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_91": {
      "name": "testCase_yui_3_5_0_1_1349923548909_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 398
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_92": {
      "name": "testCase_yui_3_5_0_1_1349923548909_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 503,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 499
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_93": {
      "name": "testCase_yui_3_5_0_1_1349923548909_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_94": {
      "name": "testCase_yui_3_5_0_1_1349923548909_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 507
      }
    },
    "testCase_yui_3_5_0_1_1349923548909_95": {
      "name": "testCase_yui_3_5_0_1_1349923548909_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 475,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 461
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:45:57 PM"
  },
  {
    "name": "Charts: VerticalComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 11150,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923558297_78": {
      "name": "testCase_yui_3_5_0_1_1349923558297_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 688,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 674
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_79": {
      "name": "testCase_yui_3_5_0_1_1349923558297_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 631,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 616
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_80": {
      "name": "testCase_yui_3_5_0_1_1349923558297_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 518,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 509
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_81": {
      "name": "testCase_yui_3_5_0_1_1349923558297_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 623,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 612
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_82": {
      "name": "testCase_yui_3_5_0_1_1349923558297_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 541,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 536
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_83": {
      "name": "testCase_yui_3_5_0_1_1349923558297_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 655,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 648
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_84": {
      "name": "testCase_yui_3_5_0_1_1349923558297_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 516
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_85": {
      "name": "testCase_yui_3_5_0_1_1349923558297_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 588,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 585
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_86": {
      "name": "testCase_yui_3_5_0_1_1349923558297_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 535,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 511
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_87": {
      "name": "testCase_yui_3_5_0_1_1349923558297_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 675,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 672
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_88": {
      "name": "testCase_yui_3_5_0_1_1349923558297_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 648,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 645
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_89": {
      "name": "testCase_yui_3_5_0_1_1349923558297_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 587,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 567
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_90": {
      "name": "testCase_yui_3_5_0_1_1349923558297_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 698,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 683
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_91": {
      "name": "testCase_yui_3_5_0_1_1349923558297_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 590,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 574
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_92": {
      "name": "testCase_yui_3_5_0_1_1349923558297_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 669,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 666
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_93": {
      "name": "testCase_yui_3_5_0_1_1349923558297_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 680,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 677
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_94": {
      "name": "testCase_yui_3_5_0_1_1349923558297_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 568,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 565
      }
    },
    "testCase_yui_3_5_0_1_1349923558297_95": {
      "name": "testCase_yui_3_5_0_1_1349923558297_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 628,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 625
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:46:10 PM"
  },
  {
    "name": "Charts: VerticalComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7848,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923570690_78": {
      "name": "testCase_yui_3_5_0_1_1349923570690_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 549,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 536
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_79": {
      "name": "testCase_yui_3_5_0_1_1349923570690_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 348,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 346
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_80": {
      "name": "testCase_yui_3_5_0_1_1349923570690_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_81": {
      "name": "testCase_yui_3_5_0_1_1349923570690_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 349,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 346
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_82": {
      "name": "testCase_yui_3_5_0_1_1349923570690_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_83": {
      "name": "testCase_yui_3_5_0_1_1349923570690_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_84": {
      "name": "testCase_yui_3_5_0_1_1349923570690_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_85": {
      "name": "testCase_yui_3_5_0_1_1349923570690_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 442,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_86": {
      "name": "testCase_yui_3_5_0_1_1349923570690_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_87": {
      "name": "testCase_yui_3_5_0_1_1349923570690_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 435
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_88": {
      "name": "testCase_yui_3_5_0_1_1349923570690_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_89": {
      "name": "testCase_yui_3_5_0_1_1349923570690_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 385,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_90": {
      "name": "testCase_yui_3_5_0_1_1349923570690_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 510,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 507
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_91": {
      "name": "testCase_yui_3_5_0_1_1349923570690_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_92": {
      "name": "testCase_yui_3_5_0_1_1349923570690_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 485,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 482
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_93": {
      "name": "testCase_yui_3_5_0_1_1349923570690_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 437,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 435
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_94": {
      "name": "testCase_yui_3_5_0_1_1349923570690_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 545,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 541
      }
    },
    "testCase_yui_3_5_0_1_1349923570690_95": {
      "name": "testCase_yui_3_5_0_1_1349923570690_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:46:19 PM"
  },
  {
    "name": "Charts: StackedVerticalAreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8908,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923579706_78": {
      "name": "testCase_yui_3_5_0_1_1349923579706_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 563,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 560
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_79": {
      "name": "testCase_yui_3_5_0_1_1349923579706_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 423
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_80": {
      "name": "testCase_yui_3_5_0_1_1349923579706_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 528,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_81": {
      "name": "testCase_yui_3_5_0_1_1349923579706_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 398
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_82": {
      "name": "testCase_yui_3_5_0_1_1349923579706_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 575,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 572
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_83": {
      "name": "testCase_yui_3_5_0_1_1349923579706_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 396
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_84": {
      "name": "testCase_yui_3_5_0_1_1349923579706_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_85": {
      "name": "testCase_yui_3_5_0_1_1349923579706_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 508,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 502
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_86": {
      "name": "testCase_yui_3_5_0_1_1349923579706_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 395
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_87": {
      "name": "testCase_yui_3_5_0_1_1349923579706_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 568,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 556
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_88": {
      "name": "testCase_yui_3_5_0_1_1349923579706_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_89": {
      "name": "testCase_yui_3_5_0_1_1349923579706_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 509,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 506
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_90": {
      "name": "testCase_yui_3_5_0_1_1349923579706_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 458,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 456
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_91": {
      "name": "testCase_yui_3_5_0_1_1349923579706_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 550,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 528
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_92": {
      "name": "testCase_yui_3_5_0_1_1349923579706_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 467
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_93": {
      "name": "testCase_yui_3_5_0_1_1349923579706_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 548,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 545
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_94": {
      "name": "testCase_yui_3_5_0_1_1349923579706_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 436
      }
    },
    "testCase_yui_3_5_0_1_1349923579706_95": {
      "name": "testCase_yui_3_5_0_1_1349923579706_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 559,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 549
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:46:29 PM"
  },
  {
    "name": "Charts: StackedVerticalAreaGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6955,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923589821_78": {
      "name": "testCase_yui_3_5_0_1_1349923589821_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 442,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_79": {
      "name": "testCase_yui_3_5_0_1_1349923589821_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 312,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_80": {
      "name": "testCase_yui_3_5_0_1_1349923589821_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 343,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_81": {
      "name": "testCase_yui_3_5_0_1_1349923589821_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 381
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_82": {
      "name": "testCase_yui_3_5_0_1_1349923589821_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 347,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 345
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_83": {
      "name": "testCase_yui_3_5_0_1_1349923589821_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 372
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_84": {
      "name": "testCase_yui_3_5_0_1_1349923589821_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 329
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_85": {
      "name": "testCase_yui_3_5_0_1_1349923589821_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 309,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 305
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_86": {
      "name": "testCase_yui_3_5_0_1_1349923589821_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 434,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 430
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_87": {
      "name": "testCase_yui_3_5_0_1_1349923589821_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 331
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_88": {
      "name": "testCase_yui_3_5_0_1_1349923589821_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 354,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 351
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_89": {
      "name": "testCase_yui_3_5_0_1_1349923589821_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_90": {
      "name": "testCase_yui_3_5_0_1_1349923589821_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 369,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_91": {
      "name": "testCase_yui_3_5_0_1_1349923589821_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 525,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 500
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_92": {
      "name": "testCase_yui_3_5_0_1_1349923589821_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_93": {
      "name": "testCase_yui_3_5_0_1_1349923589821_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_94": {
      "name": "testCase_yui_3_5_0_1_1349923589821_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 434
      }
    },
    "testCase_yui_3_5_0_1_1349923589821_95": {
      "name": "testCase_yui_3_5_0_1_1349923589821_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 369,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:46:37 PM"
  },
  {
    "name": "Charts: StackedSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8251,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923598009_78": {
      "name": "testCase_yui_3_5_0_1_1349923598009_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 527,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 521
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_79": {
      "name": "testCase_yui_3_5_0_1_1349923598009_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_80": {
      "name": "testCase_yui_3_5_0_1_1349923598009_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 495,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 483
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_81": {
      "name": "testCase_yui_3_5_0_1_1349923598009_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 358
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_82": {
      "name": "testCase_yui_3_5_0_1_1349923598009_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 408
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_83": {
      "name": "testCase_yui_3_5_0_1_1349923598009_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_84": {
      "name": "testCase_yui_3_5_0_1_1349923598009_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 385
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_85": {
      "name": "testCase_yui_3_5_0_1_1349923598009_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 466,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 463
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_86": {
      "name": "testCase_yui_3_5_0_1_1349923598009_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 388
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_87": {
      "name": "testCase_yui_3_5_0_1_1349923598009_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 556,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 545
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_88": {
      "name": "testCase_yui_3_5_0_1_1349923598009_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 408
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_89": {
      "name": "testCase_yui_3_5_0_1_1349923598009_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_90": {
      "name": "testCase_yui_3_5_0_1_1349923598009_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 549,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 535
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_91": {
      "name": "testCase_yui_3_5_0_1_1349923598009_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 396
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_92": {
      "name": "testCase_yui_3_5_0_1_1349923598009_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 521,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 496
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_93": {
      "name": "testCase_yui_3_5_0_1_1349923598009_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 433,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 431
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_94": {
      "name": "testCase_yui_3_5_0_1_1349923598009_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 505,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 502
      }
    },
    "testCase_yui_3_5_0_1_1349923598009_95": {
      "name": "testCase_yui_3_5_0_1_1349923598009_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 426
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:46:47 PM"
  },
  {
    "name": "Charts: StackedComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 10924,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923607618_78": {
      "name": "testCase_yui_3_5_0_1_1349923607618_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 710,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 695
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_79": {
      "name": "testCase_yui_3_5_0_1_1349923607618_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 532
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_80": {
      "name": "testCase_yui_3_5_0_1_1349923607618_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 603,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 590
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_81": {
      "name": "testCase_yui_3_5_0_1_1349923607618_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 600,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 596
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_82": {
      "name": "testCase_yui_3_5_0_1_1349923607618_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 523,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 518
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_83": {
      "name": "testCase_yui_3_5_0_1_1349923607618_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 606,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 602
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_84": {
      "name": "testCase_yui_3_5_0_1_1349923607618_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 538,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 532
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_85": {
      "name": "testCase_yui_3_5_0_1_1349923607618_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 626,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 623
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_86": {
      "name": "testCase_yui_3_5_0_1_1349923607618_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 495
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_87": {
      "name": "testCase_yui_3_5_0_1_1349923607618_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 638,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 623
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_88": {
      "name": "testCase_yui_3_5_0_1_1349923607618_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 621,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 616
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_89": {
      "name": "testCase_yui_3_5_0_1_1349923607618_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 577,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 575
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_90": {
      "name": "testCase_yui_3_5_0_1_1349923607618_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 618,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 610
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_91": {
      "name": "testCase_yui_3_5_0_1_1349923607618_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 580,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 542
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_92": {
      "name": "testCase_yui_3_5_0_1_1349923607618_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 623,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 620
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_93": {
      "name": "testCase_yui_3_5_0_1_1349923607618_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 550,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 538
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_94": {
      "name": "testCase_yui_3_5_0_1_1349923607618_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 708,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 704
      }
    },
    "testCase_yui_3_5_0_1_1349923607618_95": {
      "name": "testCase_yui_3_5_0_1_1349923607618_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 658,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 655
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:46:59 PM"
  },
  {
    "name": "Charts: StackedComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8085,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923619729_78": {
      "name": "testCase_yui_3_5_0_1_1349923619729_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 644,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 627
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_79": {
      "name": "testCase_yui_3_5_0_1_1349923619729_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 349,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 337
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_80": {
      "name": "testCase_yui_3_5_0_1_1349923619729_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 460,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 447
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_81": {
      "name": "testCase_yui_3_5_0_1_1349923619729_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 348
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_82": {
      "name": "testCase_yui_3_5_0_1_1349923619729_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_83": {
      "name": "testCase_yui_3_5_0_1_1349923619729_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_84": {
      "name": "testCase_yui_3_5_0_1_1349923619729_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 354,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 351
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_85": {
      "name": "testCase_yui_3_5_0_1_1349923619729_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 484,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 460
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_86": {
      "name": "testCase_yui_3_5_0_1_1349923619729_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_87": {
      "name": "testCase_yui_3_5_0_1_1349923619729_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 497,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 493
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_88": {
      "name": "testCase_yui_3_5_0_1_1349923619729_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 436,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 434
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_89": {
      "name": "testCase_yui_3_5_0_1_1349923619729_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 492,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_90": {
      "name": "testCase_yui_3_5_0_1_1349923619729_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_91": {
      "name": "testCase_yui_3_5_0_1_1349923619729_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 372
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_92": {
      "name": "testCase_yui_3_5_0_1_1349923619729_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 552,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 548
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_93": {
      "name": "testCase_yui_3_5_0_1_1349923619729_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_94": {
      "name": "testCase_yui_3_5_0_1_1349923619729_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 515,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 511
      }
    },
    "testCase_yui_3_5_0_1_1349923619729_95": {
      "name": "testCase_yui_3_5_0_1_1349923619729_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 393
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:47:08 PM"
  },
  {
    "name": "Charts: StackedColumnGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7752,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923629048_78": {
      "name": "testCase_yui_3_5_0_1_1349923629048_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 506,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 502
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_79": {
      "name": "testCase_yui_3_5_0_1_1349923629048_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 347
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_80": {
      "name": "testCase_yui_3_5_0_1_1349923629048_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_81": {
      "name": "testCase_yui_3_5_0_1_1349923629048_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_82": {
      "name": "testCase_yui_3_5_0_1_1349923629048_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 362
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_83": {
      "name": "testCase_yui_3_5_0_1_1349923629048_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 440,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_84": {
      "name": "testCase_yui_3_5_0_1_1349923629048_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_85": {
      "name": "testCase_yui_3_5_0_1_1349923629048_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 431,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 427
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_86": {
      "name": "testCase_yui_3_5_0_1_1349923629048_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 368,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 365
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_87": {
      "name": "testCase_yui_3_5_0_1_1349923629048_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 378,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 375
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_88": {
      "name": "testCase_yui_3_5_0_1_1349923629048_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 484,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 482
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_89": {
      "name": "testCase_yui_3_5_0_1_1349923629048_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_90": {
      "name": "testCase_yui_3_5_0_1_1349923629048_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_91": {
      "name": "testCase_yui_3_5_0_1_1349923629048_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 388,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_92": {
      "name": "testCase_yui_3_5_0_1_1349923629048_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 561,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 557
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_93": {
      "name": "testCase_yui_3_5_0_1_1349923629048_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 381,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_94": {
      "name": "testCase_yui_3_5_0_1_1349923629048_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 389,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 386
      }
    },
    "testCase_yui_3_5_0_1_1349923629048_95": {
      "name": "testCase_yui_3_5_0_1_1349923629048_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 607,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 591
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:47:17 PM"
  },
  {
    "name": "Charts: StackedBarGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8102,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923638133_78": {
      "name": "testCase_yui_3_5_0_1_1349923638133_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 526,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 510
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_79": {
      "name": "testCase_yui_3_5_0_1_1349923638133_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_80": {
      "name": "testCase_yui_3_5_0_1_1349923638133_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 440
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_81": {
      "name": "testCase_yui_3_5_0_1_1349923638133_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 371,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_82": {
      "name": "testCase_yui_3_5_0_1_1349923638133_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_83": {
      "name": "testCase_yui_3_5_0_1_1349923638133_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 442
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_84": {
      "name": "testCase_yui_3_5_0_1_1349923638133_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_85": {
      "name": "testCase_yui_3_5_0_1_1349923638133_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 506,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 492
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_86": {
      "name": "testCase_yui_3_5_0_1_1349923638133_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_87": {
      "name": "testCase_yui_3_5_0_1_1349923638133_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 484,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_88": {
      "name": "testCase_yui_3_5_0_1_1349923638133_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 434,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_89": {
      "name": "testCase_yui_3_5_0_1_1349923638133_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 341
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_90": {
      "name": "testCase_yui_3_5_0_1_1349923638133_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 560,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 533
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_91": {
      "name": "testCase_yui_3_5_0_1_1349923638133_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_92": {
      "name": "testCase_yui_3_5_0_1_1349923638133_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 500,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 488
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_93": {
      "name": "testCase_yui_3_5_0_1_1349923638133_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 398,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_94": {
      "name": "testCase_yui_3_5_0_1_1349923638133_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 623,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 617
      }
    },
    "testCase_yui_3_5_0_1_1349923638133_95": {
      "name": "testCase_yui_3_5_0_1_1349923638133_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:47:27 PM"
  },
  {
    "name": "Charts: StackedAreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 9463,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923647596_78": {
      "name": "testCase_yui_3_5_0_1_1349923647596_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 560,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 557
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_79": {
      "name": "testCase_yui_3_5_0_1_1349923647596_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 438
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_80": {
      "name": "testCase_yui_3_5_0_1_1349923647596_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 499
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_81": {
      "name": "testCase_yui_3_5_0_1_1349923647596_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 491,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 488
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_82": {
      "name": "testCase_yui_3_5_0_1_1349923647596_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 567,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 557
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_83": {
      "name": "testCase_yui_3_5_0_1_1349923647596_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 441
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_84": {
      "name": "testCase_yui_3_5_0_1_1349923647596_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 438,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 430
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_85": {
      "name": "testCase_yui_3_5_0_1_1349923647596_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 507,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 504
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_86": {
      "name": "testCase_yui_3_5_0_1_1349923647596_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 450,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 447
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_87": {
      "name": "testCase_yui_3_5_0_1_1349923647596_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 577,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 552
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_88": {
      "name": "testCase_yui_3_5_0_1_1349923647596_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 435,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 433
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_89": {
      "name": "testCase_yui_3_5_0_1_1349923647596_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 570,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 551
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_90": {
      "name": "testCase_yui_3_5_0_1_1349923647596_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 469
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_91": {
      "name": "testCase_yui_3_5_0_1_1349923647596_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 693,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 690
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_92": {
      "name": "testCase_yui_3_5_0_1_1349923647596_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 538,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 511
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_93": {
      "name": "testCase_yui_3_5_0_1_1349923647596_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 535,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 531
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_94": {
      "name": "testCase_yui_3_5_0_1_1349923647596_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 560,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 550
      }
    },
    "testCase_yui_3_5_0_1_1349923647596_95": {
      "name": "testCase_yui_3_5_0_1_1349923647596_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 518,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 510
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:47:37 PM"
  },
  {
    "name": "Charts: StackedAreaGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7378,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923658334_78": {
      "name": "testCase_yui_3_5_0_1_1349923658334_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 389,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_79": {
      "name": "testCase_yui_3_5_0_1_1349923658334_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_80": {
      "name": "testCase_yui_3_5_0_1_1349923658334_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 429
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_81": {
      "name": "testCase_yui_3_5_0_1_1349923658334_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 338,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 335
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_82": {
      "name": "testCase_yui_3_5_0_1_1349923658334_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 343
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_83": {
      "name": "testCase_yui_3_5_0_1_1349923658334_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 408
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_84": {
      "name": "testCase_yui_3_5_0_1_1349923658334_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 344
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_85": {
      "name": "testCase_yui_3_5_0_1_1349923658334_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 339
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_86": {
      "name": "testCase_yui_3_5_0_1_1349923658334_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_87": {
      "name": "testCase_yui_3_5_0_1_1349923658334_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_88": {
      "name": "testCase_yui_3_5_0_1_1349923658334_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_89": {
      "name": "testCase_yui_3_5_0_1_1349923658334_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_90": {
      "name": "testCase_yui_3_5_0_1_1349923658334_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_91": {
      "name": "testCase_yui_3_5_0_1_1349923658334_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 457,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_92": {
      "name": "testCase_yui_3_5_0_1_1349923658334_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_93": {
      "name": "testCase_yui_3_5_0_1_1349923658334_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_94": {
      "name": "testCase_yui_3_5_0_1_1349923658334_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 512
      }
    },
    "testCase_yui_3_5_0_1_1349923658334_95": {
      "name": "testCase_yui_3_5_0_1_1349923658334_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 389,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 386
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:47:46 PM"
  },
  {
    "name": "Charts: SplineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 12652,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 658,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 654
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 775,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 761
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 723,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 719
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 786,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 777
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 803,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 798
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 790,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 785
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 757,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 736
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 809,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 805
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 827,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 812
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 809,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 806
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 885,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 857
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 805,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 802
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 717,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 709
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2384
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:00 PM"
  },
  {
    "name": "Charts: SplineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 8523,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 471,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 468
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 471,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 466
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 463
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 466,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 556,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 552
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 456,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 603,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 587
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 478
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 602,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 599
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 480,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 653,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 649
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 507,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 504
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 467
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1613,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1610
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:11 PM"
  },
  {
    "name": "Charts: SplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8886,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923691446_78": {
      "name": "testCase_yui_3_5_0_1_1349923691446_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 589,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 575
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_79": {
      "name": "testCase_yui_3_5_0_1_1349923691446_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 458,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 441
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_80": {
      "name": "testCase_yui_3_5_0_1_1349923691446_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_81": {
      "name": "testCase_yui_3_5_0_1_1349923691446_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 515,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 512
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_82": {
      "name": "testCase_yui_3_5_0_1_1349923691446_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 401
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_83": {
      "name": "testCase_yui_3_5_0_1_1349923691446_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_84": {
      "name": "testCase_yui_3_5_0_1_1349923691446_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_85": {
      "name": "testCase_yui_3_5_0_1_1349923691446_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 467
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_86": {
      "name": "testCase_yui_3_5_0_1_1349923691446_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 421
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_87": {
      "name": "testCase_yui_3_5_0_1_1349923691446_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 417
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_88": {
      "name": "testCase_yui_3_5_0_1_1349923691446_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 511,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 498
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_89": {
      "name": "testCase_yui_3_5_0_1_1349923691446_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_90": {
      "name": "testCase_yui_3_5_0_1_1349923691446_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 543,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 518
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_91": {
      "name": "testCase_yui_3_5_0_1_1349923691446_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 442,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_92": {
      "name": "testCase_yui_3_5_0_1_1349923691446_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 631,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 618
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_93": {
      "name": "testCase_yui_3_5_0_1_1349923691446_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 484,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 468
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_94": {
      "name": "testCase_yui_3_5_0_1_1349923691446_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 532,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 510
      }
    },
    "testCase_yui_3_5_0_1_1349923691446_95": {
      "name": "testCase_yui_3_5_0_1_1349923691446_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 518,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 515
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:21 PM"
  },
  {
    "name": "Charts: Series Marker",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 9746,
    "type": "report",
    "Event 'mouseover' Tests": {
      "name": "Event 'mouseover' Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 516,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 513
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:32 PM"
  },
  {
    "name": "Charts: Series Planar",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7300,
    "type": "report",
    "Event 'mousemove' Tests": {
      "name": "testCase_yui_3_5_0_1_1349923712832_97",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 381
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:41 PM"
  },
  {
    "name": "Charts: PieLegend",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 17,
    "duration": 4149,
    "type": "report",
    "Pie No Legend Tests": {
      "name": "Pie No Legend Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 306,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 289
      }
    },
    "Top Legend Test": {
      "name": "Top Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 198,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 190
      }
    },
    "Pie Right Legend Test": {
      "name": "Pie Right Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 184,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 182
      }
    },
    "Pie Bottom Legend Test": {
      "name": "Pie Bottom Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 265,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 238
      }
    },
    "Pie Left Legend Test": {
      "name": "Pie Left Legend Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 208,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 205
      }
    },
    "Pie Top Legend Position Test": {
      "name": "Pie Top Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testLegendPosition": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegendPosition",
        "duration": 333
      }
    },
    "Pie Right Legend Position Test": {
      "name": "Pie Right Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 227,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 223
      }
    },
    "Pie Bottom Legend Position Test": {
      "name": "Pie Bottom Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 217,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 215
      }
    },
    "Pie Left Legend Position Test": {
      "name": "Pie Left Legend Position Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 209,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 206
      }
    },
    "Pie Top Legend Items Length Test": {
      "name": "Pie Top Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 229,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 218
      }
    },
    "Pie Right Legend Items Length Test": {
      "name": "Pie Right Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 211,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 208
      }
    },
    "Pie Bottom Legend Items Length Test": {
      "name": "Pie Bottom Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 322,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 318
      }
    },
    "Pie Left Legend Items Length Test": {
      "name": "Pie Left Legend Items Length Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 189,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 186
      }
    },
    "Pie Top Legend Items Text Test": {
      "name": "Pie Top Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 218,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 193
      }
    },
    "Pie Right Legend Items Text Test": {
      "name": "Pie Right Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 224,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 205
      }
    },
    "Pie Bottom Legend Items Text Test": {
      "name": "Pie Bottom Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 242,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 227
      }
    },
    "Pie Left Legend Items Text Test": {
      "name": "Pie Left Legend Items Text Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 237,
      "type": "testcase",
      "testLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLegend",
        "duration": 233
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:46 PM"
  },
  {
    "name": "Charts: Pie",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 844,
    "type": "report",
    "PieChartCenterTest": {
      "name": "PieChartCenterTest",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 747,
      "type": "testcase",
      "testWidthAndHeightEqual": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidthAndHeightEqual",
        "duration": 276
      },
      "testWidthGreaterThanHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidthGreaterThanHeight",
        "duration": 141
      },
      "testHeightGreaterThanWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeightGreaterThanWidth",
        "duration": 123
      },
      "testUpdateDataProvider": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUpdateDataProvider",
        "duration": 176
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:48 PM"
  },
  {
    "name": "Charts: NumericAxis",
    "passed": 22,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 22,
    "duration": 8804,
    "type": "report",
    "Axes All Positive Data Test": {
      "name": "Axes All Positive Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 591,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 576
      }
    },
    "Axes Positive and Negative Data Test": {
      "name": "Axes Positive and Negative Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 352
      }
    },
    "Axes All Negative Data Test": {
      "name": "Axes All Negative Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 475,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 473
      }
    },
    "Axes All Negative Data Near Zero Test": {
      "name": "Axes All Negative Data Near Zero Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 346
      }
    },
    "Axes All Positive Data, alwaysShowZero=false Test": {
      "name": "Axes All Positive Data, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 402
      }
    },
    "Axes Positive and Negative Data, alwaysShowZero=false Test": {
      "name": "Axes Positive and Negative Data, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 425
      }
    },
    "Axes All Negative Data, alwaysShowZero=false Test": {
      "name": "Axes All Negative Data, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 359
      }
    },
    "Axes All Negative Data Near Zero, alwaysShowZero=false Test": {
      "name": "Axes All Negative Data Near Zero, alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 479,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 476
      }
    },
    "Axes All Positive Data with Numeric roundingMethod Test": {
      "name": "Axes All Positive Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 380
      }
    },
    "Axes Positive and Negative Data with Numeric roundingMethod Test": {
      "name": "Axes Positive and Negative Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 359,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 355
      }
    },
    "Axes All Negative Data with Numeric roundingMethod Test": {
      "name": "Axes All Negative Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 378
      }
    },
    "Axes Positive and Negative Data with Auto roundingMethod Test": {
      "name": "Axes Positive and Negative Data with Auto roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 373
      }
    },
    "Axes Positive and Negative Decimal Data with Numeric roundingMethod Test": {
      "name": "Axes Positive and Negative Decimal Data with Numeric roundingMethod Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 447
      }
    },
    "Axes All Positive Data with Auto roundingMethod alwaysShowZero=false Test": {
      "name": "Axes All Positive Data with Auto roundingMethod alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 462,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 458
      }
    },
    "Axes Positive and Negative Data with Auto roundingMethod alwaysShowZero=false Test": {
      "name": "Axes Positive and Negative Data with Auto roundingMethod alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 353
      }
    },
    "Axes All Negative Data with Auto roundingMethod alwaysShowZero=false Test": {
      "name": "Axes All Negative Data with Auto roundingMethod alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 355
      }
    },
    "Axes All Positive Data with Numeric roundingMethod and alwaysShowZero=false Test": {
      "name": "Axes All Positive Data with Numeric roundingMethod and alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 475
      }
    },
    "Axes All Negative Data with Numeric roundingMethod and alwaysShowZero=false Test": {
      "name": "Axes All Negative Data with Numeric roundingMethod and alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 367
      }
    },
    "No Data": {
      "name": "No Data",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 173,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 149
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:48:58 PM"
  },
  {
    "name": "Charts: NumericAxisMin",
    "passed": 31,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 31,
    "duration": 13119,
    "type": "report",
    "Axes Min Test": {
      "name": "Axes Min Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 497,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 485
      }
    },
    "Axes Negative Min Test": {
      "name": "Axes Negative Min Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 398
      }
    },
    "Axes Negative Min with All Negative Data and alwaysShowZero=false Test": {
      "name": "Axes Negative Min with All Negative Data and alwaysShowZero=false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 387,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 362
      }
    },
    "Axes Negative Min with All Negative Data Test": {
      "name": "Axes Negative Min with All Negative Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 389,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 387
      }
    },
    "Axes Min with Decimals Test": {
      "name": "Axes Min with Decimals Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 460,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 458
      }
    },
    "Axes Integer Min with Decimal Data Test": {
      "name": "Axes Integer Min with Decimal Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 374
      }
    },
    "Axes Negative Min with Positive Data Test": {
      "name": "Axes Negative Min with Positive Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 356
      }
    },
    "Axes Min Test with roundingMethod=auto": {
      "name": "Axes Min Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 359
      }
    },
    "Axes Negative Min Test with roundingMethod=auto": {
      "name": "Axes Negative Min Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 495,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 480
      }
    },
    "Axes Negative Min with All Negative Data Test with roundingMethod=auto": {
      "name": "Axes Negative Min with All Negative Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 368
      }
    },
    "Axes Min with Decimals Test with roundingMethod=auto": {
      "name": "Axes Min with Decimals Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 390,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 363
      }
    },
    "Axes Integer Min with Decimal Data Test with roundingMethod=auto": {
      "name": "Axes Integer Min with Decimal Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 442
      }
    },
    "Axes Negative Min with Positive Data Test with roundingMethod=auto": {
      "name": "Axes Negative Min with Positive Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 404,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 375
      }
    },
    "Axes Min Test with roundingMethod=null": {
      "name": "Axes Min Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 522,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 504
      }
    },
    "Axes Negative Min Test with roundingMethod=null": {
      "name": "Axes Negative Min Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 363
      }
    },
    "Axes Negative Min with All Negative Data Test with roundingMethod=null": {
      "name": "Axes Negative Min with All Negative Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 486
      }
    },
    "Axes Min with Decimals Test with roundingMethod=null": {
      "name": "Axes Min with Decimals Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 355
      }
    },
    "Axes Integer Min with Decimal Data Test with roundingMethod=null": {
      "name": "Axes Integer Min with Decimal Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 369
      }
    },
    "Axes Negative Min with Positive Data Test with roundingMethod=null": {
      "name": "Axes Negative Min with Positive Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 449,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 447
      }
    },
    "Axes Min Test with roundingMethod=1000": {
      "name": "Axes Min Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 357
      }
    },
    "Axes Negative Min Test with roundingMethod=1000": {
      "name": "Axes Negative Min Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 517,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 514
      }
    },
    "Axes Negative Min with All Negative Data Test with roundingMethod=1000": {
      "name": "Axes Negative Min with All Negative Data Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 358
      }
    },
    "Axes Min with Decimals Test with roundingMethod=2": {
      "name": "Axes Min with Decimals Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 378
      }
    },
    "Axes Integer Min with Decimal Data Test with roundingMethod=2": {
      "name": "Axes Integer Min with Decimal Data Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 444
      }
    },
    "Axes Negative Min with Positive Data Test with roundingMethod=1000": {
      "name": "Axes Negative Min with Positive Data Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testMin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMin",
        "duration": 358
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:49:13 PM"
  },
  {
    "name": "Charts: NumericAxisMinAndMax",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 2774,
    "type": "report",
    "Axes Min and Max Test": {
      "name": "Axes Min and Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 558,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 532
      }
    },
    "Axes Negative Min and Positive Max Test": {
      "name": "Axes Negative Min and Positive Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 392,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 389
      }
    },
    "Axes Negative Min an Max Test": {
      "name": "Axes Negative Min an Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 462,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 448
      }
    },
    "Axes Min and Max with Decimals Test": {
      "name": "Axes Min and Max with Decimals Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMinAndMax",
        "duration": 389
      }
    },
    "Axis alwaysShowZero Test": {
      "name": "Axis alwaysShowZero Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 374,
      "type": "testcase",
      "testAlwaysShowZero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZero",
        "duration": 371
      }
    },
    "Axis alwaysShowZero = false Test": {
      "name": "Axis alwaysShowZero = false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 494,
      "type": "testcase",
      "testAlwaysShowZeroEqualsFalse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZeroEqualsFalse",
        "duration": 490
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:49:17 PM"
  },
  {
    "name": "Charts: NumericAxisMax",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 10468,
    "type": "report",
    "Axes Max Test": {
      "name": "Axes Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 362
      }
    },
    "Axes Max Test with alwaysShowZero as false": {
      "name": "Axes Max Test with alwaysShowZero as false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 397
      }
    },
    "Axes Negative Max Test": {
      "name": "Axes Negative Max Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 475
      }
    },
    "Axes Max with Decimals Test": {
      "name": "Axes Max with Decimals Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 385
      }
    },
    "Axes Integer Max with Decimal Data Test": {
      "name": "Axes Integer Max with Decimal Data Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 368
      }
    },
    "Axes Max Test with roundingMethod=auto": {
      "name": "Axes Max Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 464,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 461
      }
    },
    "Axes Negative Max Test with roundingMethod=auto": {
      "name": "Axes Negative Max Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 440
      }
    },
    "Axes Max with Decimals Test with roundingMethod=auto": {
      "name": "Axes Max with Decimals Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 388
      }
    },
    "Axes Integer Max with Decimal Data Test with roundingMethod=auto": {
      "name": "Axes Integer Max with Decimal Data Test with roundingMethod=auto",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 421,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 398
      }
    },
    "Axes Max Test with roundingMethod=null": {
      "name": "Axes Max Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 504,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 501
      }
    },
    "Axes Negative Max Test with roundingMethod=null": {
      "name": "Axes Negative Max Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 421
      }
    },
    "Axes Max with Decimals Test with roundingMethod=null": {
      "name": "Axes Max with Decimals Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 408
      }
    },
    "Axes Integer Max with Decimal Data Test with roundingMethod=null": {
      "name": "Axes Integer Max with Decimal Data Test with roundingMethod=null",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 358
      }
    },
    "Axes Max Test with roundingMethod=1000": {
      "name": "Axes Max Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 380
      }
    },
    "Axes Negative Max Test with roundingMethod=1000": {
      "name": "Axes Negative Max Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 376
      }
    },
    "Axes Max with Decimals Test with roundingMethod=2": {
      "name": "Axes Max with Decimals Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 445
      }
    },
    "Axes Integer Max with Decimal Data Test with roundingMethod=2": {
      "name": "Axes Integer Max with Decimal Data Test with roundingMethod=2",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 389
      }
    },
    "Axes Max with Positive and Negative Data Test with roundingMethod=1000": {
      "name": "Axes Max with Positive and Negative Data Test with roundingMethod=1000",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 367,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 363
      }
    },
    "Axes Max Test with Positive and Negative values and alwaysShowZero=false": {
      "name": "Axes Max Test with Positive and Negative values and alwaysShowZero=false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMax",
        "duration": 413
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:49:29 PM"
  },
  {
    "name": "Charts: LineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 11910,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 535,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 521
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 762,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 758
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 685,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 678
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 766,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 761
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 775,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 760
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 751,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 743
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 706,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 687
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 834,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 831
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 768,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 762
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 658,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 654
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 783,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 779
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 797,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 793
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 708,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 705
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2149,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2145
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:49:42 PM"
  },
  {
    "name": "Charts: LineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7326,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 551,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 525
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 398,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 393
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 551,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 548
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 413,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 410
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 455,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 451
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 487,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 483
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 431,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 511,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 417
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 428,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 408
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 562,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 559
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 536,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 531
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1047,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1031
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:49:51 PM"
  },
  {
    "name": "Charts: LineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 11944,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923791744_78": {
      "name": "testCase_yui_3_5_0_1_1349923791744_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1359,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 679
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 639
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_79": {
      "name": "testCase_yui_3_5_0_1_1349923791744_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1378,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 658
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 715
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_80": {
      "name": "testCase_yui_3_5_0_1_1349923791744_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1256,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 655
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 595
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_81": {
      "name": "testCase_yui_3_5_0_1_1349923791744_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1439,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 683
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 702
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_82": {
      "name": "testCase_yui_3_5_0_1_1349923791744_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1533,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 749
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 778
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_83": {
      "name": "testCase_yui_3_5_0_1_1349923791744_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1583,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 763
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 814
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_84": {
      "name": "testCase_yui_3_5_0_1_1349923791744_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1593,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 836
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 729
      }
    },
    "testCase_yui_3_5_0_1_1349923791744_85": {
      "name": "testCase_yui_3_5_0_1_1349923791744_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1701,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 841
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 824
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:50:04 PM"
  },
  {
    "name": "Charts: Legend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 8127,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 466,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 451
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 459,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 456
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 616,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 602
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 433,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 430
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 591,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 587
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 442,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 438
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 616,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 611
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 444
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 612,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 609
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 433,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 416
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 575,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 572
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 458
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 519,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 514
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1347,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1342
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:50:14 PM"
  },
  {
    "name": "Charts: GroupMarker",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 2826,
    "type": "report",
    "Group Marker Test": {
      "name": "Group Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 489,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 485
      }
    },
    "Circle Marker Test": {
      "name": "Circle Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 324
      }
    },
    "Rect Marker Test": {
      "name": "Rect Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 420,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 413
      }
    },
    "Diamond Marker Test": {
      "name": "Diamond Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 352
      }
    },
    "Ellipse Marker Test": {
      "name": "Ellipse Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 339
      }
    },
    "Column Marker Test": {
      "name": "Column Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 390
      }
    },
    "Bar Marker Test": {
      "name": "Bar Marker Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testGroupMarkers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGroupMarkers",
        "duration": 358
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:50:18 PM"
  },
  {
    "name": "Charts: Graph",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 7995,
    "type": "report",
    "Graph Tests": {
      "name": "Graph Tests",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 7897,
      "type": "testcase",
      "test:graph._getSeries(line)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(line)",
        "duration": 490
      },
      "test:graph._getSeries(column)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(column)",
        "duration": 310
      },
      "test:graph._getSeries(bar)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(bar)",
        "duration": 461
      },
      "test:graph._getSeries(area)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(area)",
        "duration": 346
      },
      "test:graph._getSeries(stackedarea)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedarea)",
        "duration": 356
      },
      "test:graph._getSeries(stackedcolumn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedcolumn)",
        "duration": 428
      },
      "test:graph._getSeries(stackedbar)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedbar)",
        "duration": 365
      },
      "test:graph._getSeries(stackedline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedline)",
        "duration": 318
      },
      "test:graph._getSeries(markerseries)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(markerseries)",
        "duration": 487
      },
      "test:graph._getSeries(stackedmarkerseries)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedmarkerseries)",
        "duration": 333
      },
      "test:graph._getSeries(spline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(spline)",
        "duration": 349
      },
      "test:graph._getSeries(areaspline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(areaspline)",
        "duration": 476
      },
      "test:graph._getSeries(stackedspline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedspline)",
        "duration": 361
      },
      "test:graph._getSeries(stackedareapline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedareapline)",
        "duration": 313
      },
      "test:graph._getSeries(pie)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(pie)",
        "duration": 412
      },
      "test:graph._getSeries(combo)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(combo)",
        "duration": 341
      },
      "test:graph._getSeries(stackedcombo)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedcombo)",
        "duration": 351
      },
      "test:graph._getSeries(combospline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(combospline)",
        "duration": 422
      },
      "test:graph._getSeries(stackedcombospline)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(stackedcombospline)",
        "duration": 356
      },
      "test:graph._getSeries(customclass)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:graph._getSeries(customclass)",
        "duration": 317
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:50:28 PM"
  },
  {
    "name": "Charts: DataProvider",
    "passed": 19,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 19,
    "duration": 8522,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 494,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 458
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 377,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 374
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 564,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 559
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 436,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 433
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 505,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 501
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 375
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 518,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 514
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 377
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 369
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 448
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 388
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 547,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 544
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 397,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:50:37 PM"
  },
  {
    "name": "Charts: ComboTooltip",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 2123,
    "type": "report",
    "Event 'mousedown' Tests": {
      "name": "Event 'mousedown' Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 900,
      "type": "testcase",
      "testTooltipProps": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTooltipProps",
        "duration": 352
      },
      "testEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEvent",
        "duration": 516
      }
    },
    "Event 'mouseover' Tests": {
      "name": "Event 'mouseover' Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1064,
      "type": "testcase",
      "testTooltipProps": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTooltipProps",
        "duration": 421
      },
      "testEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEvent",
        "duration": 636
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:50:41 PM"
  },
  {
    "name": "Charts: ComboSplineShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 31102,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923841913_78": {
      "name": "testCase_yui_3_5_0_1_1349923841913_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3189,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1555
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1625
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_79": {
      "name": "testCase_yui_3_5_0_1_1349923841913_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3043,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1588
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1445
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_80": {
      "name": "testCase_yui_3_5_0_1_1349923841913_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3745,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1895
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1801
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_81": {
      "name": "testCase_yui_3_5_0_1_1349923841913_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3833,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1941
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1885
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_82": {
      "name": "testCase_yui_3_5_0_1_1349923841913_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 3841,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1925
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1849
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_83": {
      "name": "testCase_yui_3_5_0_1_1349923841913_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4000,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1987
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2007
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_84": {
      "name": "testCase_yui_3_5_0_1_1349923841913_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4661,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2263
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2391
      }
    },
    "testCase_yui_3_5_0_1_1349923841913_85": {
      "name": "testCase_yui_3_5_0_1_1349923841913_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 4624,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 2319
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 2274
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:51:14 PM"
  },
  {
    "name": "Charts: ComboSplineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 14438,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 762,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 751
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 892,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 879
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 865,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 861
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 857,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 852
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 889,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 877
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 886,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 882
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 892,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 880
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 863,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 860
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 954,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 951
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 878,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 873
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 908,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 904
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 856,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 853
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 910,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 884
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2923,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2919
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:51:29 PM"
  },
  {
    "name": "Charts: AreaSplineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7898,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 548,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 544
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 418
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 530,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 528
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 442,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 439
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 601,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 572
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 409,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 463
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 482,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 479
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 406
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 560,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 556
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 545,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 542
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 445,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 427
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1499
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:51:39 PM"
  },
  {
    "name": "Charts: ComboSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 8576,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923899413_78": {
      "name": "testCase_yui_3_5_0_1_1349923899413_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 546,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_79": {
      "name": "testCase_yui_3_5_0_1_1349923899413_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 391
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_80": {
      "name": "testCase_yui_3_5_0_1_1349923899413_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 482,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_81": {
      "name": "testCase_yui_3_5_0_1_1349923899413_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 381
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_82": {
      "name": "testCase_yui_3_5_0_1_1349923899413_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 485,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 482
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_83": {
      "name": "testCase_yui_3_5_0_1_1349923899413_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 390
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_84": {
      "name": "testCase_yui_3_5_0_1_1349923899413_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 398
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_85": {
      "name": "testCase_yui_3_5_0_1_1349923899413_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 528,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_86": {
      "name": "testCase_yui_3_5_0_1_1349923899413_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_87": {
      "name": "testCase_yui_3_5_0_1_1349923899413_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 524,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 522
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_88": {
      "name": "testCase_yui_3_5_0_1_1349923899413_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 434,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_89": {
      "name": "testCase_yui_3_5_0_1_1349923899413_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 518
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_90": {
      "name": "testCase_yui_3_5_0_1_1349923899413_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_91": {
      "name": "testCase_yui_3_5_0_1_1349923899413_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 561,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 527
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_92": {
      "name": "testCase_yui_3_5_0_1_1349923899413_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 440,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 437
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_93": {
      "name": "testCase_yui_3_5_0_1_1349923899413_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 557,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 553
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_94": {
      "name": "testCase_yui_3_5_0_1_1349923899413_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 461,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 446
      }
    },
    "testCase_yui_3_5_0_1_1349923899413_95": {
      "name": "testCase_yui_3_5_0_1_1349923899413_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 528,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:51:48 PM"
  },
  {
    "name": "Charts: ComboSplineGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 19802,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923909255_78": {
      "name": "testCase_yui_3_5_0_1_1349923909255_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2306,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1142
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1157
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_79": {
      "name": "testCase_yui_3_5_0_1_1349923909255_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2232,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1148
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1050
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_80": {
      "name": "testCase_yui_3_5_0_1_1349923909255_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2233,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1130
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1098
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_81": {
      "name": "testCase_yui_3_5_0_1_1349923909255_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2227,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1110
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1110
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_82": {
      "name": "testCase_yui_3_5_0_1_1349923909255_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2698,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1434
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1258
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_83": {
      "name": "testCase_yui_3_5_0_1_1349923909255_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2646,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1266
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1373
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_84": {
      "name": "testCase_yui_3_5_0_1_1349923909255_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2619,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1321
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1293
      }
    },
    "testCase_yui_3_5_0_1_1349923909255_85": {
      "name": "testCase_yui_3_5_0_1_1349923909255_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 2751,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1417
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1329
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:52:09 PM"
  },
  {
    "name": "Charts: ComboShowAreaFillGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 14385,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923930256_78": {
      "name": "testCase_yui_3_5_0_1_1349923930256_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1667,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 830
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 813
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_79": {
      "name": "testCase_yui_3_5_0_1_1349923930256_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1583,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 782
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 773
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_80": {
      "name": "testCase_yui_3_5_0_1_1349923930256_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1756,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 929
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 804
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_81": {
      "name": "testCase_yui_3_5_0_1_1349923930256_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1556,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 750
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 801
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_82": {
      "name": "testCase_yui_3_5_0_1_1349923930256_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1989,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 927
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 1056
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_83": {
      "name": "testCase_yui_3_5_0_1_1349923930256_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1845,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 927
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 893
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_84": {
      "name": "testCase_yui_3_5_0_1_1349923930256_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1958,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 1006
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 946
      }
    },
    "testCase_yui_3_5_0_1_1349923930256_85": {
      "name": "testCase_yui_3_5_0_1_1349923930256_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1943,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 955
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 931
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:52:25 PM"
  },
  {
    "name": "Charts: ComboLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 13465,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 724,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 714
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 793,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 790
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 845,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 818
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 797,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 792
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 818,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 809
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 840,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 824
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 818,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 813
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 756,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 752
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 844,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 833
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 839,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 836
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 865,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 856
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 836,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 832
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 851,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 848
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2718,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2713
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:52:40 PM"
  },
  {
    "name": "Charts: ComboGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7680,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923960546_78": {
      "name": "testCase_yui_3_5_0_1_1349923960546_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 546,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_79": {
      "name": "testCase_yui_3_5_0_1_1349923960546_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 354
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_80": {
      "name": "testCase_yui_3_5_0_1_1349923960546_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 459
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_81": {
      "name": "testCase_yui_3_5_0_1_1349923960546_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 327
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_82": {
      "name": "testCase_yui_3_5_0_1_1349923960546_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 353
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_83": {
      "name": "testCase_yui_3_5_0_1_1349923960546_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 436
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_84": {
      "name": "testCase_yui_3_5_0_1_1349923960546_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_85": {
      "name": "testCase_yui_3_5_0_1_1349923960546_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 463,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 435
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_86": {
      "name": "testCase_yui_3_5_0_1_1349923960546_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 385,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_87": {
      "name": "testCase_yui_3_5_0_1_1349923960546_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 352,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_88": {
      "name": "testCase_yui_3_5_0_1_1349923960546_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 478
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_89": {
      "name": "testCase_yui_3_5_0_1_1349923960546_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 368,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 364
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_90": {
      "name": "testCase_yui_3_5_0_1_1349923960546_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 480,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 477
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_91": {
      "name": "testCase_yui_3_5_0_1_1349923960546_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 387,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 385
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_92": {
      "name": "testCase_yui_3_5_0_1_1349923960546_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 535,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 531
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_93": {
      "name": "testCase_yui_3_5_0_1_1349923960546_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 365,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 363
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_94": {
      "name": "testCase_yui_3_5_0_1_1349923960546_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 380,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 378
      }
    },
    "testCase_yui_3_5_0_1_1349923960546_95": {
      "name": "testCase_yui_3_5_0_1_1349923960546_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 478,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 476
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:52:49 PM"
  },
  {
    "name": "Charts: ComboGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 13455,
    "type": "report",
    "testCase_yui_3_5_0_1_1349923969480_78": {
      "name": "testCase_yui_3_5_0_1_1349923969480_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1579,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 825
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 736
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_79": {
      "name": "testCase_yui_3_5_0_1_1349923969480_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1554,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 765
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 782
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_80": {
      "name": "testCase_yui_3_5_0_1_1349923969480_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1598,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 776
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 697
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_81": {
      "name": "testCase_yui_3_5_0_1_1349923969480_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1492,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 682
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 781
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_82": {
      "name": "testCase_yui_3_5_0_1_1349923969480_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1756,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 865
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 886
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_83": {
      "name": "testCase_yui_3_5_0_1_1349923969480_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1750,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 862
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 843
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_84": {
      "name": "testCase_yui_3_5_0_1_1349923969480_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1737,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 862
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 870
      }
    },
    "testCase_yui_3_5_0_1_1349923969480_85": {
      "name": "testCase_yui_3_5_0_1_1349923969480_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1897,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 910
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 935
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:53:03 PM"
  },
  {
    "name": "Charts: ColumnLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 12921,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 667,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 664
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 791,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 788
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 830,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 825
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 829,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 814
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 820,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 816
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 712,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 708
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 803,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 791
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 817,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 814
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 825,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 822
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 815,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 802
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 823,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 820
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 763,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 759
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 826,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 809
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2491,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2486
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:53:18 PM"
  },
  {
    "name": "Charts: ColumnLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7182,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 509
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 533
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 380
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 529,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 526
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 495
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 408
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 423
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 483,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 444,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 430
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 486,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 483
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 429
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1112,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1075
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:53:26 PM"
  },
  {
    "name": "Charts: ColumnGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7304,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924006868_78": {
      "name": "testCase_yui_3_5_0_1_1349924006868_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 513,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 497
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_79": {
      "name": "testCase_yui_3_5_0_1_1349924006868_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 324,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_80": {
      "name": "testCase_yui_3_5_0_1_1349924006868_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 430,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 423
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_81": {
      "name": "testCase_yui_3_5_0_1_1349924006868_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 321
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_82": {
      "name": "testCase_yui_3_5_0_1_1349924006868_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 336
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_83": {
      "name": "testCase_yui_3_5_0_1_1349924006868_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 424,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 421
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_84": {
      "name": "testCase_yui_3_5_0_1_1349924006868_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_85": {
      "name": "testCase_yui_3_5_0_1_1349924006868_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 473,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 469
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_86": {
      "name": "testCase_yui_3_5_0_1_1349924006868_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 316,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 313
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_87": {
      "name": "testCase_yui_3_5_0_1_1349924006868_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 366
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_88": {
      "name": "testCase_yui_3_5_0_1_1349924006868_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 494,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 469
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_89": {
      "name": "testCase_yui_3_5_0_1_1349924006868_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 357
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_90": {
      "name": "testCase_yui_3_5_0_1_1349924006868_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 449
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_91": {
      "name": "testCase_yui_3_5_0_1_1349924006868_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 352
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_92": {
      "name": "testCase_yui_3_5_0_1_1349924006868_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_93": {
      "name": "testCase_yui_3_5_0_1_1349924006868_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 462,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 458
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_94": {
      "name": "testCase_yui_3_5_0_1_1349924006868_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 371,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 368
      }
    },
    "testCase_yui_3_5_0_1_1349924006868_95": {
      "name": "testCase_yui_3_5_0_1_1349924006868_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 454,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 440
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:53:35 PM"
  },
  {
    "name": "Charts: ColumnGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 12391,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924015396_78": {
      "name": "testCase_yui_3_5_0_1_1349924015396_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1451,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 738
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 672
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_79": {
      "name": "testCase_yui_3_5_0_1_1349924015396_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1312,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 695
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 610
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_80": {
      "name": "testCase_yui_3_5_0_1_1349924015396_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1469,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 634
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 716
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_81": {
      "name": "testCase_yui_3_5_0_1_1349924015396_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1451,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 695
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 722
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_82": {
      "name": "testCase_yui_3_5_0_1_1349924015396_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1552,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 705
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 842
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_83": {
      "name": "testCase_yui_3_5_0_1_1349924015396_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1780,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 830
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 890
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_84": {
      "name": "testCase_yui_3_5_0_1_1349924015396_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1664,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 818
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 818
      }
    },
    "testCase_yui_3_5_0_1_1349924015396_85": {
      "name": "testCase_yui_3_5_0_1_1349924015396_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1616,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 816
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 794
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:53:48 PM"
  },
  {
    "name": "Charts: ColumnDataProvider",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 5921,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 484,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 480
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 311,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 307
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 334,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 331
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 397
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 317,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 314
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 401,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 396
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 295
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 310,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 307
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 312
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 343,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 322
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 447,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 315,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 301
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 311,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 307
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:53:55 PM"
  },
  {
    "name": "Charts",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 3210,
    "type": "report",
    "Chart Tests": {
      "name": "Chart Tests",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 3119,
      "type": "testcase",
      "testGetSeriesByIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSeriesByIndex",
        "duration": 497
      },
      "testGetSeriesByKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSeriesByKey",
        "duration": 310
      },
      "testGetAxesByKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAxesByKey",
        "duration": 406
      },
      "testGetCategoryAxis": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetCategoryAxis",
        "duration": 308
      },
      "testGetGraph": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetGraph",
        "duration": 334
      },
      "testGetAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAxes",
        "duration": 407
      },
      "testGetSeriesKeys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSeriesKeys",
        "duration": 340
      },
      "testGetDefaultAttributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetDefaultAttributes",
        "duration": 429
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:54:00 PM"
  },
  {
    "name": "Charts: BarLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 13184,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 674,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 661
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 832,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 828
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 840,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 835
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 858,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 833
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 827,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 824
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 827,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 823
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 767,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 752
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 862,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 842
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 836,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 833
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 875,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 864
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 833,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 830
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 856,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 851
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 851,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 840
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2333,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2319
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:54:14 PM"
  },
  {
    "name": "Charts: BarLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 7068,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 519,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 504
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 386
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 502,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 488
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 398,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 395
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 490,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 483
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 427,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 495
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 418,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 498,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 495
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 419,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 416
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 493,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 490
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 454,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 415
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1023,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1020
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:54:23 PM"
  },
  {
    "name": "Charts: Gridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7254,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924063478_78": {
      "name": "testCase_yui_3_5_0_1_1349924063478_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 491,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 476
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_79": {
      "name": "testCase_yui_3_5_0_1_1349924063478_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 317,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 315
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_80": {
      "name": "testCase_yui_3_5_0_1_1349924063478_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 434,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 432
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_81": {
      "name": "testCase_yui_3_5_0_1_1349924063478_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 315,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 313
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_82": {
      "name": "testCase_yui_3_5_0_1_1349924063478_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_83": {
      "name": "testCase_yui_3_5_0_1_1349924063478_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 396,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_84": {
      "name": "testCase_yui_3_5_0_1_1349924063478_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 349
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_85": {
      "name": "testCase_yui_3_5_0_1_1349924063478_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 405
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_86": {
      "name": "testCase_yui_3_5_0_1_1349924063478_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 383,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 366
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_87": {
      "name": "testCase_yui_3_5_0_1_1349924063478_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 339
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_88": {
      "name": "testCase_yui_3_5_0_1_1349924063478_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 499,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 483
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_89": {
      "name": "testCase_yui_3_5_0_1_1349924063478_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 353,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_90": {
      "name": "testCase_yui_3_5_0_1_1349924063478_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 455,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 452
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_91": {
      "name": "testCase_yui_3_5_0_1_1349924063478_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 364,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 361
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_92": {
      "name": "testCase_yui_3_5_0_1_1349924063478_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 372
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_93": {
      "name": "testCase_yui_3_5_0_1_1349924063478_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 438
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_94": {
      "name": "testCase_yui_3_5_0_1_1349924063478_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 387,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "testCase_yui_3_5_0_1_1349924063478_95": {
      "name": "testCase_yui_3_5_0_1_1349924063478_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 438
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:54:31 PM"
  },
  {
    "name": "Charts: BarGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 12087,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924072026_78": {
      "name": "testCase_yui_3_5_0_1_1349924072026_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1425,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 747
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 672
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_79": {
      "name": "testCase_yui_3_5_0_1_1349924072026_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1363,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 709
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 607
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_80": {
      "name": "testCase_yui_3_5_0_1_1349924072026_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1414,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 707
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 677
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_81": {
      "name": "testCase_yui_3_5_0_1_1349924072026_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1404,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 703
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 695
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_82": {
      "name": "testCase_yui_3_5_0_1_1349924072026_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1494,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 749
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 703
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_83": {
      "name": "testCase_yui_3_5_0_1_1349924072026_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1576,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 776
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 796
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_84": {
      "name": "testCase_yui_3_5_0_1_1349924072026_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1653,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 802
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 803
      }
    },
    "testCase_yui_3_5_0_1_1349924072026_85": {
      "name": "testCase_yui_3_5_0_1_1349924072026_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1649,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 820
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 823
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:54:45 PM"
  },
  {
    "name": "Charts: BarDataProvider",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 6738,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 503,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 488
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 314,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 310
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 406
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 371
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 572,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 547
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 474,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 470
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 739,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 715
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 317,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 314
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 312,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 309
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 437,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 434
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 320,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 317
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 350,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 338
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 411,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 337
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:54:52 PM"
  },
  {
    "name": "Charts: AxisTitle",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 10549,
    "type": "report",
    "Left and Bottom Axes with undefined degree title rotation": {
      "name": "Left and Bottom Axes with undefined degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 515,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 502
      }
    },
    "Left and Bottom Axes with 15 degree title rotation": {
      "name": "Left and Bottom Axes with 15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 332,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 329
      }
    },
    "Left and Bottom Axes with 30 degree title rotation": {
      "name": "Left and Bottom Axes with 30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 392,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 389
      }
    },
    "Left and Bottom Axes with 45 degree title rotation": {
      "name": "Left and Bottom Axes with 45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 405
      }
    },
    "Left and Bottom Axes with 60 degree title rotation": {
      "name": "Left and Bottom Axes with 60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 358
      }
    },
    "Left and Bottom Axes with 75 degree title rotation": {
      "name": "Left and Bottom Axes with 75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 421,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 418
      }
    },
    "Left and Bottom Axes with 90 degree title rotation": {
      "name": "Left and Bottom Axes with 90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 355,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 353
      }
    },
    "Left and Bottom Axes with -15 degree title rotation": {
      "name": "Left and Bottom Axes with -15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 393
      }
    },
    "Left and Bottom Axes with -30 degree title rotation": {
      "name": "Left and Bottom Axes with -30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 395,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 391
      }
    },
    "Left and Bottom Axes with -45 degree title rotation": {
      "name": "Left and Bottom Axes with -45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 333,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 330
      }
    },
    "Left and Bottom Axes with -60 degree title rotation": {
      "name": "Left and Bottom Axes with -60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 440
      }
    },
    "Left and Bottom Axes with -75 degree title rotation": {
      "name": "Left and Bottom Axes with -75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 343,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 340
      }
    },
    "Left and Bottom Axes with -90 degree title rotation": {
      "name": "Left and Bottom Axes with -90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 435,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 431
      }
    },
    "Right and Top Axes with undefined degree title rotation": {
      "name": "Right and Top Axes with undefined degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 372,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 361
      }
    },
    "Right and Top Axes with 15 degree title rotation": {
      "name": "Right and Top Axes with 15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 360,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 357
      }
    },
    "Right and Top Axes with 30 degree title rotation": {
      "name": "Right and Top Axes with 30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 442,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 439
      }
    },
    "Right and Top Axes with 45 degree title rotation": {
      "name": "Right and Top Axes with 45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 380
      }
    },
    "Right and Top Axes with 60 degree title rotation": {
      "name": "Right and Top Axes with 60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 487
      }
    },
    "Right and Top Axes with 75 degree title rotation": {
      "name": "Right and Top Axes with 75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 348,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 337
      }
    },
    "Right and Top Axes with 90 degree title rotation": {
      "name": "Right and Top Axes with 90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 371,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 355
      }
    },
    "Right and Top Axes with -15 degree title rotation": {
      "name": "Right and Top Axes with -15 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 471,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 468
      }
    },
    "Right and Top Axes with -30 degree title rotation": {
      "name": "Right and Top Axes with -30 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 336,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 332
      }
    },
    "Right and Top Axes with -45 degree title rotation": {
      "name": "Right and Top Axes with -45 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 514,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 396
      }
    },
    "Right and Top Axes with -60 degree title rotation": {
      "name": "Right and Top Axes with -60 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 357,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 346
      }
    },
    "Right and Top Axes with -75 degree title rotation": {
      "name": "Right and Top Axes with -75 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 337,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 334
      }
    },
    "Right and Top Axes with -90 degree title rotation": {
      "name": "Right and Top Axes with -90 degree title rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 476,
      "type": "testcase",
      "testTitleRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTitleRotation",
        "duration": 473
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:55:04 PM"
  },
  {
    "name": "Charts: AxisLabel",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 9884,
    "type": "report",
    "Left and Bottom Axes with 15 degree label rotation": {
      "name": "Left and Bottom Axes with 15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 499,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 496
      }
    },
    "Left and Bottom Axes with 30 degree label rotation": {
      "name": "Left and Bottom Axes with 30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 343
      }
    },
    "Left and Bottom Axes with 45 degree label rotation": {
      "name": "Left and Bottom Axes with 45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 440
      }
    },
    "Left and Bottom Axes with 60 degree label rotation": {
      "name": "Left and Bottom Axes with 60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 340
      }
    },
    "Left and Bottom Axes with 75 degree label rotation": {
      "name": "Left and Bottom Axes with 75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 351,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 348
      }
    },
    "Left and Bottom Axes with 90 degree label rotation": {
      "name": "Left and Bottom Axes with 90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 517,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 514
      }
    },
    "Left and Bottom Axes with -15 degree label rotation": {
      "name": "Left and Bottom Axes with -15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 332,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 328
      }
    },
    "Left and Bottom Axes with -30 degree label rotation": {
      "name": "Left and Bottom Axes with -30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 439
      }
    },
    "Left and Bottom Axes with -45 degree label rotation": {
      "name": "Left and Bottom Axes with -45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 331,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 329
      }
    },
    "Left and Bottom Axes with -60 degree label rotation": {
      "name": "Left and Bottom Axes with -60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 339,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 336
      }
    },
    "Left and Bottom Axes with -75 degree label rotation": {
      "name": "Left and Bottom Axes with -75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 432,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 429
      }
    },
    "Left and Bottom Axes with -90 degree label rotation": {
      "name": "Left and Bottom Axes with -90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 361,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 358
      }
    },
    "Right and Top Axes with 15 degree label rotation": {
      "name": "Right and Top Axes with 15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 457,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 454
      }
    },
    "Right and Top Axes with 30 degree label rotation": {
      "name": "Right and Top Axes with 30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 366,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 358
      }
    },
    "Right and Top Axes with 45 degree label rotation": {
      "name": "Right and Top Axes with 45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 341,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 327
      }
    },
    "Right and Top Axes with 60 degree label rotation": {
      "name": "Right and Top Axes with 60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 452,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 449
      }
    },
    "Right and Top Axes with 75 degree label rotation": {
      "name": "Right and Top Axes with 75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 339
      }
    },
    "Right and Top Axes with 90 degree label rotation": {
      "name": "Right and Top Axes with 90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 536,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 404
      }
    },
    "Right and Top Axes with -15 degree label rotation": {
      "name": "Right and Top Axes with -15 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 350,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 336
      }
    },
    "Right and Top Axes with -30 degree label rotation": {
      "name": "Right and Top Axes with -30 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 369,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 366
      }
    },
    "Right and Top Axes with -45 degree label rotation": {
      "name": "Right and Top Axes with -45 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 467,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 453
      }
    },
    "Right and Top Axes with -60 degree label rotation": {
      "name": "Right and Top Axes with -60 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 388,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 376
      }
    },
    "Right and Top Axes with -75 degree label rotation": {
      "name": "Right and Top Axes with -75 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 443,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 439
      }
    },
    "Right and Top Axes with -90 degree label rotation": {
      "name": "Right and Top Axes with -90 degree label rotation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 481,
      "type": "testcase",
      "testLabelRotation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLabelRotation",
        "duration": 469
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:55:15 PM"
  },
  {
    "name": "Charts: AxesDisplay",
    "passed": 21,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 21,
    "duration": 8849,
    "type": "report",
    "Axes Tests": {
      "name": "Axes Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 951,
      "type": "testcase",
      "testRemoveKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveKey",
        "duration": 552
      },
      "testAddKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddKey",
        "duration": 394
      }
    },
    "Axis alwaysShowZero Test": {
      "name": "Axis alwaysShowZero Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 471,
      "type": "testcase",
      "testAlwaysShowZero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZero",
        "duration": 447
      }
    },
    "Axis alwaysShowZero = false Test": {
      "name": "Axis alwaysShowZero = false Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testAlwaysShowZeroEqualsFalse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAlwaysShowZeroEqualsFalse",
        "duration": 344
      }
    },
    "Dual Axes Missing Data (small dataProvider) Test": {
      "name": "Dual Axes Missing Data (small dataProvider) Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 446,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 443
      }
    },
    "Dual Axes Missing Data (large dataProvider) Test": {
      "name": "Dual Axes Missing Data (large dataProvider) Test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 647,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 643
      }
    },
    "Dual Axes Missing Data (small dataProvider) Test with alwaysShowZero=false": {
      "name": "Dual Axes Missing Data (small dataProvider) Test with alwaysShowZero=false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 396,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 393
      }
    },
    "Dual Axes Missing Data (large dataProvider) Test with alwaysShowZero=false": {
      "name": "Dual Axes Missing Data (large dataProvider) Test with alwaysShowZero=false",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 571,
      "type": "testcase",
      "testAxesMinAndMax": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAxesMinAndMax",
        "duration": 549
      }
    },
    "Custom Left and Bottom Axes with inside ticks": {
      "name": "Custom Left and Bottom Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 322,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 319
      }
    },
    "Custom Left and Bottom Axes with outside ticks": {
      "name": "Custom Left and Bottom Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 437
      }
    },
    "Custom Left and Bottom Axes with cross ticks": {
      "name": "Custom Left and Bottom Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 320
      }
    },
    "Custom Right and Bottom Axes with inside ticks": {
      "name": "Custom Right and Bottom Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 342,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 339
      }
    },
    "Custom Right and Bottom Axes with outside ticks": {
      "name": "Custom Right and Bottom Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 420
      }
    },
    "Custom Right and Bottom Axes with cross ticks": {
      "name": "Custom Right and Bottom Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 358,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 354
      }
    },
    "Custom Left and Top Axes with inside ticks": {
      "name": "Custom Left and Top Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 347,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 344
      }
    },
    "Custom Left and Top Axes with outside ticks": {
      "name": "Custom Left and Top Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 449,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 446
      }
    },
    "Custom Left and Top Axes with cross ticks": {
      "name": "Custom Left and Top Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 318,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 315
      }
    },
    "Custom Right and Top Axes with inside ticks": {
      "name": "Custom Right and Top Axes with inside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 451,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 448
      }
    },
    "Custom Right and Top Axes with outside ticks": {
      "name": "Custom Right and Top Axes with outside ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 322
      }
    },
    "Custom Right and Top Axes with cross ticks": {
      "name": "Custom Right and Top Axes with cross ticks",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 375,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 355
      }
    },
    "Custom Right and Top Axes with ticks set to none": {
      "name": "Custom Right and Top Axes with ticks set to none",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testGraphicStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGraphicStyles",
        "duration": 412
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:55:25 PM"
  },
  {
    "name": "Charts: AxesAttrs",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 24,
    "duration": 11196,
    "type": "report",
    "Axes Attribute Tests": {
      "name": "Axes Attribute Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1969,
      "type": "testcase",
      "testBottomCatAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBottomCatAxes",
        "duration": 476
      },
      "testRightValueAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRightValueAxes",
        "duration": 280
      },
      "testTopCatAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTopCatAxes",
        "duration": 670
      },
      "testLeftValueAxes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLeftValueAxes",
        "duration": 519
      }
    },
    "Axes Test Right Explicit Width": {
      "name": "Axes Test Right Explicit Width",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 419
      }
    },
    "Axes Test Bottom Explicit Height": {
      "name": "Axes Test Bottom Explicit Height",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 308,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 298
      }
    },
    "Axes Test Left Explicit Width": {
      "name": "Axes Test Left Explicit Width",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 268,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 263
      }
    },
    "Axes Test Top Explicit Height": {
      "name": "Axes Test Top Explicit Height",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 314,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 300
      }
    },
    "Axes Test Right Explicit Width Up Front": {
      "name": "Axes Test Right Explicit Width Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 400
      }
    },
    "Axes Test Bottom Explicit Height Up Front": {
      "name": "Axes Test Bottom Explicit Height Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 269,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 266
      }
    },
    "Axes Test Left Explicit Width Up Front": {
      "name": "Axes Test Left Explicit Width Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 289,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 273
      }
    },
    "Axes Test Top Explicit Height Up Front": {
      "name": "Axes Test Top Explicit Height Up Front",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 391,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 388
      }
    },
    "Axis labelFunction and titleFunction tests.": {
      "name": "Axis labelFunction and titleFunction tests.",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1718,
      "type": "testcase",
      "testCategoryLabels": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCategoryLabels",
        "duration": 922
      },
      "testNumericLabels": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumericLabels",
        "duration": 766
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:55:38 PM"
  },
  {
    "name": "Charts: AriaSpline",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 6719,
    "type": "report",
    "Spline Aria Tests": {
      "name": "Spline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1642,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 504
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 316
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 358
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 404
      }
    },
    "StackedSpline Aria Tests": {
      "name": "StackedSpline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1400,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 336
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 378
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 344
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 306
      }
    },
    "ComboSpline Aria Tests": {
      "name": "ComboSpline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1696,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 448
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 348
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 421
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 453
      }
    },
    "StackedComboSpline Aria Tests": {
      "name": "StackedComboSpline Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1876,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 444
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 485
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 418
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 499
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:55:46 PM"
  },
  {
    "name": "Charts: AriaPie",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 783,
    "type": "report",
    "Pie Aria Tests": {
      "name": "Pie Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 706,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 195
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 232
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 126
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 129
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:55:48 PM"
  },
  {
    "name": "Charts: AriaLine",
    "passed": 32,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 32,
    "duration": 11581,
    "type": "report",
    "Combo Aria Tests": {
      "name": "Combo Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1580,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 448
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 331
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 374
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 382
      }
    },
    "StackedCombo Aria Tests": {
      "name": "StackedCombo Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1481,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 358
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 404
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 353
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 320
      }
    },
    "Area Aria Tests": {
      "name": "Area Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1433,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 441
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 276
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 293
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 353
      }
    },
    "StackedArea Aria Tests": {
      "name": "StackedArea Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1326,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 300
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 298
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 302
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 282
      }
    },
    "Line Aria Tests": {
      "name": "Line Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1339,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 308
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 382
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 284
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 322
      }
    },
    "StackedLine Aria Tests": {
      "name": "StackedLine Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1403,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 354
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 303
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 296
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 390
      }
    },
    "Marker Aria Tests": {
      "name": "Marker Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1394,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 304
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 405
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 312
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 337
      }
    },
    "StackedMarker Aria Tests": {
      "name": "StackedMarker Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1520,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 404
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 332
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 303
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 460
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:56:01 PM"
  },
  {
    "name": "Charts: AriaHistogram",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 6131,
    "type": "report",
    "Column Aria Tests": {
      "name": "Column Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1630,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 487
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 311
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 466
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 308
      }
    },
    "StackedColumn Aria Tests": {
      "name": "StackedColumn Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1431,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 320
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 413
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 349
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 301
      }
    },
    "Bar Aria Tests": {
      "name": "Bar Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1563,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 453
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 300
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 413
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 338
      }
    },
    "StackedBar Aria Tests": {
      "name": "StackedBar Aria Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 1421,
      "type": "testcase",
      "test:getAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaLabel()",
        "duration": 304
      },
      "test:setAriaLabel()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaLabel()",
        "duration": 431
      },
      "test:getAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:getAriaDescription()",
        "duration": 316
      },
      "test:setAriaDescription()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:setAriaDescription()",
        "duration": 342
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:56:08 PM"
  },
  {
    "name": "Charts: Aria Events",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 17,
    "duration": 7682,
    "type": "report",
    "Column Chart AriaEvent KeyDown Tests": {
      "name": "Column Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 581,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 564
      }
    },
    "Bar Chart AriaEvent KeyDown Tests": {
      "name": "Bar Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 410
      }
    },
    "StackedColumn Chart AriaEvent KeyDown Tests": {
      "name": "StackedColumn Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 475,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 472
      }
    },
    "StackedBar Chart AriaEvent KeyDown Tests": {
      "name": "StackedBar Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 426,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 422
      }
    },
    "Combo Chart AriaEvent KeyDown Tests": {
      "name": "Combo Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 537,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 525
      }
    },
    "StackedCombo Chart AriaEvent KeyDown Tests": {
      "name": "StackedCombo Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 413
      }
    },
    "Area Chart AriaEvent KeyDown Tests": {
      "name": "Area Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 376
      }
    },
    "StackedArea Chart AriaEvent KeyDown Tests": {
      "name": "StackedArea Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 491,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 489
      }
    },
    "Spline Chart AriaEvent KeyDown Tests": {
      "name": "Spline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 415,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 411
      }
    },
    "StackedSpline Chart AriaEvent KeyDown Tests": {
      "name": "StackedSpline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 548,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 544
      }
    },
    "ComboSpline Chart AriaEvent KeyDown Tests": {
      "name": "ComboSpline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 435,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 432
      }
    },
    "StackedComboSpline Chart AriaEvent KeyDown Tests": {
      "name": "StackedComboSpline Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 631,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 627
      }
    },
    "Line Chart AriaEvent KeyDown Tests": {
      "name": "Line Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 371
      }
    },
    "StackedLine Chart AriaEvent KeyDown Tests": {
      "name": "StackedLine Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 362,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 359
      }
    },
    "Marker Chart AriaEvent KeyDown Tests": {
      "name": "Marker Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 508,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 506
      }
    },
    "StackedMarker Chart AriaEvent KeyDown Tests": {
      "name": "StackedMarker Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "Pie Chart AriaEvent KeyDown Tests": {
      "name": "Pie Chart AriaEvent KeyDown Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 157,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 155
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:56:17 PM"
  },
  {
    "name": "Charts: AreaSplineLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 11285,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 634,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 630
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 680,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 677
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 618,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 615
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 736,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 733
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 714,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 710
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 705,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 682
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 642,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 625
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 740,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 736
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 762,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 743
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 627,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 615
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 760,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 757
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 709,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 705
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 677,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 661
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 2160,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2153
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:56:30 PM"
  },
  {
    "name": "Charts: AreaSplineLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 8021,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 547,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 543
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 413
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 558,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 555
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 465,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 450
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 441,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 421
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 595,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 591
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 431,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 428
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 564,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 560
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 428,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 546,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 531
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 419,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 542,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 528
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 422,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 420
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1531,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1528
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:56:39 PM"
  },
  {
    "name": "Charts: AreaSplineGridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 7749,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924199855_78": {
      "name": "testCase_yui_3_5_0_1_1349924199855_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 470,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 453
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_79": {
      "name": "testCase_yui_3_5_0_1_1349924199855_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 340
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_80": {
      "name": "testCase_yui_3_5_0_1_1349924199855_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 459,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 457
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_81": {
      "name": "testCase_yui_3_5_0_1_1349924199855_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 345,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_82": {
      "name": "testCase_yui_3_5_0_1_1349924199855_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 393,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_83": {
      "name": "testCase_yui_3_5_0_1_1349924199855_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 453,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 450
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_84": {
      "name": "testCase_yui_3_5_0_1_1349924199855_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 370,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 367
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_85": {
      "name": "testCase_yui_3_5_0_1_1349924199855_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 407,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 404
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_86": {
      "name": "testCase_yui_3_5_0_1_1349924199855_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_87": {
      "name": "testCase_yui_3_5_0_1_1349924199855_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_88": {
      "name": "testCase_yui_3_5_0_1_1349924199855_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 520,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 516
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_89": {
      "name": "testCase_yui_3_5_0_1_1349924199855_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 394,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 383
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_90": {
      "name": "testCase_yui_3_5_0_1_1349924199855_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 466,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 464
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_91": {
      "name": "testCase_yui_3_5_0_1_1349924199855_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 384,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 382
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_92": {
      "name": "testCase_yui_3_5_0_1_1349924199855_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 459,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 434
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_93": {
      "name": "testCase_yui_3_5_0_1_1349924199855_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 417,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 414
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_94": {
      "name": "testCase_yui_3_5_0_1_1349924199855_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 406,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 403
      }
    },
    "testCase_yui_3_5_0_1_1349924199855_95": {
      "name": "testCase_yui_3_5_0_1_1349924199855_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 589,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 564
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:56:48 PM"
  },
  {
    "name": "Charts: AreaLegendWrapItems",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 10361,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 593,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 578
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 627,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 624
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 587,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 584
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 641,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 637
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 716,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 691
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 615,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 600
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 704,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 679
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 649,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 645
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 591,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 587
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 657,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 654
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 731,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 707
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 649,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 645
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 618,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 616
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1882,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 1878
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:00 PM"
  },
  {
    "name": "Charts: AreaLegend",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 6554,
    "type": "report",
    "No Legend Tests with basic dataProvider": {
      "name": "No Legend Tests with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 474,
      "type": "testcase",
      "testNoLegend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNoLegend",
        "duration": 469
      }
    },
    "Test with top positioned, center aligned legend": {
      "name": "Test with top positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 361
      }
    },
    "Test with right positioned, middle aligned legend": {
      "name": "Test with right positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 497,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 493
      }
    },
    "Test with bottom positioned, center aligned legend": {
      "name": "Test with bottom positioned, center aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 385,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 355
      }
    },
    "Test with left positioned, middle aligned legend": {
      "name": "Test with left positioned, middle aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 405,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 393
      }
    },
    "Test with top positioned, left aligned legend": {
      "name": "Test with top positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 429,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 426
      }
    },
    "Test with right positioned, top aligned legend": {
      "name": "Test with right positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 408,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "Test with bottom positioned, left aligned legend": {
      "name": "Test with bottom positioned, left aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 439,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 436
      }
    },
    "Test with left positioned, top aligned legend": {
      "name": "Test with left positioned, top aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 399,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 384
      }
    },
    "Test with top positioned, right aligned legend": {
      "name": "Test with top positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 346,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 342
      }
    },
    "Test with right positioned, bottom aligned legend": {
      "name": "Test with right positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 531,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 511
      }
    },
    "Test with bottom positioned, right aligned legend": {
      "name": "Test with bottom positioned, right aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 354,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 351
      }
    },
    "Test with left positioned, bottom aligned legend": {
      "name": "Test with left positioned, bottom aligned legend",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 490,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 479
      }
    },
    "Legend Position Test with basic dataProvider": {
      "name": "Legend Position Test with basic dataProvider",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 919,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 916
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:08 PM"
  },
  {
    "name": "Charts: Gridlines",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 6639,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924228328_78": {
      "name": "testCase_yui_3_5_0_1_1349924228328_78",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 488,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 473
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_79": {
      "name": "testCase_yui_3_5_0_1_1349924228328_79",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 287,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 284
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_80": {
      "name": "testCase_yui_3_5_0_1_1349924228328_80",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 313,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 302
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_81": {
      "name": "testCase_yui_3_5_0_1_1349924228328_81",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 386,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 361
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_82": {
      "name": "testCase_yui_3_5_0_1_1349924228328_82",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 308,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 306
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_83": {
      "name": "testCase_yui_3_5_0_1_1349924228328_83",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 348,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 343
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_84": {
      "name": "testCase_yui_3_5_0_1_1349924228328_84",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 356,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 352
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_85": {
      "name": "testCase_yui_3_5_0_1_1349924228328_85",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 296,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 292
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_86": {
      "name": "testCase_yui_3_5_0_1_1349924228328_86",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 414,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 389
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_87": {
      "name": "testCase_yui_3_5_0_1_1349924228328_87",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 349,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 344
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_88": {
      "name": "testCase_yui_3_5_0_1_1349924228328_88",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 328,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 317
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_89": {
      "name": "testCase_yui_3_5_0_1_1349924228328_89",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 412,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 409
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_90": {
      "name": "testCase_yui_3_5_0_1_1349924228328_90",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 328,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 326
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_91": {
      "name": "testCase_yui_3_5_0_1_1349924228328_91",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 373,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 370
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_92": {
      "name": "testCase_yui_3_5_0_1_1349924228328_92",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 423,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 407
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_93": {
      "name": "testCase_yui_3_5_0_1_1349924228328_93",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 347,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 344
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_94": {
      "name": "testCase_yui_3_5_0_1_1349924228328_94",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 416,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 413
      }
    },
    "testCase_yui_3_5_0_1_1349924228328_95": {
      "name": "testCase_yui_3_5_0_1_1349924228328_95",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 354,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 352
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:15 PM"
  },
  {
    "name": "Charts: AreaGlobalStyles",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 10463,
    "type": "report",
    "testCase_yui_3_5_0_1_1349924236248_78": {
      "name": "testCase_yui_3_5_0_1_1349924236248_78",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1262,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 646
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 592
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_79": {
      "name": "testCase_yui_3_5_0_1_1349924236248_79",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1120,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 512
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 601
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_80": {
      "name": "testCase_yui_3_5_0_1_1349924236248_80",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1204,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 628
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 533
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_81": {
      "name": "testCase_yui_3_5_0_1_1349924236248_81",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1266,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 621
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 618
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_82": {
      "name": "testCase_yui_3_5_0_1_1349924236248_82",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1336,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 705
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 593
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_83": {
      "name": "testCase_yui_3_5_0_1_1349924236248_83",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1404,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 692
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 707
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_84": {
      "name": "testCase_yui_3_5_0_1_1349924236248_84",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1437,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 712
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 715
      }
    },
    "testCase_yui_3_5_0_1_1349924236248_85": {
      "name": "testCase_yui_3_5_0_1_1349924236248_85",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1347,
      "type": "testcase",
      "testGlobalStyles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGlobalStyles",
        "duration": 638
      },
      "testStylesByComponent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStylesByComponent",
        "duration": 702
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:27 PM"
  },
  {
    "name": "Charts: AreaDataProvider",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 9217,
    "type": "report",
    "All Positive DataProvider Tests": {
      "name": "All Positive DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 456,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 433
      }
    },
    "All Negative DataProvider Tests": {
      "name": "All Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 283,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 279
      }
    },
    "Positive and Negative DataProvider Tests": {
      "name": "Positive and Negative DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 285,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 282
      }
    },
    "Decimal DataProvider Tests": {
      "name": "Decimal DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 400,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 386
      }
    },
    "Missing Small DataProvider Tests": {
      "name": "Missing Small DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 316,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 308
      }
    },
    "Missing Large DataProvider Tests": {
      "name": "Missing Large DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 314,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 310
      }
    },
    "Null Values DataProvider Tests": {
      "name": "Null Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 399
      }
    },
    "Missing First Values DataProvider Tests": {
      "name": "Missing First Values DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 280,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 277
      }
    },
    "All Positive Stacked DataProvider Tests": {
      "name": "All Positive Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 320
      }
    },
    "All Negative Stacked DataProvider Tests": {
      "name": "All Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 379,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 357
      }
    },
    "Positive and Negative Stacked DataProvider Tests": {
      "name": "Positive and Negative Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 330,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 307
      }
    },
    "Decimal Stacked DataProvider Tests": {
      "name": "Decimal Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 311,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 307
      }
    },
    "Missing Small Stacked DataProvider Tests": {
      "name": "Missing Small Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 363,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 360
      }
    },
    "Missing Large Stacked DataProvider Tests": {
      "name": "Missing Large Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 376,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 373
      }
    },
    "Null Values Stacked DataProvider Tests": {
      "name": "Null Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 291,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 280
      }
    },
    "Missing First Values Stacked DataProvider Tests": {
      "name": "Missing First Values Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 382,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 379
      }
    },
    "Missing Values Large Data DataProvider Tests": {
      "name": "Missing Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 305,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 302
      }
    },
    "Missing Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 349,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 334
      }
    },
    "Missing First Values Large Data DataProvider Tests": {
      "name": "Missing First Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 448,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 425
      }
    },
    "Missing First Values Large Data Stacked DataProvider Tests": {
      "name": "Missing First Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 323,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 306
      }
    },
    "Missing Last Values Large Data DataProvider Tests": {
      "name": "Missing Last Values Large Data DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 343,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 339
      }
    },
    "Missing Last Values Large Data Stacked DataProvider Tests": {
      "name": "Missing Last Values Large Data Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 402,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 394
      }
    },
    "Split Trailing Series DataProvider DataProvider Tests": {
      "name": "Split Trailing Series DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 338,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 334
      }
    },
    "Split Trailing Series DataProvider Stacked DataProvider Tests": {
      "name": "Split Trailing Series DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 410,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 407
      }
    },
    "Two Series End Together DataProvider DataProvider Tests": {
      "name": "Two Series End Together DataProvider DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 344,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 341
      }
    },
    "Two Series End Together DataProvider Stacked DataProvider Tests": {
      "name": "Two Series End Together DataProvider Stacked DataProvider Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 325,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 307
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:38 PM"
  },
  {
    "name": "QueryString",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 155,
    "type": "report",
    "Parse Query Strings": {
      "name": "Parse Query Strings",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 18,
      "type": "testcase",
      "testParseBasic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseBasic",
        "duration": 5
      },
      "testParseColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseColon",
        "duration": 2
      },
      "testParseWeird": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseWeird",
        "duration": 2
      },
      "testNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNested",
        "duration": 1
      },
      "testNestedColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNestedColon",
        "duration": 1
      }
    },
    "Query Stringify Objects": {
      "name": "Query Stringify Objects",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 25,
      "type": "testcase",
      "testStringifyBasic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyBasic",
        "duration": 3
      },
      "testStringifyColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyColon",
        "duration": 1
      },
      "testStringifyWeird": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyWeird",
        "duration": 2
      },
      "testStringifyCyclical": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStringifyCyclical",
        "duration": 5
      },
      "testNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNested",
        "duration": 1
      },
      "testNestedColon": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNestedColon",
        "duration": 1
      },
      "testArrayKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArrayKey",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:39 PM"
  },
  {
    "name": "Widget: Stack",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 4,
    "duration": 250,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 1,
      "duration": 11,
      "type": "testcase",
      "WidgetStack should add `shim` and `zIndex` attributes": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "WidgetStack should add `shim` and `zIndex` attributes"
      }
    },
    "Attributes and Properties": {
      "name": "Attributes and Properties",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 158,
      "type": "testcase",
      "zIndex of \"auto\" parsed from a node should not override the default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "zIndex of \"auto\" parsed from a node should not override the default",
        "duration": 49
      },
      "srcNode in the document with position should have its zIndex parsed from the DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "srcNode in the document with position should have its zIndex parsed from the DOM",
        "duration": 71
      },
      "A user specified zIndex should override the parsed zIndex value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A user specified zIndex should override the parsed zIndex value",
        "duration": 21
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:40 PM"
  },
  {
    "name": "Event Gestures",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 141,
    "type": "report",
    "Gesture Event Suite": {
      "name": "Gesture Event Suite",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 22,
      "type": "testsuite",
      "movestart": {
        "name": "movestart",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "test: _onStart()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onStart()",
          "duration": 3
        },
        "test: _start()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _start()",
          "duration": 2
        }
      },
      "move": {
        "name": "move",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 5,
        "type": "testcase",
        "test: _onMove()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onMove()",
          "duration": 3
        }
      },
      "moveend": {
        "name": "moveend",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 3,
        "type": "testcase",
        "test: _onEnd()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onEnd()",
          "duration": 2
        }
      }
    },
    "Flick Event Suite": {
      "name": "Flick Event Suite",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testsuite",
      "flick": {
        "name": "flick",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 12,
        "type": "testcase",
        "test: _onStart()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onStart()",
          "duration": 3
        },
        "test: _onMove()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onMove()",
          "duration": 2
        },
        "test: _onEnd()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _onEnd()",
          "duration": 2
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:41 PM"
  },
  {
    "name": "YUITest",
    "passed": 147,
    "failed": 1,
    "errors": 0,
    "ignored": 1,
    "total": 149,
    "duration": 1535,
    "type": "report",
    "Formatting Tests": {
      "name": "Formatting Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 12,
      "type": "testsuite",
      "Test Results Formatting Tests": {
        "name": "Test Results Formatting Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 9,
        "type": "testcase",
        "testXmlFormat": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testXmlFormat",
          "duration": 1
        },
        "testJUnitXmlFormat": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testJUnitXmlFormat",
          "duration": 1
        },
        "testTAPFormat": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testTAPFormat",
          "duration": 1
        }
      }
    },
    "Mock Tests": {
      "name": "Mock Tests",
      "passed": 53,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 53,
      "duration": 602,
      "type": "testsuite",
      "Call Count Tests": {
        "name": "Call Count Tests",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 37,
        "type": "testcase",
        "Call count should default to 1 and pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count should default to 1 and pass",
          "duration": 1
        },
        "Call count should default to 1 and fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count should default to 1 and fail",
          "duration": 9
        },
        "Call count set to 1 should pass when method is called once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 1 should pass when method is called once",
          "duration": 1
        },
        "Call count set to 1 should fail when method isn't called": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 1 should fail when method isn't called",
          "duration": 6
        },
        "Call count set to 1 should fail when method is called twice": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 1 should fail when method is called twice",
          "duration": 6
        },
        "Call count set to 0 should fail when method is called once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 0 should fail when method is called once",
          "duration": 6
        },
        "Call count set to 0 should pass when method isn't called": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Call count set to 0 should pass when method isn't called",
          "duration": 1
        }
      },
      "Arguments Tests": {
        "name": "Arguments Tests",
        "passed": 40,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 40,
        "duration": 209,
        "type": "testcase",
        "Passing correct number of arguments should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing correct number of arguments should make the test pass",
          "duration": 1
        },
        "Passing an incorrect number of arguments should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing an incorrect number of arguments should make the test fail",
          "duration": 7
        },
        "Passing the exact argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing the exact argument should make the test pass",
          "duration": 2
        },
        "Passing an inexact argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing an inexact argument should make the test fail",
          "duration": 6
        },
        "Passing a number to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a boolean to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a string to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a object to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Any argument should make the test pass",
          "duration": 2
        },
        "Passing a function to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a null to an Any argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Any argument should make the test pass",
          "duration": 1
        },
        "Passing a number to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Boolean argument should make the test fail",
          "duration": 7
        },
        "Passing a boolean to an Boolean argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Boolean argument should make the test pass",
          "duration": 1
        },
        "Passing a string to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Boolean argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Boolean argument should make the test fail",
          "duration": 6
        },
        "Passing a function to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Boolean argument should make the test fail",
          "duration": 5
        },
        "Passing a null to an Boolean argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Boolean argument should make the test fail",
          "duration": 5
        },
        "Passing a number to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an String argument should make the test fail",
          "duration": 6
        },
        "Passing a boolean to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an String argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an String argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an String argument should make the test pass",
          "duration": 1
        },
        "Passing a object to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an String argument should make the test fail",
          "duration": 6
        },
        "Passing a function to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an String argument should make the test fail",
          "duration": 5
        },
        "Passing a null to an String argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an String argument should make the test fail",
          "duration": 5
        },
        "Passing a number to an Number argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Number argument should make the test pass",
          "duration": 1
        },
        "Passing a boolean to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a function to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Number argument should make the test fail",
          "duration": 6
        },
        "Passing a null to an Number argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Number argument should make the test fail",
          "duration": 5
        },
        "Passing a number to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Function argument should make the test fail",
          "duration": 5
        },
        "Passing a boolean to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a function to an Function argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Function argument should make the test pass",
          "duration": 1
        },
        "Passing a null to an Function argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Function argument should make the test fail",
          "duration": 6
        },
        "Passing a number to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a number to an Object argument should make the test fail",
          "duration": 5
        },
        "Passing a boolean to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a boolean to an Object argument should make the test fail",
          "duration": 6
        },
        "Passing a string to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a string to an Object argument should make the test fail",
          "duration": 6
        },
        "Passing a object to an Object argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a object to an Object argument should make the test pass",
          "duration": 1
        },
        "Passing a function to an Object argument should make the test pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a function to an Object argument should make the test pass",
          "duration": 1
        },
        "Passing a null to an Object argument should make the test fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing a null to an Object argument should make the test fail",
          "duration": 6
        }
      },
      "Asynchronous Tests": {
        "name": "Asynchronous Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 322,
        "type": "testcase",
        "A mock method called asynchronously shouldn't cause an error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A mock method called asynchronously shouldn't cause an error",
          "duration": 277
        }
      },
      "Returns Tests": {
        "name": "Returns Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "Value for 'returns' should default to undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Value for 'returns' should default to undefined",
          "duration": 1
        },
        "Value for 'returns' should be used as return value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Value for 'returns' should be used as return value",
          "duration": 1
        },
        "Value for 'returns' should be used rather than run value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Value for 'returns' should be used rather than run value",
          "duration": 1
        }
      },
      "Run Tests": {
        "name": "Run Tests",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "A supplied run function should be invoked": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A supplied run function should be invoked",
          "duration": 1
        },
        "A supplied run function's return value should be used.": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A supplied run function's return value should be used.",
          "duration": 1
        }
      }
    },
    "Object Assert Tests": {
      "name": "Object Assert Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 96,
      "type": "testsuite",
      "hasKey() Tests": {
        "name": "hasKey() Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "hasKey() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKey() should pass for existing key on instance",
          "duration": 1
        },
        "hasKey() should pass for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKey() should pass for existing key on prototype",
          "duration": 1
        },
        "hasKey() should fail for missing key": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKey() should fail for missing key",
          "duration": 4
        }
      },
      "hasKeys() Tests": {
        "name": "hasKeys() Tests",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 19,
        "type": "testcase",
        "hasKeys() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should pass for existing key on instance",
          "duration": 1
        },
        "hasKeys() should pass for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should pass for existing key on prototype",
          "duration": 1
        },
        "hasKeys() should fail for missing key on object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should fail for missing key on object",
          "duration": 4
        },
        "hasKeys() should fail for missing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasKeys() should fail for missing key on prototype",
          "duration": 3
        }
      },
      "ownsKey() Tests": {
        "name": "ownsKey() Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "ownsKey() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKey() should pass for existing key on instance",
          "duration": 1
        },
        "ownsKey() should fail for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKey() should fail for existing key on prototype",
          "duration": 4
        },
        "ownsKey() should fail for missing key": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKey() should fail for missing key",
          "duration": 3
        }
      },
      "ownsKeys() Tests": {
        "name": "ownsKeys() Tests",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 18,
        "type": "testcase",
        "ownsKeys() should pass for existing key on instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should pass for existing key on instance",
          "duration": 1
        },
        "ownsKeys() should fail for existing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should fail for existing key on prototype",
          "duration": 3
        },
        "ownsKeys() should fail for missing key on object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should fail for missing key on object",
          "duration": 3
        },
        "ownsKeys() should fail for missing key on prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsKeys() should fail for missing key on prototype",
          "duration": 4
        }
      },
      "ownsNoKeys() Tests": {
        "name": "ownsNoKeys() Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 13,
        "type": "testcase",
        "ownsNoKeys() should fail for object with one key": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsNoKeys() should fail for object with one key",
          "duration": 3
        },
        "ownsNoKeys() should fail for object with two keys": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsNoKeys() should fail for object with two keys",
          "duration": 4
        },
        "ownsNoKeys() should pass for object with no keys": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ownsNoKeys() should pass for object with no keys",
          "duration": 1
        }
      },
      "Object Asserts": {
        "name": "Object Asserts",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: areEqual()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: areEqual()",
          "duration": 1
        }
      }
    },
    "Array Assert Tests": {
      "name": "Array Assert Tests",
      "passed": 34,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 34,
      "duration": 158,
      "type": "testsuite",
      "Contains Assert Tests": {
        "name": "Contains Assert Tests",
        "passed": 19,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 19,
        "duration": 77,
        "type": "testcase",
        "contains() should pass when the given item exists": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should pass when the given item exists",
          "duration": 1
        },
        "contains() should fail when a similar item exists": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should fail when a similar item exists",
          "duration": 4
        },
        "contains() should fail when the item doesn't exist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should fail when the item doesn't exist",
          "duration": 4
        },
        "contains() should throw a custom error message during failure": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "contains() should throw a custom error message during failure",
          "duration": 3
        },
        "test: doesNotContain()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContain()",
          "duration": 0
        },
        "test: doesNotContainItems()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainItems()",
          "duration": 1
        },
        "test: doesNotContainMatch()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainMatch()",
          "duration": 1
        },
        "test: indexOf()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: indexOf()",
          "duration": 1
        },
        "test: indexOf() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: indexOf() fail",
          "duration": 3
        },
        "test: lastIndexOf()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: lastIndexOf()",
          "duration": 1
        },
        "test: lastIndexOf() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: lastIndexOf() fail",
          "duration": 3
        },
        "test: doesNotContain() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContain() fail",
          "duration": 3
        },
        "test: doesNotContainItems() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainItems() fail",
          "duration": 3
        },
        "test: doesNotContainMatch() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainMatch() fail",
          "duration": 4
        },
        "test: doesNotContainMatch() fail 2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: doesNotContainMatch() fail 2",
          "duration": 5
        },
        "test: isEmpty()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isEmpty()",
          "duration": 1
        },
        "test: isNotEmpty()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isNotEmpty()",
          "duration": 1
        },
        "test: isEmpty() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isEmpty() fail",
          "duration": 4
        },
        "test: isNotEmpty() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isNotEmpty() fail",
          "duration": 4
        }
      },
      "ContainsItems Assert Tests": {
        "name": "ContainsItems Assert Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "testExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testExistingItems",
          "duration": 1
        },
        "testSimilarItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testSimilarItems",
          "duration": 3
        },
        "testNonExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testNonExistingItems",
          "duration": 3
        }
      },
      "ContainsMatch Assert Tests": {
        "name": "ContainsMatch Assert Tests",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 10,
        "type": "testcase",
        "testExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testExistingItems",
          "duration": 1
        },
        "testNonExistingItems": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testNonExistingItems",
          "duration": 3
        }
      },
      "itemsAreSame Assert Tests": {
        "name": "itemsAreSame Assert Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 15,
        "type": "testcase",
        "testItemsAreSame": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testItemsAreSame",
          "duration": 1
        },
        "testMissingItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMissingItem",
          "duration": 4
        },
        "testArrayAgainstObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArrayAgainstObject",
          "duration": 4
        }
      },
      "itemsAreEqual Assert Tests": {
        "name": "itemsAreEqual Assert Tests",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 15,
        "type": "testcase",
        "testItemsAreEqual": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testItemsAreEqual",
          "duration": 0
        },
        "testMissingItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMissingItem",
          "duration": 4
        },
        "testArrayAgainstObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArrayAgainstObject",
          "duration": 4
        },
        "test: Against a NodeList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Against a NodeList",
          "duration": 1
        }
      },
      "itemsAreEquivalent Assert Tests": {
        "name": "itemsAreEquivalent Assert Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 16,
        "type": "testcase",
        "testItemsAreEqual": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testItemsAreEqual",
          "duration": 1
        },
        "testMissingItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testMissingItem",
          "duration": 4
        },
        "testArrayAgainstObject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArrayAgainstObject",
          "duration": 3
        }
      }
    },
    "YUI Test Bugs": {
      "name": "YUI Test Bugs",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 56,
      "type": "testsuite",
      "TestReporter": {
        "name": "TestReporter",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 54,
        "type": "testcase",
        "creating an iframe should allow its name to be retrieved in the DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "creating an iframe should allow its name to be retrieved in the DOM",
          "duration": 23
        }
      }
    },
    "General Tests": {
      "name": "General Tests",
      "passed": 38,
      "failed": 1,
      "errors": 0,
      "ignored": 1,
      "total": 40,
      "duration": 393,
      "type": "testsuite",
      "Wait\/Resume": {
        "name": "Wait\/Resume",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 148,
        "type": "testcase",
        "test: resume without wait": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: resume without wait",
          "duration": 6
        },
        "test: wait without function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: wait without function",
          "duration": 123
        }
      },
      "Suite\/Case Tests": {
        "name": "Suite\/Case Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 39,
        "type": "testcase",
        "test: suite with no name": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: suite with no name",
          "duration": 0
        },
        "test: case with no name": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: case with no name",
          "duration": 1
        },
        "test: callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: callback",
          "duration": 1
        },
        "test: assert": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: assert",
          "duration": 1
        },
        "test: assert no condition": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: assert no condition",
          "duration": 4
        },
        "test: assert.fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: assert.fail",
          "duration": 3
        }
      },
      "EventTarget": {
        "name": "EventTarget",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: attach": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: attach",
          "duration": 1
        }
      },
      "General Asserts": {
        "name": "General Asserts",
        "passed": 15,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 15,
        "duration": 64,
        "type": "testcase",
        "test: asserts": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts",
          "duration": 1
        },
        "test: asserts fail areNotEqual": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail areNotEqual",
          "duration": 4
        },
        "test: asserts fail areNotSame": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail areNotSame",
          "duration": 3
        },
        "test: asserts fail isFalse": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isFalse",
          "duration": 3
        },
        "test: asserts fail isTrue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isTrue",
          "duration": 4
        },
        "test: asserts fail isNaN": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNaN",
          "duration": 3
        },
        "test: asserts fail isNotNaN": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNotNaN",
          "duration": 3
        },
        "test: asserts fail isNull": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNull",
          "duration": 3
        },
        "test: asserts fail isNotNull": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNotNull",
          "duration": 3
        },
        "test: asserts fail isUndefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isUndefined",
          "duration": 4
        },
        "test: asserts fail isNotUndefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isNotUndefined",
          "duration": 3
        },
        "test: asserts fail isArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isArray",
          "duration": 3
        },
        "test: asserts fail isInstanceOf": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isInstanceOf",
          "duration": 3
        },
        "test: asserts fail isTypeOf": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: asserts fail isTypeOf",
          "duration": 3
        },
        "test: Y.assert fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Y.assert fail",
          "duration": 4
        }
      },
      "Date Tests": {
        "name": "Date Tests",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 36,
        "type": "testcase",
        "test: datesAreEqual()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: datesAreEqual()",
          "duration": 1
        },
        "test: datesAreEqual() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: datesAreEqual() fail",
          "duration": 4
        },
        "test: timesAreEqual()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: timesAreEqual()",
          "duration": 0
        },
        "test: timesAreEqual() fail": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: timesAreEqual() fail",
          "duration": 4
        },
        "test: should error for not passing dates": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: should error for not passing dates",
          "duration": 5
        },
        "test: should error for not passing times": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: should error for not passing times",
          "duration": 13
        }
      },
      "Runner Tests": {
        "name": "Runner Tests",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 6,
        "duration": 30,
        "type": "testcase",
        "test: set name": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: set name",
          "duration": 1
        },
        "test: ignore": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: ignore"
        },
        "test: running\/waiting": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: running\/waiting",
          "duration": 1
        },
        "test: getResults": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: getResults",
          "duration": 1
        },
        "test: clear": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: clear",
          "duration": 1
        },
        "test: _getCount and reset": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: _getCount and reset",
          "duration": 1
        }
      },
      "Error Tests": {
        "name": "Error Tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 11,
        "type": "testcase",
        "test: Assert.Error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Assert.Error",
          "duration": 1
        },
        "test: Assert.ComparisonFailure": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Assert.ComparisonFailure",
          "duration": 0
        },
        "test: Assert.UnexpectedValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Assert.UnexpectedValue",
          "duration": 1
        }
      },
      "Reporter": {
        "name": "Reporter",
        "passed": 0,
        "failed": 1,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 46,
        "type": "testcase",
        "test: report": {
          "result": "fail",
          "message": "Unexpected error: Unable to get property 'value' of undefined or null reference",
          "type": "test",
          "name": "test: report",
          "duration": 24
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:43 PM"
  },
  {
    "name": "QueuePromote",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 103,
    "type": "report",
    "queue-promote API": {
      "name": "queue-promote API",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 29,
      "type": "testcase",
      "methods should exist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "methods should exist",
        "duration": 16
      },
      "promote should move found item to the head": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "promote should move found item to the head",
        "duration": 1
      },
      "remove should remove found item": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "remove should remove found item",
        "duration": 1
      },
      "indexOf should return index or -1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf should return index or -1",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:44 PM"
  },
  {
    "name": "ScrollInfo",
    "passed": 29,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 29,
    "duration": 2729,
    "type": "report",
    "ScrollInfo": {
      "name": "ScrollInfo",
      "passed": 29,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 29,
      "duration": 2572,
      "type": "testcase",
      "should detach events when destroyed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should detach events when destroyed",
        "duration": 11
      },
      "getOffscreenNodes() should return offscreen nodes matching the given selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getOffscreenNodes() should return offscreen nodes matching the given selector",
        "duration": 12
      },
      "body: getOffscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: getOffscreenNodes() should respect the margin parameter",
        "duration": 74
      },
      "div: getOffscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: getOffscreenNodes() should respect the margin parameter",
        "duration": 71
      },
      "getOnscreenNodes() should return onscreen nodes matching the given selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getOnscreenNodes() should return onscreen nodes matching the given selector",
        "duration": 14
      },
      "body: getOnscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: getOnscreenNodes() should respect the margin parameter",
        "duration": 73
      },
      "div: getOnscreenNodes() should respect the margin parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: getOnscreenNodes() should respect the margin parameter",
        "duration": 87
      },
      "body: getScrollInfo() should return current scroll information": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: getScrollInfo() should return current scroll information",
        "duration": 102
      },
      "div: getScrollInfo() should return current scroll information": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: getScrollInfo() should return current scroll information",
        "duration": 85
      },
      "refreshDimensions() should refresh cached info on a node's dimensions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "refreshDimensions() should refresh cached info on a node's dimensions",
        "duration": 14
      },
      "body: scroll event should fire on scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scroll event should fire on scroll",
        "duration": 90
      },
      "div: scroll event should fire on scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scroll event should fire on scroll",
        "duration": 93
      },
      "scroll event should be throttled within the scrollDelay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "scroll event should be throttled within the scrollDelay",
        "duration": 329
      },
      "body: scrollLeft event should fire after scrolling down": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollLeft event should fire after scrolling down",
        "duration": 82
      },
      "div: scrollDown event should fire after scrolling down": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollDown event should fire after scrolling down",
        "duration": 70
      },
      "body: scrollLeft event should fire after scrolling left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollLeft event should fire after scrolling left",
        "duration": 86
      },
      "div: scrollLeft event should fire after scrolling left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollLeft event should fire after scrolling left",
        "duration": 84
      },
      "body: scrollRight event should fire after scrolling right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollRight event should fire after scrolling right",
        "duration": 83
      },
      "div: scrollRight event should fire after scrolling right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollRight event should fire after scrolling right",
        "duration": 82
      },
      "body: scrollUp event should fire after scrolling up": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollUp event should fire after scrolling up",
        "duration": 74
      },
      "div: scrollUp event should fire after scrolling up": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollUp event should fire after scrolling up",
        "duration": 83
      },
      "body: scrollToBottom event should fire after scrolling to the bottom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToBottom event should fire after scrolling to the bottom",
        "duration": 72
      },
      "div: scrollToBottom event should fire after scrolling to the bottom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToBottom event should fire after scrolling to the bottom",
        "duration": 75
      },
      "body: scrollToLeft event should fire after scrolling to the extreme left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToLeft event should fire after scrolling to the extreme left",
        "duration": 91
      },
      "div: scrollToLeft event should fire after scrolling to the extreme left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToLeft event should fire after scrolling to the extreme left",
        "duration": 83
      },
      "body: scrollToRight event should fire after scrolling to the extreme right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToRight event should fire after scrolling to the extreme right",
        "duration": 82
      },
      "div: scrollToRight event should fire after scrolling to the extreme right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToRight event should fire after scrolling to the extreme right",
        "duration": 71
      },
      "body: scrollToTop event should fire after scrolling to the top": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body: scrollToTop event should fire after scrolling to the top",
        "duration": 88
      },
      "div: scrollToTop event should fire after scrolling to the top": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "div: scrollToTop event should fire after scrolling to the top",
        "duration": 74
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:48 PM"
  },
  {
    "name": "YQL",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 2053,
    "type": "report",
    "YQL Test": {
      "name": "YQL Test",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 1978,
      "type": "testcase",
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 1
      },
      "test_query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_query",
        "duration": 88
      },
      "test_https": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_https",
        "duration": 218
      },
      "test_failed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failed",
        "duration": 32
      },
      "test_escaped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_escaped",
        "duration": 1506
      },
      "test_requery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_requery",
        "duration": 7
      },
      "test: context as option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: context as option",
        "duration": 4
      },
      "test: context as param": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: context as param",
        "duration": 5
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:51 PM"
  },
  {
    "name": "Widget: Position",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 163,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 88,
      "type": "testcase",
      "WidgetPosition should add `x`, `y`, and `xy` attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "WidgetPosition should add `x`, `y`, and `xy` attributes",
        "duration": 58
      },
      "`move()` should move the widget to the new `xy`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`move()` should move the widget to the new `xy`",
        "duration": 27
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:52 PM"
  },
  {
    "name": "Widget",
    "passed": 149,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 149,
    "duration": 4754,
    "type": "report",
    "Widget Core Tests": {
      "name": "Widget Core Tests",
      "passed": 37,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 37,
      "duration": 1157,
      "type": "testcase",
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 29
      },
      "testInitState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitState",
        "duration": 19
      },
      "testNonRenderedStateUpdate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderedStateUpdate",
        "duration": 121
      },
      "testValidationReadonlyWriteonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidationReadonlyWriteonce",
        "duration": 54
      },
      "testStaticClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticClassNameGeneration",
        "duration": 0
      },
      "testInstanceClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstanceClassNameGeneration",
        "duration": 16
      },
      "testCssPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCssPrefix",
        "duration": 17
      },
      "testRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRender",
        "duration": 23
      },
      "testRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderTo",
        "duration": 20
      },
      "testBaseClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClassNames",
        "duration": 19
      },
      "testHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeight",
        "duration": 21
      },
      "testWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidth",
        "duration": 20
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 19
      },
      "testDisableEnable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisableEnable",
        "duration": 20
      },
      "testFocusBlur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusBlur",
        "duration": 19
      },
      "testTabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTabIndex",
        "duration": 20
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 19
      },
      "testVisible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testVisible",
        "duration": 21
      },
      "testShowHide": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShowHide",
        "duration": 21
      },
      "testBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBox",
        "duration": 20
      },
      "testContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBox",
        "duration": 23
      },
      "testBoundingBoxContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBox",
        "duration": 27
      },
      "testBoundingBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxRenderTo",
        "duration": 70
      },
      "testContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBoxRenderTo",
        "duration": 20
      },
      "testBoundingBoxContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBoxRenderTo",
        "duration": 31
      },
      "testSrcNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSrcNode",
        "duration": 21
      },
      "testGetByNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNode",
        "duration": 50
      },
      "testGetByNodeChangedId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNodeChangedId",
        "duration": 26
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 17
      },
      "testLoadingMarker": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLoadingMarker",
        "duration": 21
      },
      "testFocusOnChildFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnChildFocus",
        "duration": 31
      },
      "testFocusOnBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnBoundingBox",
        "duration": 22
      },
      "testMultiWidgetFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiWidgetFocus",
        "duration": 71
      },
      "testWidgetOnFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetOnFocus",
        "duration": 27
      },
      "testDetachFocusOnLastWidgetDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachFocusOnLastWidgetDestroy",
        "duration": 39
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 12
      },
      "testDeprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeprecated",
        "duration": 17
      }
    },
    "MyWidget Core Tests": {
      "name": "MyWidget Core Tests",
      "passed": 37,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 37,
      "duration": 1118,
      "type": "testcase",
      "testLoadingMarker": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLoadingMarker",
        "duration": 24
      },
      "testBaseClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClassNames",
        "duration": 22
      },
      "testCssPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCssPrefix",
        "duration": 12
      },
      "testInstanceClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstanceClassNameGeneration",
        "duration": 15
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 14
      },
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 14
      },
      "testInitState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitState",
        "duration": 16
      },
      "testNonRenderedStateUpdate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderedStateUpdate",
        "duration": 14
      },
      "testValidationReadonlyWriteonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidationReadonlyWriteonce",
        "duration": 23
      },
      "testStaticClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticClassNameGeneration",
        "duration": 1
      },
      "testRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRender",
        "duration": 18
      },
      "testRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderTo",
        "duration": 19
      },
      "testHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeight",
        "duration": 26
      },
      "testWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidth",
        "duration": 32
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 19
      },
      "testDisableEnable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisableEnable",
        "duration": 20
      },
      "testFocusBlur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusBlur",
        "duration": 22
      },
      "testTabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTabIndex",
        "duration": 23
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 20
      },
      "testVisible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testVisible",
        "duration": 21
      },
      "testShowHide": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShowHide",
        "duration": 20
      },
      "testBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBox",
        "duration": 20
      },
      "testContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBox",
        "duration": 24
      },
      "testBoundingBoxContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBox",
        "duration": 22
      },
      "testBoundingBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxRenderTo",
        "duration": 25
      },
      "testContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBoxRenderTo",
        "duration": 20
      },
      "testBoundingBoxContentBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBoxRenderTo",
        "duration": 21
      },
      "testSrcNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSrcNode",
        "duration": 21
      },
      "testGetByNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNode",
        "duration": 52
      },
      "testGetByNodeChangedId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNodeChangedId",
        "duration": 36
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 98
      },
      "testFocusOnChildFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnChildFocus",
        "duration": 33
      },
      "testFocusOnBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnBoundingBox",
        "duration": 24
      },
      "testMultiWidgetFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiWidgetFocus",
        "duration": 113
      },
      "testWidgetOnFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetOnFocus",
        "duration": 28
      },
      "testDetachFocusOnLastWidgetDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachFocusOnLastWidgetDestroy",
        "duration": 43
      },
      "testDeprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeprecated",
        "duration": 12
      }
    },
    "MySingleBoxWidget Core Tests": {
      "name": "MySingleBoxWidget Core Tests",
      "passed": 33,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 33,
      "duration": 681,
      "type": "testcase",
      "testNonRenderedStateUpdate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderedStateUpdate",
        "duration": 15
      },
      "testCssPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCssPrefix",
        "duration": 9
      },
      "testInstanceClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstanceClassNameGeneration",
        "duration": 8
      },
      "testLoadingMarker": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLoadingMarker",
        "duration": 19
      },
      "testBoundingBoxContentBoxAreTheSame": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxContentBoxAreTheSame",
        "duration": 14
      },
      "testBaseClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClassNames",
        "duration": 15
      },
      "testRender": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRender",
        "duration": 16
      },
      "testRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderTo",
        "duration": 17
      },
      "testBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBox",
        "duration": 19
      },
      "testBoundingBoxRenderTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxRenderTo",
        "duration": 14
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 10
      },
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 8
      },
      "testInitState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitState",
        "duration": 10
      },
      "testValidationReadonlyWriteonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidationReadonlyWriteonce",
        "duration": 28
      },
      "testStaticClassNameGeneration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticClassNameGeneration",
        "duration": 0
      },
      "testHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHeight",
        "duration": 17
      },
      "testWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidth",
        "duration": 15
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 15
      },
      "testDisableEnable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisableEnable",
        "duration": 17
      },
      "testFocusBlur": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusBlur",
        "duration": 17
      },
      "testTabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTabIndex",
        "duration": 17
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 16
      },
      "testVisible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testVisible",
        "duration": 17
      },
      "testShowHide": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testShowHide",
        "duration": 16
      },
      "testGetByNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNode",
        "duration": 46
      },
      "testGetByNodeChangedId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetByNodeChangedId",
        "duration": 25
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 16
      },
      "testFocusOnChildFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnChildFocus",
        "duration": 27
      },
      "testFocusOnBoundingBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusOnBoundingBox",
        "duration": 21
      },
      "testMultiWidgetFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiWidgetFocus",
        "duration": 65
      },
      "testWidgetOnFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetOnFocus",
        "duration": 22
      },
      "testDetachFocusOnLastWidgetDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDetachFocusOnLastWidgetDestroy",
        "duration": 29
      },
      "testDeprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeprecated",
        "duration": 11
      }
    },
    "Widget Events": {
      "name": "Widget Events",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 158,
      "type": "testcase",
      "testLifecycleEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleEvents",
        "duration": 21
      },
      "testLifecycleFireOnceEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleFireOnceEvents",
        "duration": 24
      },
      "testAttributeChangeEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAttributeChangeEvents",
        "duration": 39
      },
      "testContentUpdateEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentUpdateEvent",
        "duration": 19
      },
      "testHomogenousBubble": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHomogenousBubble",
        "duration": 43
      }
    },
    "MyWidget Event Tests": {
      "name": "MyWidget Event Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 240,
      "type": "testcase",
      "testLifecycleEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleEvents",
        "duration": 24
      },
      "testLifecycleFireOnceEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLifecycleFireOnceEvents",
        "duration": 28
      },
      "testAttributeChangeEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAttributeChangeEvents",
        "duration": 115
      },
      "testContentUpdateEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentUpdateEvent",
        "duration": 19
      },
      "testHomogenousBubble": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHomogenousBubble",
        "duration": 44
      }
    },
    "Widget Lifecycle": {
      "name": "Widget Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 51,
      "type": "testcase",
      "testNonRenderPhases": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNonRenderPhases",
        "duration": 15
      },
      "testAllPhases": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAllPhases",
        "duration": 26
      }
    },
    "Custom Widget": {
      "name": "Custom Widget",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 269,
      "type": "testcase",
      "testDefaultParentNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultParentNode",
        "duration": 27
      },
      "testDefaultParentNodeUsingRenderAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultParentNodeUsingRenderAttr",
        "duration": 22
      },
      "testBoundingBoxTemplate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBoundingBoxTemplate",
        "duration": 23
      },
      "testContentBoxTemplate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testContentBoxTemplate",
        "duration": 25
      },
      "testModifyAttr-Visible": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttr-Visible",
        "duration": 23
      },
      "testModifyAttr-Strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttr-Strings",
        "duration": 24
      },
      "testNewAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNewAttr",
        "duration": 18
      },
      "testHTMLParser": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParser",
        "duration": 18
      },
      "testHTMLParserWithContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParserWithContentBox",
        "duration": 20
      },
      "testHTMLParserWithNoSrcNodeOrContentBox": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParserWithNoSrcNodeOrContentBox",
        "duration": 19
      },
      "testHTMLParserWithEmptyConfig": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHTMLParserWithEmptyConfig",
        "duration": 17
      },
      "testValueFnNotCalledWhenHTMLParserValueFound": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValueFnNotCalledWhenHTMLParserValueFound",
        "duration": 19
      }
    },
    "getSkinName": {
      "name": "getSkinName",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 69,
      "type": "testcase",
      "getSkinName should return null if not rendered": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return null if not rendered",
        "duration": 12
      },
      "getSkinName should return name from BB if available": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return name from BB if available",
        "duration": 9
      },
      "getSkinName should return name from body or null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return name from body or null",
        "duration": 19
      },
      "getSkinName should return name from ancestor if both ancestor and body are classed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getSkinName should return name from ancestor if both ancestor and body are classed",
        "duration": 22
      }
    },
    "destroy": {
      "name": "destroy",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 102,
      "type": "testcase",
      "testRenderedDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderedDestroy",
        "duration": 17
      },
      "testRenderedDeepDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRenderedDeepDestroy",
        "duration": 23
      },
      "testUnrenderedDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnrenderedDestroy",
        "duration": 14
      },
      "testSingleBoxDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleBoxDestroy",
        "duration": 13
      },
      "testSingleBoxDeepDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleBoxDeepDestroy",
        "duration": 21
      }
    },
    "UI Events": {
      "name": "UI Events",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 325,
      "type": "testcase",
      "testSingleSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSimple",
        "duration": 26
      },
      "testSingleComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleComplex",
        "duration": 33
      },
      "testNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNested",
        "duration": 54
      },
      "testMultipleInstances": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultipleInstances",
        "duration": 173
      },
      "testPublishDefaultFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPublishDefaultFn",
        "duration": 25
      }
    },
    "clone": {
      "name": "clone",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 513,
      "type": "testcase",
      "testWidgetClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetClone",
        "duration": 177
      },
      "testWidgetHashClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWidgetHashClone",
        "duration": 187
      },
      "testBaseClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseClone",
        "duration": 58
      },
      "testBaseHashClone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBaseHashClone",
        "duration": 57
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:57 PM"
  },
  {
    "name": "Handlebars",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 19,
    "duration": 227,
    "type": "report",
    "Sanity": {
      "name": "Sanity",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 6,
      "duration": 84,
      "type": "testcase",
      "precompile() should precompile a template string to JS": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "precompile() should precompile a template string to JS"
      },
      "compile() should compile a template string to a function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compile() should compile a template string to a function",
        "duration": 27
      },
      "`0` should be considered a non-empty value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`0` should be considered a non-empty value",
        "duration": 2
      },
      "`false` should be considered empty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`false` should be considered empty",
        "duration": 4
      },
      "`null` should be considered empty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`null` should be considered empty",
        "duration": 2
      },
      "`undefined` should be considered empty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`undefined` should be considered empty",
        "duration": 3
      }
    },
    "YUI Extras": {
      "name": "YUI Extras",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 46,
      "type": "testcase",
      "isEmpty() should be true for `false`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for `false`",
        "duration": 1
      },
      "isEmpty() should be true for `null`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for `null`",
        "duration": 1
      },
      "isEmpty() should be true for `undefined`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for `undefined`",
        "duration": 1
      },
      "isEmpty() should be true for empty arrays": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be true for empty arrays",
        "duration": 1
      },
      "isEmpty() should be false for non-empty arrays": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for non-empty arrays",
        "duration": 1
      },
      "isEmpty() should be false for objects and functions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for objects and functions",
        "duration": 1
      },
      "isEmpty() should be false for all numbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for all numbers",
        "duration": 1
      },
      "isEmpty() should be false for all strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "isEmpty() should be false for all strings",
        "duration": 1
      },
      "render() should compile and render a template string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should compile and render a template string",
        "duration": 3
      },
      "malformed template strings should throw an exception": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "malformed template strings should throw an exception",
        "duration": 8
      }
    },
    "Escaping": {
      "name": "Escaping",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "HTML characters should be escaped by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HTML characters should be escaped by default",
        "duration": 2
      },
      "Existing &amp; entities should be double-escaped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Existing &amp; entities should be double-escaped",
        "duration": 2
      },
      "SafeStrings should not be escaped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "SafeStrings should not be escaped",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:57:58 PM"
  },
  {
    "name": "Event: ValueChange",
    "passed": 13,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 16,
    "duration": 2928,
    "type": "report",
    "Basic": {
      "name": "Basic",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 12,
      "duration": 2103,
      "type": "testcase",
      "valuechange event should start polling on mousedown and fire an event when the value changes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange event should start polling on mousedown and fire an event when the value changes",
        "duration": 85
      },
      "valuechange should support textareas as well": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should support textareas as well",
        "duration": 101
      },
      "valuechange should start polling on keydown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should start polling on keydown",
        "duration": 75
      },
      "valuechange should stop polling on blur": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "valuechange should stop polling on blur"
      },
      "valuechange should stop polling on blur - with blur()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should stop polling on blur - with blur()",
        "duration": 438
      },
      "valuechange should start polling on focus": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "valuechange should start polling on focus"
      },
      "valuechange should start polling on focus - with focus()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should start polling on focus - with focus()",
        "duration": 75
      },
      "valuechange should not report stale changes that occurred while a node was not focused": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "valuechange should not report stale changes that occurred while a node was not focused"
      },
      "valuechange should not report stale changes that occurred while a node was not focused - with focus() and blur()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should not report stale changes that occurred while a node was not focused - with focus() and blur()",
        "duration": 218
      },
      "valuechange should start polling on keyup for IME keystrokes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should start polling on keyup for IME keystrokes",
        "duration": 640
      },
      "valuechange should stop polling after timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valuechange should stop polling after timeout",
        "duration": 258
      },
      "valueChange should be an alias for valuechange for backcompat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "valueChange should be an alias for valuechange for backcompat",
        "duration": 87
      }
    },
    "Delegation": {
      "name": "Delegation",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 599,
      "type": "testcase",
      "delegation should be supported on input nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegation should be supported on input nodes",
        "duration": 116
      },
      "delegation should be supported on textareas": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegation should be supported on textareas",
        "duration": 100
      },
      "delegate filters should work properly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "delegate filters should work properly",
        "duration": 97
      },
      "multiple delegated handlers should be supported": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "multiple delegated handlers should be supported",
        "duration": 266
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:02 PM"
  },
  {
    "name": "Plugin Host",
    "passed": 19,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 19,
    "duration": 192,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 118,
      "type": "testcase",
      "testPlugDuringConstruction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugDuringConstruction",
        "duration": 11
      },
      "testPlugUsingPlug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugUsingPlug",
        "duration": 8
      },
      "testUnplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnplug",
        "duration": 6
      },
      "testUnplugNonExistant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnplugNonExistant",
        "duration": 3
      },
      "testUnplugPlug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUnplugPlug",
        "duration": 6
      },
      "testPluginHost": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginHost",
        "duration": 4
      },
      "testPlugFormatsDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsDefault",
        "duration": 3
      },
      "testPlugFormatsCustom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsCustom",
        "duration": 3
      },
      "testPlugFormatsCustomLiteral": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsCustomLiteral",
        "duration": 4
      },
      "testPlugFormatsArrayDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsArrayDefault",
        "duration": 4
      },
      "testPlugFormatsArrayCustom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsArrayCustom",
        "duration": 4
      },
      "testPlugFormatsArrayMixed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugFormatsArrayMixed",
        "duration": 5
      },
      "testPlugSamePluginTwice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugSamePluginTwice",
        "duration": 7
      },
      "testPlugSameNonAttrPluginTwice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPlugSameNonAttrPluginTwice",
        "duration": 2
      },
      "testPluginHostReference": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginHostReference",
        "duration": 3
      },
      "testPluginEventListeners": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginEventListeners",
        "duration": 8
      },
      "testPluginMethodInjection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPluginMethodInjection",
        "duration": 5
      },
      "testStaticPlug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStaticPlug",
        "duration": 14
      },
      "testHostDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHostDestroy",
        "duration": 8
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:03 PM"
  },
  {
    "name": "Y.Dial",
    "passed": 41,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 41,
    "duration": 4978,
    "type": "report",
    "Simple dial test": {
      "name": "Simple dial test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 27,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 23
      }
    },
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 1671,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 21
      },
      "test render(selector)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render(selector)",
        "duration": 379
      },
      "test render( node )": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render( node )",
        "duration": 296
      },
      "test render: selector attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: selector attrib in constructor",
        "duration": 297
      },
      "test render: node attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: node attrib in constructor",
        "duration": 286
      },
      "test render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render off DOM",
        "duration": 82
      },
      "test destroy() before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() before render",
        "duration": 21
      },
      "test destroy() after render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render off DOM",
        "duration": 136
      },
      "test destroy() after render to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render to DOM",
        "duration": 71
      }
    },
    "API": {
      "name": "API",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 468,
      "type": "testcase",
      "test getting a value from an angle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getting a value from an angle",
        "duration": 96
      },
      "test get('value')) and set('value', v) before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test get('value')) and set('value', v) before render",
        "duration": 22
      },
      "test get('value')) and set('value', v) after render() to hidden container": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test get('value')) and set('value', v) after render() to hidden container",
        "duration": 72
      },
      "test get('value')) and set('value', v) after render() to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test get('value')) and set('value', v) after render() to DOM",
        "duration": 85
      },
      "set('value', v) then render() should position _handleNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('value', v) then render() should position _handleNode",
        "duration": 74
      },
      "set('value', v) after render() should move the _handleNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('value', v) after render() should move the _handleNode",
        "duration": 83
      }
    },
    "Attributes": {
      "name": "Attributes",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 506,
      "type": "testcase",
      "test diameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test diameter",
        "duration": 82
      },
      "test handleDiameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test handleDiameter",
        "duration": 80
      },
      "test centerButtonDiameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test centerButtonDiameter",
        "duration": 89
      },
      "test handleDistance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test handleDistance",
        "duration": 88
      },
      "test increments and min max": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test increments and min max",
        "duration": 10
      },
      "test min, max, resetDial, incrMinor, decrMinor, incrMajor, decrMajor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test min, max, resetDial, incrMinor, decrMinor, incrMajor, decrMajor",
        "duration": 99
      },
      "test max": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test max",
        "duration": 6
      },
      "test value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test value",
        "duration": 8
      }
    },
    "String Changes After Render": {
      "name": "String Changes After Render",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 75,
      "type": "testcase",
      "test changing strings after rendering dial": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test changing strings after rendering dial",
        "duration": 72
      }
    },
    "International Strings": {
      "name": "International Strings",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 89,
      "type": "testcase",
      "test international strings from lang files": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test international strings from lang files",
        "duration": 86
      }
    },
    "Change Value by mousedown": {
      "name": "Change Value by mousedown",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 1801,
      "type": "testcase",
      "test md00 centerButton mousedown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md00 centerButton mousedown",
        "duration": 146
      },
      "test md01 min:0 max:100 -- drag past max\/max, then click 11 or 1 o'clock.": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md01 min:0 max:100 -- drag past max\/max, then click 11 or 1 o'clock.",
        "duration": 117
      },
      "test md02 mousedown Range = one revolution. Not at North": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md02 mousedown Range = one revolution. Not at North",
        "duration": 99
      },
      "test md03  min:0 max:100 -- mousedown on and off North. Range = one revolution": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md03  min:0 max:100 -- mousedown on and off North. Range = one revolution",
        "duration": 128
      },
      "test md04 min: 0, max: 200 -- drag past max\/max, then click 11 or 1 o'clock.": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md04 min: 0, max: 200 -- drag past max\/max, then click 11 or 1 o'clock.",
        "duration": 134
      },
      "test md05 min: 0, max: 200 -- click through two revolutions CW": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md05 min: 0, max: 200 -- click through two revolutions CW",
        "duration": 139
      },
      "test md06 min: -35, max: 35 -- drag past max\/max, then click in\/out of range also #2530597.": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md06 min: -35, max: 35 -- drag past max\/max, then click in\/out of range also #2530597.",
        "duration": 158
      },
      "test md07 min: 10, max: 25 -- mousedown text min max and opposite mid angle ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md07 min: 10, max: 25 -- mousedown text min max and opposite mid angle ",
        "duration": 91
      },
      "test md08 min: 75, max: 90 -- mousedown test min max and opposite mid angle ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md08 min: 75, max: 90 -- mousedown test min max and opposite mid angle ",
        "duration": 93
      },
      "test md09 min: 5, max: 80 -- mousedown text min max and opposite mid angle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md09 min: 5, max: 80 -- mousedown text min max and opposite mid angle",
        "duration": 107
      },
      "test md10 drag CW past max, then click 11 O'clock -- min: 0, max: 100": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md10 drag CW past max, then click 11 O'clock -- min: 0, max: 100",
        "duration": 142
      },
      "test md11 drag CCW past min, then click 1 O'clock -- min: 0, max: 100": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md11 drag CCW past min, then click 1 O'clock -- min: 0, max: 100",
        "duration": 87
      },
      "test md12 instantiate dial, increase margin, then click ring": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md12 instantiate dial, increase margin, then click ring",
        "duration": 97
      },
      "test md13 go past max more than maxTimesWrapped. ratchet to maxTimesWrapped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test md13 go past max more than maxTimesWrapped. ratchet to maxTimesWrapped",
        "duration": 119
      }
    },
    "Keyboard value changes": {
      "name": "Keyboard value changes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 252,
      "type": "testcase",
      "test changing dial value by keyboard": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test changing dial value by keyboard",
        "duration": 247
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:09 PM"
  },
  {
    "name": "Focus Manager",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 249,
    "type": "report",
    "FocusManager Tests": {
      "name": "FocusManager Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 217,
      "type": "testcase",
      "testActiveDescendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testActiveDescendant",
        "duration": 47
      },
      "testDescendants": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDescendants",
        "duration": 55
      },
      "testFocusedAttribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusedAttribute",
        "duration": 27
      },
      "testFocusClassAttribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocusClassAttribute",
        "duration": 25
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:11 PM"
  },
  {
    "name": "DataSchema",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 1423,
    "type": "report",
    "JSON Tests": {
      "name": "JSON Tests",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 50,
      "type": "testcase",
      "testJSONMeta": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONMeta",
        "duration": 1
      },
      "testJSONResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONResults",
        "duration": 1
      },
      "testJSONNested": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONNested",
        "duration": 0
      },
      "testJSONFieldLocators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONFieldLocators",
        "duration": 2
      },
      "testJSONNestedFieldLocators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONNestedFieldLocators",
        "duration": 1
      },
      "testJSONComplexLocators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONComplexLocators",
        "duration": 2
      },
      "test results as root array with no resultListLocator": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test results as root array with no resultListLocator",
        "duration": 1
      },
      "test nested locators failover to simple locators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nested locators failover to simple locators",
        "duration": 1
      },
      "test utf-8 characters in locators": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test utf-8 characters in locators",
        "duration": 1
      },
      "testJSONError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testJSONError",
        "duration": 1
      }
    },
    "XML Tests": {
      "name": "XML Tests",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 386,
      "type": "testcase",
      "testXMLMeta": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLMeta",
        "duration": 29
      },
      "testXMLResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLResults",
        "duration": 42
      },
      "testXMLXPathResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLXPathResults",
        "duration": 44
      },
      "testXMLComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLComplex",
        "duration": 75
      },
      "testXMLNestedSchema": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLNestedSchema",
        "duration": 124
      },
      "testXMLError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testXMLError",
        "duration": 5
      }
    },
    "HTML Tests": {
      "name": "HTML Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 767,
      "type": "testcase",
      "testSingleTbody": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleTbody",
        "duration": 190
      },
      "testMultipleTbody": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultipleTbody",
        "duration": 557
      }
    },
    "Array Tests": {
      "name": "Array Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 30,
      "type": "testcase",
      "testSimpleArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSimpleArrayResults",
        "duration": 1
      },
      "testNestedArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNestedArrayResults",
        "duration": 1
      },
      "testObjectArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testObjectArrayResults",
        "duration": 1
      },
      "testComboArrayResults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComboArrayResults",
        "duration": 1
      },
      "testArrayError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArrayError",
        "duration": 1
      }
    },
    "Text Tests": {
      "name": "Text Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "testTextResultsAndFields": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextResultsAndFields",
        "duration": 1
      },
      "testTextResultsOnly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextResultsOnly",
        "duration": 0
      },
      "testTextError": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTextError",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:13 PM"
  },
  {
    "name": "ImageLoader",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 1194,
    "type": "report",
    "Setting Background Urls": {
      "name": "Setting Background Urls",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 9,
      "type": "testcase",
      "testBgImg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBgImg",
        "duration": 7
      }
    },
    "Setting Source Urls": {
      "name": "Setting Source Urls",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 11,
      "type": "testcase",
      "testSrcImg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSrcImg",
        "duration": 6
      }
    },
    "Class Name Fetching": {
      "name": "Class Name Fetching",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 10,
      "type": "testcase",
      "testClassNames": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClassNames",
        "duration": 8
      }
    },
    "addTrigger test": {
      "name": "addTrigger test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 12,
      "type": "testcase",
      "testAddTrigger": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddTrigger",
        "duration": 7
      }
    },
    "custom trigger test": {
      "name": "custom trigger test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "testCustomTrigger": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomTrigger",
        "duration": 8
      }
    },
    "local object custom trigger test": {
      "name": "local object custom trigger test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 9,
      "type": "testcase",
      "testLocalObjectCustomTrigger": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLocalObjectCustomTrigger",
        "duration": 7
      }
    },
    "Image Sizing": {
      "name": "Image Sizing",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 18,
      "type": "testcase",
      "testImageVisibility": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testImageVisibility",
        "duration": 7
      },
      "testImageSizing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testImageSizing",
        "duration": 8
      }
    },
    "Trigger Removal for Competing Groups' Triggers": {
      "name": "Trigger Removal for Competing Groups' Triggers",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "testCompetingTriggers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCompetingTriggers",
        "duration": 12
      }
    },
    "Fold Conditional Loading": {
      "name": "Fold Conditional Loading",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 35,
      "type": "testcase",
      "testFoldChecks": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFoldChecks",
        "duration": 13
      }
    },
    "time limit test": {
      "name": "time limit test",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1042,
      "type": "testcase",
      "testTimeLimit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTimeLimit",
        "duration": 1031
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:15 PM"
  },
  {
    "name": "YUI: User Agent",
    "passed": 200,
    "failed": 0,
    "errors": 0,
    "ignored": 2,
    "total": 202,
    "duration": 1018,
    "type": "report",
    "Node.js": {
      "name": "Node.js",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 9,
      "type": "testcase",
      "test: Node.js version": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Node.js version",
        "duration": 1
      },
      "test: Node.js platform": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Node.js platform",
        "duration": 1
      }
    },
    "Touch Enabled Tests": {
      "name": "Touch Enabled Tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 2,
      "duration": 54,
      "type": "testcase",
      "test: ie10 Windows touchEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: ie10 Windows touchEnabled",
        "duration": 2
      },
      "test: iOS touchEnabled": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: iOS touchEnabled"
      }
    },
    "IE 10\/Windows 8 App": {
      "name": "IE 10\/Windows 8 App",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 2,
      "duration": 6,
      "type": "testcase",
      "test: win8 app": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: win8 app",
        "duration": 2
      },
      "test: not win8 app": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: not win8 app"
      }
    },
    "General": {
      "name": "General",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 10,
      "type": "testcase",
      "compareVersions() should compare major versions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should compare major versions",
        "duration": 2
      },
      "compareVersions() should compare major + minor versions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should compare major + minor versions",
        "duration": 1
      },
      "compareVersions() should compare major + minor + build versions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should compare major + minor + build versions",
        "duration": 1
      },
      "compareVersions() should handle null\/undefined\/empty input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "compareVersions() should handle null\/undefined\/empty input",
        "duration": 1
      }
    },
    "User Agent: Chrome": {
      "name": "User Agent: Chrome",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 65,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4",
        "duration": 3
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0",
        "duration": 1
      }
    },
    "User Agent: Chromium": {
      "name": "User Agent: Chromium",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 18,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2",
        "duration": 1
      }
    },
    "User Agent: Firefox": {
      "name": "User Agent: Firefox",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 68,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre",
        "duration": 1
      }
    },
    "User Agent: Firefox (BonEcho)": {
      "name": "User Agent: Firefox (BonEcho)",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0",
        "duration": 1
      }
    },
    "User Agent: Firefox (GranParadiso)": {
      "name": "User Agent: Firefox (GranParadiso)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8",
        "duration": 1
      }
    },
    "User Agent: Firefox (Lorentz)": {
      "name": "User Agent: Firefox (Lorentz)",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0",
        "duration": 1
      }
    },
    "User Agent: Firefox (Minefield)": {
      "name": "User Agent: Firefox (Minefield)",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre",
        "duration": 1
      }
    },
    "User Agent: Firefox (Namoroka)": {
      "name": "User Agent: Firefox (Namoroka)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre",
        "duration": 1
      }
    },
    "User Agent: Firefox (Shiretoko)": {
      "name": "User Agent: Firefox (Shiretoko)",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre",
        "duration": 1
      }
    },
    "User Agent: IE": {
      "name": "User Agent: IE",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 88,
      "type": "testcase",
      "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "duration": 1
      },
      "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)",
        "duration": 9
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)",
        "duration": 3
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)",
        "duration": 2
      }
    },
    "User Agent: Opera": {
      "name": "User Agent: Opera",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 67,
      "type": "testcase",
      "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00",
        "duration": 1
      },
      "test: Opera\/7.03 (Windows NT 5.0; U) [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/7.03 (Windows NT 5.0; U) [en]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24",
        "duration": 1
      },
      "test: Opera\/6.0 (Windows 2000; U) [fr]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/6.0 (Windows 2000; U) [fr]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]",
        "duration": 1
      },
      "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)",
        "duration": 1
      },
      "test: Opera\/5.11 (Windows 98; U) [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/5.11 (Windows 98; U) [en]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00",
        "duration": 1
      },
      "test: Opera\/9.02 (Windows XP; U; ru)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.02 (Windows XP; U; ru)",
        "duration": 1
      },
      "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]",
        "duration": 1
      }
    },
    "User Agent: Safari": {
      "name": "User Agent: Safari",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 38,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7",
        "duration": 1
      }
    },
    "User Agent: Android Webkit": {
      "name": "User Agent: Android Webkit",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1",
        "duration": 1
      }
    },
    "User Agent: IE Mobile": {
      "name": "User Agent: IE Mobile",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 28,
      "type": "testcase",
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)",
        "duration": 2
      },
      "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)",
        "duration": 2
      },
      "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)",
        "duration": 2
      }
    },
    "User Agent: Mobile Firefox": {
      "name": "User Agent: Mobile Firefox",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre",
        "duration": 2
      }
    },
    "User Agent: Mobile Safari": {
      "name": "User Agent: Mobile Safari",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 31,
      "type": "testcase",
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5",
        "duration": 2
      },
      "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+",
        "duration": 1
      }
    },
    "User Agent: Opera Mini": {
      "name": "User Agent: Opera Mini",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 25,
      "type": "testcase",
      "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30",
        "duration": 2
      },
      "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)",
        "duration": 2
      },
      "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)",
        "duration": 1
      },
      "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15",
        "duration": 1
      },
      "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0",
        "duration": 1
      },
      "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0",
        "duration": 2
      }
    },
    "User Agent: Opera Mobile": {
      "name": "User Agent: Opera Mobile",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 31,
      "type": "testcase",
      "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00",
        "duration": 2
      },
      "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5",
        "duration": 1
      },
      "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00",
        "duration": 1
      },
      "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00",
        "duration": 2
      },
      "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00",
        "duration": 2
      },
      "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)",
        "duration": 1
      },
      "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5",
        "duration": 1
      }
    },
    "User Agent: Palm Pre web browser": {
      "name": "User Agent: Palm Pre web browser",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0",
        "duration": 2
      }
    },
    "User Agent: YUI Internal": {
      "name": "User Agent: YUI Internal",
      "passed": 67,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 67,
      "duration": 271,
      "type": "testcase",
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
        "duration": 2
      },
      "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 2
      },
      "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 2
      },
      "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
        "duration": 1
      },
      "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
        "duration": 2
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5",
        "duration": 1
      },
      "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3",
        "duration": 2
      },
      "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
        "duration": 2
      },
      "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1",
        "duration": 1
      },
      "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7",
        "duration": 2
      },
      "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)",
        "duration": 1
      },
      "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:17 PM"
  },
  {
    "name": "YUI: Object",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 317,
    "type": "report",
    "Core": {
      "name": "Core",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 242,
      "type": "testcase",
      "test_create": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create",
        "duration": 1
      },
      "test_each": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_each",
        "duration": 1
      },
      "test_getValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getValue",
        "duration": 2
      },
      "test_hasKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_hasKey",
        "duration": 1
      },
      "test_hasValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_hasValue",
        "duration": 1
      },
      "test_isEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_isEmpty",
        "duration": 1
      },
      "test: isEmpty() should work on non-objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: isEmpty() should work on non-objects",
        "duration": 1
      },
      "test_keys": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_keys",
        "duration": 1
      },
      "test_keys_dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_keys_dom",
        "duration": 1
      },
      "test_owns": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_owns",
        "duration": 0
      },
      "test_setValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_setValue",
        "duration": 1
      },
      "test_size": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_size",
        "duration": 1
      },
      "size() should return 0 for non-objects [legacy behavior]": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "size() should return 0 for non-objects [legacy behavior]",
        "duration": 173
      },
      "test_some": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_some",
        "duration": 1
      },
      "test_values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_values",
        "duration": 0
      },
      "test_people_messing_up_object_prototype": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_people_messing_up_object_prototype",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:18 PM"
  },
  {
    "name": "YUI: Lang",
    "passed": 17,
    "failed": 4,
    "errors": 0,
    "ignored": 0,
    "total": 21,
    "duration": 231,
    "type": "report",
    "Lang tests": {
      "name": "Lang tests",
      "passed": 17,
      "failed": 4,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 155,
      "type": "testcase",
      "_isNative() should return true for native functions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_isNative() should return true for native functions",
        "duration": 1
      },
      "_isNative() should return false for non-native functions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_isNative() should return false for non-native functions",
        "duration": 1
      },
      "test_is_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_array",
        "duration": 1
      },
      "test_is_array_dom": {
        "result": "fail",
        "message": "Cross frame array failure\nExpected: true (boolean)\nActual: false (boolean)",
        "type": "test",
        "name": "test_is_array_dom",
        "duration": 6
      },
      "test_is_boolean": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_boolean",
        "duration": 1
      },
      "test_is_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_function",
        "duration": 1
      },
      "test_is_function_dom": {
        "result": "fail",
        "message": "Cross frame function failure\nExpected: true (boolean)\nActual: false (boolean)",
        "type": "test",
        "name": "test_is_function_dom",
        "duration": 35
      },
      "test_is_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_null",
        "duration": 1
      },
      "test_is_number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_number",
        "duration": 1
      },
      "test_is_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_object",
        "duration": 2
      },
      "test_is_object_dom": {
        "result": "fail",
        "message": "Cross frame object failure\nExpected: true (boolean)\nActual: false (boolean)",
        "type": "test",
        "name": "test_is_object_dom",
        "duration": 26
      },
      "test_is_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_string",
        "duration": 2
      },
      "test_is_undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_undefined",
        "duration": 1
      },
      "test_trim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_trim",
        "duration": 1
      },
      "test_trim_left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_trim_left",
        "duration": 1
      },
      "test_trim_right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_trim_right",
        "duration": 1
      },
      "test_is_value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_value",
        "duration": 1
      },
      "test_is_date": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_is_date",
        "duration": 1
      },
      "test_is_date_dom": {
        "result": "fail",
        "message": "Cross frame date should be true\nExpected: true (boolean)\nActual: false (boolean)",
        "type": "test",
        "name": "test_is_date_dom",
        "duration": 20
      },
      "test_now": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_now",
        "duration": 1
      },
      "test_sub": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_sub",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:20 PM"
  },
  {
    "name": "YUI: All",
    "passed": 302,
    "failed": 4,
    "errors": 0,
    "ignored": 5,
    "total": 311,
    "duration": 10104,
    "type": "report",
    "YUI: User Agent": {
      "name": "YUI: User Agent",
      "passed": 199,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 202,
      "duration": 949,
      "type": "testsuite",
      "Node.js": {
        "name": "Node.js",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 2,
        "duration": 26,
        "type": "testcase",
        "test: Node.js version": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Node.js version",
          "duration": 7
        },
        "test: Node.js platform": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: Node.js platform"
        }
      },
      "Touch Enabled Tests": {
        "name": "Touch Enabled Tests",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "test: ie10 Windows touchEnabled": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: ie10 Windows touchEnabled",
          "duration": 1
        },
        "test: iOS touchEnabled": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: iOS touchEnabled"
        }
      },
      "IE 10\/Windows 8 App": {
        "name": "IE 10\/Windows 8 App",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 2,
        "duration": 8,
        "type": "testcase",
        "test: win8 app": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: win8 app",
          "duration": 1
        },
        "test: not win8 app": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: not win8 app"
        }
      },
      "General": {
        "name": "General",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 14,
        "type": "testcase",
        "compareVersions() should compare major versions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should compare major versions",
          "duration": 2
        },
        "compareVersions() should compare major + minor versions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should compare major + minor versions",
          "duration": 2
        },
        "compareVersions() should compare major + minor + build versions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should compare major + minor + build versions",
          "duration": 1
        },
        "compareVersions() should handle null\/undefined\/empty input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareVersions() should handle null\/undefined\/empty input",
          "duration": 2
        }
      },
      "User Agent: Chrome": {
        "name": "User Agent: Chrome",
        "passed": 19,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 19,
        "duration": 77,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/7.0.540.0 Safari\/534.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.36 Safari\/525.19",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US)  AppleWebKit\/534.13 (KHTML, like Gecko) Chrome\/9.0.597.0 Safari\/534.13",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Chrome\/4.0.223.3 Safari\/532.2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.0) AppleWebKit\/535.1 (KHTML, like Gecko) Chrome\/14.0.792.0 Safari\/535.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Windows NT 6; en-US) AppleWebKit\/534.12 (KHTML, like Gecko) Chrome\/9.0.587.0 Safari\/534.12",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/530.5 (KHTML, like Gecko) Chrome\/2.0.173.1 Safari\/530.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.4 (KHTML, like Gecko) Chrome\/6.0.481.0 Safari\/534.4",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/534.16 (KHTML, like Gecko) Chrome\/10.0.648.11 Safari\/534.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.2 (KHTML, like Gecko) Chrome\/15.0.872.0 Safari\/535.2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/540.0 (KHTML,like Gecko) Chrome\/9.1.0.0 Safari\/540.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/4.0.201.1 Safari\/532.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/525.19 (KHTML, like Gecko) Chrome\/1.0.154.53 Safari\/525.19",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Chrome\/8.0.558.0 Safari\/534.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.36 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X; en-US) AppleWebKit\/533.4 (KHTML, like Gecko) Chrome\/5.0.375.86 Safari\/533.4",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/534.20 (KHTML, like Gecko) Chrome\/11.0.672.2 Safari\/534.20",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit\/534.14 (KHTML, like Gecko) Chrome\/9.0.600.0 Safari\/534.14",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit\/532.0 (KHTML, like Gecko) Chrome\/3.0.195.27 Safari\/532.0",
          "duration": 1
        }
      },
      "User Agent: Chromium": {
        "name": "User Agent: Chromium",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 64,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.1 (KHTML, like Gecko) Ubuntu\/10.04 Chromium\/14.0.813.0 Chrome\/14.0.813.0 Safari\/535.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux i686) AppleWebKit\/535.7 (KHTML, like Gecko) Ubuntu\/11.10 Chromium\/16.0.912.21 Chrome\/16.0.912.21 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/534.30 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/12.0.742.112 Chrome\/12.0.742.112 Safari\/534.30",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit\/534.10 (KHTML, like Gecko) Ubuntu\/10.10 Chromium\/8.0.552.237 Chrome\/8.0.552.237 Safari\/534.10",
          "duration": 2
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/535.2 (KHTML, like Gecko) Ubuntu\/11.04 Chromium\/15.0.871.0 Chrome\/15.0.871.0 Safari\/535.2",
          "duration": 1
        }
      },
      "User Agent: Firefox": {
        "name": "User Agent: Firefox",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 71,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b9pre) Gecko\/20101228 Firefox\/4.0b9pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3) Gecko\/20090305 Firefox\/3.1b3 GTB5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.1.12) Gecko\/20080214 Firefox\/2.0.0.12",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko\/20101114 Firefox\/4.0b8pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux amd64; rv:5.0) Gecko\/20100101 Firefox\/5.0 (Debian)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; es-ES; rv:1.8.0.3) Gecko\/20060426 Firefox\/1.5.0.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.5; ko; rv:1.9.1b2) Gecko\/20081201 Firefox\/3.1b2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; Windows NT 6.1; rv:2.0b2) Gecko\/20100720 Firefox\/4.0b2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b4) Gecko\/20100818 Firefox\/4.0b4",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs; rv:1.9.0.8) Gecko\/2009032609 Firefox\/3.0.8",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko\/20110613 Firefox\/6.0a2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.2) Gecko\/20100308 Ubuntu\/10.04 (lucid) Firefox\/3.6 GTB7.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; WinNT4.0; en-US; rv:1.7.9) Gecko\/20050711 Firefox\/1.0.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9b5) Gecko\/2008032620 Firefox\/3.0b5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:2.0b7) Gecko\/20101111 Firefox\/4.0b7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko\/20110111 Firefox\/4.0b9pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:2.2a1pre) Gecko\/20110324 Firefox\/4.2a1pre",
          "duration": 1
        }
      },
      "User Agent: Firefox (BonEcho)": {
        "name": "User Agent: Firefox (BonEcho)",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko\/20071113 BonEcho\/2.0.0.9",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko\/20061026 BonEcho\/2.0",
          "duration": 1
        }
      },
      "User Agent: Firefox (GranParadiso)": {
        "name": "User Agent: Firefox (GranParadiso)",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 7,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko\/2009033017 GranParadiso\/3.0.8",
          "duration": 1
        }
      },
      "User Agent: Firefox (Lorentz)": {
        "name": "User Agent: Firefox (Lorentz)",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 6,
        "type": "testcase",
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko\/20100411 Lorentz\/3.6.3 GTB7.0",
          "duration": 1
        }
      },
      "User Agent: Firefox (Minefield)": {
        "name": "User Agent: Firefox (Minefield)",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; it; rv:1.9.3a1pre) Gecko\/20091019 Minefield\/3.7a1pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.3a4pre) Gecko\/20100402 Minefield\/3.7a4pre",
          "duration": 1
        }
      },
      "User Agent: Firefox (Namoroka)": {
        "name": "User Agent: Firefox (Namoroka)",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 14,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2a1) Gecko\/20090806 Namoroka\/3.6a1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2a2pre) Gecko\/20090912 Namoroka\/3.6a2pre (.NET CLR 3.5.30729)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2a2pre) Gecko\/20090901 Ubuntu\/9.10 (karmic) Namoroka\/3.6a2pre",
          "duration": 1
        }
      },
      "User Agent: Firefox (Shiretoko)": {
        "name": "User Agent: Firefox (Shiretoko)",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1b3pre) Gecko\/20090109 Shiretoko\/3.1b3pre",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1b4pre) Gecko\/20090311 Shiretoko\/3.1b4pre",
          "duration": 1
        }
      },
      "User Agent: IE": {
        "name": "User Agent: IE",
        "passed": 16,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 16,
        "duration": 67,
        "type": "testcase",
        "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (Windows; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
          "duration": 1
        },
        "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/2.0 (compatible; MSIE 4.0; Windows 98)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; InfoPath.2; .NET CLR 3.5.21022; .NET CLR 3.5.30729; MS-RTC LM 8; OfficeLiveConnector.1.4; OfficeLivePatch.1.3; .NET CLR 3.0.30729)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (Mozilla\/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident\/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.01; Windows NT)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.0.3705; .NET CLR 1.1.4322; Media Center PC 4.0; .NET CLR 2.0.50727)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0b1; Mac_PowerPC)",
          "duration": 2
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT;)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident\/4.0; GTB5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506; InfoPath.2; OfficeLiveConnector.1.3; OfficeLivePatch.0.0)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.23; Mac_PowerPC)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6; Ant.com Toolbar 1.6; MSIECrawler)",
          "duration": 2
        }
      },
      "User Agent: Opera": {
        "name": "User Agent: Opera",
        "passed": 16,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 16,
        "duration": 65,
        "type": "testcase",
        "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (X11; Linux i686; U; ru) Presto\/2.8.131 Version\/11.11",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 5.1; U; cs) Presto\/2.2.15 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/7.03 (Windows NT 5.0; U) [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/7.03 (Windows NT 5.0; U) [en]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.1; U; zh-tw) Presto\/2.7.62 Version\/11.01",
          "duration": 2
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.24",
          "duration": 1
        },
        "test: Opera\/6.0 (Windows 2000; U) [fr]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/6.0 (Windows 2000; U) [fr]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.1; U; sv) Presto\/2.7.62 Version\/11.01",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 7.10 [en]",
          "duration": 1
        },
        "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.51 (Macintosh; Intel Mac OS X; U; en)",
          "duration": 2
        },
        "test: Opera\/5.11 (Windows 98; U) [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/5.11 (Windows 98; U) [en]",
          "duration": 2
        },
        "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.0; U; en) Presto\/2.8.99 Version\/11.10",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows NT 4.0) Opera 6.01 [en]",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 6.1; U; en-GB) Presto\/2.7.62 Version\/11.00",
          "duration": 1
        },
        "test: Opera\/9.02 (Windows XP; U; ru)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.02 (Windows XP; U; ru)",
          "duration": 2
        },
        "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.70 (Linux i686 ; U; en) Presto\/2.2.1",
          "duration": 2
        },
        "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 5.0; Windows 98) Opera 5.12 [en]",
          "duration": 1
        }
      },
      "User Agent: Safari": {
        "name": "User Agent: Safari",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 38,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit\/420+ (KHTML, like Gecko) Safari\/419.3",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit\/312.8 (KHTML, like Gecko) Safari\/312.6",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit\/533.20.25 (KHTML, like Gecko) Version\/5.0.4 Safari\/533.20.27",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X 10_5_6; it-it) AppleWebKit\/528.16 (KHTML, like Gecko) Version\/4.0 Safari\/528.16",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit\/533.18.1 (KHTML, like Gecko) Version\/5.0.2 Safari\/533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; cs-CZ) AppleWebKit\/523.15 (KHTML, like Gecko) Version\/3.0 Safari\/523.15",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 6.1; sv-SE) AppleWebKit\/533.19.4 (KHTML, like Gecko) Version\/5.0.3 Safari\/533.19.4",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit\/125.2 (KHTML, like Gecko) Safari\/125.7",
          "duration": 1
        }
      },
      "User Agent: Android Webkit": {
        "name": "User Agent: Android Webkit",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 11,
        "type": "testcase",
        "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.1-update1; en-au; HTC_Desire_A8183 V1.16.841.1 Build\/ERE27) AppleWebKit\/530.17 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/530.17",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 1.5; de-de; HTC Magic Build\/CRB17) AppleWebKit\/528.5+ (KHTML, like Gecko) Version\/3.1.2 Mobile Safari\/525.20.1",
          "duration": 2
        }
      },
      "User Agent: IE Mobile": {
        "name": "User Agent: IE Mobile",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 25,
        "type": "testcase",
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0)",
          "duration": 1
        },
        "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: HTC_P4550\/TYTN_II Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; XBLWP7; ZuneWP7)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.11) 320x240; VZW; Motorola-Q9c; Windows Mobile 6.1 Standard",
          "duration": 2
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0; XBLWP7; ZuneWP7)",
          "duration": 2
        },
        "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: 8900a\/1.2 Mozilla\/4.0 (compatible; MSIE 6.0; Windows CE; IEMobile 7.6)",
          "duration": 1
        }
      },
      "User Agent: Mobile Firefox": {
        "name": "User Agent: Mobile Firefox",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 13,
        "type": "testcase",
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1b2pre) Gecko\/20081015 Fennec\/1.0a1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:9.0) Gecko\/20111216 Firefox\/9.0 Fennec\/9.0",
          "duration": 2
        },
        "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux armv7l; en-US; rv:1.9.2a1pre) Gecko\/20090322 Fennec\/1.0b2pre",
          "duration": 2
        }
      },
      "User Agent: Mobile Safari": {
        "name": "User Agent: Mobile Safari",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 30,
        "type": "testcase",
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; ja-jp) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
          "duration": 2
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit\/532.9 (KHTML, like Gecko) Version\/4.0.5 Mobile\/8A293 Safari\/6531.22.7",
          "duration": 2
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; es-es) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B360 Safari\/531.21.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; de-de) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J2 Safari\/6533.18.5",
          "duration": 1
        },
        "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: NokiaC3-00\/5.0 (04.60) Profile\/MIDP-2.1 Configuration\/CLDC-1.1 Mozilla\/5.0 AppleWebKit\/420+ (KHTML, like Gecko) Safari\/420+",
          "duration": 1
        }
      },
      "User Agent: Opera Mini": {
        "name": "User Agent: Opera Mini",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 25,
        "type": "testcase",
        "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/10.61 (J2ME\/MIDP; Opera Mini\/5.1.21219\/19.999; en-US; rv:1.9.3a5) WebKit\/534.5 Presto\/2.6.30",
          "duration": 2
        },
        "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/3.1.9427\/1724; nb; U; ssr)",
          "duration": 1
        },
        "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/8.01 (J2ME\/MIDP; Opera Mini\/1.1.3475\/hifi\/tmobile\/cz; SonyEricsson W880i; cs; U; ssr)",
          "duration": 1
        },
        "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.0.0176\/764; U; en) Presto\/2.4.15",
          "duration": 1
        },
        "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/4.2.14320\/554; U; cs) Presto\/2.2.0",
          "duration": 2
        },
        "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.60 (J2ME\/MIDP; Opera Mini\/5.0.15650\/960; U; en) Presto\/2.2.0",
          "duration": 2
        }
      },
      "User Agent: Opera Mobile": {
        "name": "User Agent: Opera Mobile",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 31,
        "type": "testcase",
        "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/499; U; es-ES) Presto\/2.4.18 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Android 2.2; Opera Mobi\/-2118645896; U; pl) Presto\/2.7.60 Version\/10.5",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows Mobile; WCE; Opera Mobi\/WMD-50430; U; en-GB) Presto\/2.4.13 Version\/10.00",
          "duration": 1
        },
        "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Android; Linux; Opera Mobi\/49; U; en) Presto\/2.4.18 Version\/10.00",
          "duration": 2
        },
        "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (S60; SymbOS; Opera Mobi\/352; U; de) Presto\/2.4.15 Version\/10.00",
          "duration": 1
        },
        "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: HTC_HD2_T9193 Opera\/9.7 (Windows NT 5.1; U; en) V1.49.841.1 (71528)",
          "duration": 1
        },
        "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: SAMSUNG-GT-i8000\/1.0 (Windows CE; Opera Mobi; U; en) Opera 9.5",
          "duration": 1
        }
      },
      "User Agent: Palm Pre web browser": {
        "name": "User Agent: Palm Pre web browser",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 5,
        "type": "testcase",
        "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (webOS\/1.0; U; en-US) AppleWebKit\/525.27.1 (KHTML, like Gecko) Version\/1.0 Safari\/525.27.1 Pre\/1.0",
          "duration": 2
        }
      },
      "User Agent: YUI Internal": {
        "name": "User Agent: YUI Internal",
        "passed": 67,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 67,
        "duration": 268,
        "type": "testcase",
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; CrOS i686 1625.0.0) AppleWebKit\/535.19 (KHTML, like Gecko) Chrome\/18.0.1017.3 Safari\/535.19",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit\/531.21.10 (KHTML, like Gecko) Version\/4.0.4 Mobile\/7B367 Safari\/531.21.10",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/534.30 (KHTML, like Gecko) Version\/4.0 Safari\/534.30",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Android; Linux armv7l; rv:6.0.2) Gecko\/20110902 Firefox\/6.0.1 Fennec\/6.0.2",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2.3; en-us; Droid Build\/FRK76) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; CPU OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A405 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (hp-tablet; Linux; hpwOS\/3.0.5; U; en-US) AppleWebKit\/534.6 (KHTML, like Gecko) wOSBrowser\/234.83 Safari\/534.6 TouchPad\/1.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident\/5.0; IEMobile\/9.0; HTC; Mazaa)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (webOS\/2.1.0; U; en-US) AppleWebKit\/532.2 (KHTML, like Gecko) Version\/1.0 Safari\/532.2 Pre\/1.2",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:6.0.2) Gecko\/20100101 Firefox\/6.0.2",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 5.1)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.9) Gecko\/20100824 Firefox\/3.6.9",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.50 (KHTML, like Gecko) Version\/5.1 Safari\/534.50",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\/4.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Windows NT 5.1; U; Edition United States Local; en) Presto\/2.9.168 Version\/11.51",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:2.0.1) Gecko\/20100101 Firefox\/4.0.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident\/5.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:9.0) Gecko\/20100101 Firefox\/9.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1) AppleWebKit\/534.52.7 (KHTML, like Gecko) Version\/5.1.2 Safari\/534.52.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=true",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.16 (KHTML, like Gecko) Version\/5.0 Safari\/533.16 Silk-Accelerated=false",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=false",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.4; en-us; Silk\/1.0.13.81_10003810) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1 Silk-Accelerated=true",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8C148 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build\/GRK39F) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8L1 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A334 Safari\/7534.48.3",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:9.0.1) Gecko\/20100101 Firefox\/9.0.1",
          "duration": 1
        },
        "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (Macintosh; Intel Mac OS X 10.7.2; U; en) Presto\/2.10.229 Version\/11.60",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; CrOS i686 1193.194.0) AppleWebKit\/535.7 (KHTML, like Gecko) Chrome\/16.0.912.77 Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)",
          "duration": 1
        },
        "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; U; Linux i686; en-US) AppleWebKit\/533.3 (KHTML, like Gecko) Arora\/0.11.0 Safari\/533.3",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (X11; Linux i686; rv:5.0) Gecko\/20100101 Firefox\/5.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 4_2_6 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8E200 Safari\/6533.18.5",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows NT 5.1; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 2
        },
        "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit\/533.17.9 (KHTML, like Gecko) Version\/5.0.2 Mobile\/8J3 Safari\/6533.18.5",
          "duration": 2
        },
        "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Version\/5.1 Mobile\/9A406 Safari\/7534.48.3",
          "duration": 1
        },
        "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Opera\/9.80 (iPhone; Opera Mini\/5.19802\/26.1411; U; en) Presto\/2.8.119 Version\/10.54",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 3_1_3 like Mac OS X; en-us) AppleWebKit\/528.18 (KHTML, like Gecko) Version\/4.0 Mobile\/7E18 Safari\/528.16",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.3.3; en-us; DROID Pro Build\/4.5.1-110-VNS-22) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 2
        },
        "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.7; rv:10.0) Gecko\/20100101 Firefox\/10.0",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 2.2; en-us; SCH-I800 Build\/FROYO) AppleWebKit\/533.1 (KHTML, like Gecko) Version\/4.0 Mobile Safari\/533.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.7; en-US; rv:1.9.2.22) Gecko\/20110902 Firefox\/3.6.22",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0; en-us; Xoom Build\/HRI39) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
          "duration": 2
        },
        "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Envjs\/1.6 (Rhino; U; Mac OS X x86_64 10.5.8; en-US; rv:1.7.0.rc2) Resig\/20070309 PilotFish\/1.2.0.XX",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Windows; U; cs-CZ) AppleWebKit\/526.9+ (KHTML, like Gecko) AdobeAIR\/1.5.1",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 3.0.1; en-us; Xoom Build\/HRI66) AppleWebKit\/534.13 (KHTML, like Gecko) Version\/4.0 Safari\/534.13",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Linux; U; Android 4.0.3; en-us; Xoom Build\/IML77) AppleWebKit\/535.7 (KHTML, like Gecko) CrMo\/16.0.912.77  Safari\/535.7",
          "duration": 1
        },
        "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (Unknown; Linux x86_64) AppleWebKit\/534.34 (KHTML, like Gecko) PhantomJS\/1.5.0 Safari\/534.34",
          "duration": 2
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident\/6.0; .NET4.0E; .NET4.0C)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident\/6.0; MSAppHost\/1.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (compatible; MSIE 10.0; Windows NT 6.2; ARM; Trident\/6.0)",
          "duration": 1
        },
        "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: Mozilla\/5.0 (iPhone; U; CPU iPhone OS 6_0 like Mac OS X; en-us) AppleWebKit\/534.46.0 (KHTML, like Gecko) CriOS\/19.0.1084.60 Mobile\/10A5338d Safari\/7534.48.3",
          "duration": 2
        }
      }
    },
    "YUI: All": {
      "name": "YUI: All",
      "passed": 50,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 52,
      "duration": 8782,
      "type": "testsuite",
      "Core tests": {
        "name": "Core tests",
        "passed": 32,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 34,
        "duration": 7032,
        "type": "testcase",
        "test: double skin loading from seed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: double skin loading from seed",
          "duration": 43
        },
        "test: pattern requires order": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test: pattern requires order"
        },
        "cached functions should execute only once per input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "cached functions should execute only once per input",
          "duration": 1
        },
        "getLocation() should return the location object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getLocation() should return the location object",
          "duration": 0
        },
        "getLocation() should return `null` when executing in node.js": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "getLocation() should return `null` when executing in node.js"
        },
        "test_cached_undefined_null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_cached_undefined_null",
          "duration": 1
        },
        "test_guid": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_guid",
          "duration": 14
        },
        "test_stamp": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_stamp",
          "duration": 24
        },
        "test_use_array": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_use_array",
          "duration": 23
        },
        "test_use_strings": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_use_strings",
          "duration": 17
        },
        "test_one_submodule": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_one_submodule",
          "duration": 22
        },
        "test_base_path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_base_path",
          "duration": 2
        },
        "test_log_params": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_log_params",
          "duration": 13
        },
        "test_global_apply_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_global_apply_config",
          "duration": 1
        },
        "test_old_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_old_config",
          "duration": 13
        },
        "test_applyTo": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_applyTo",
          "duration": 12
        },
        "test_global_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_global_config",
          "duration": 27
        },
        "test_multiple_ua": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multiple_ua",
          "duration": 25
        },
        "test_conditional": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_conditional",
          "duration": 18
        },
        "test_missed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_missed",
          "duration": 18
        },
        "test_attach_error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_attach_error",
          "duration": 22
        },
        "test_attach_error_silent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_attach_error_silent",
          "duration": 22
        },
        "test_attach_error_errFn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_attach_error_errFn",
          "duration": 27
        },
        "test_dump_core": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_dump_core",
          "duration": 14
        },
        "test_destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_destroy",
          "duration": 14
        },
        "test_features": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_features",
          "duration": 15
        },
        "test: requirements defined in external module": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: requirements defined in external module",
          "duration": 143
        },
        "test: domready delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: domready delay",
          "duration": 85
        },
        "test: window.onload delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: window.onload delay",
          "duration": 77
        },
        "test: available delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: available delay",
          "duration": 3023
        },
        "test: contentready delay": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: contentready delay",
          "duration": 3027
        },
        "status should be true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "status should be true",
          "duration": 79
        },
        "status should be false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "status should be false",
          "duration": 19
        },
        "test: fetch with external dependencies redefined in external file": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: fetch with external dependencies redefined in external file",
          "duration": 114
        }
      },
      "Config tests": {
        "name": "Config tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 56,
        "type": "testcase",
        "test: YUI_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: YUI_config",
          "duration": 17
        },
        "test: local config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: local config",
          "duration": 1
        },
        "test_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_config",
          "duration": 35
        }
      },
      "Later tests": {
        "name": "Later tests",
        "passed": 12,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 12,
        "duration": 1658,
        "type": "testcase",
        "test later(10, null, callback)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback)",
          "duration": 180
        },
        "test later(10, obj, callback)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, callback)",
          "duration": 180
        },
        "test later(10, obj, methodString)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, methodString)",
          "duration": 181
        },
        "test later(10, null, callback, argArray)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback, argArray)",
          "duration": 180
        },
        "test later(0, null, callback, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(0, null, callback, obj)",
          "duration": 17
        },
        "test later(o, null, setTimeout, [fn, 0])": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(o, null, setTimeout, [fn, 0])",
          "duration": 19
        },
        "test cancel later(100, null, callback)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test cancel later(100, null, callback)",
          "duration": 321
        },
        "test later(10, null, callback, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback, null, true)",
          "duration": 42
        },
        "test later(10, obj, callback, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, callback, null, true)",
          "duration": 26
        },
        "test later(10, obj, methodString, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, obj, methodString, null, true)",
          "duration": 26
        },
        "test later(10, null, callback, argArray, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test later(10, null, callback, argArray, true)",
          "duration": 23
        },
        "test cancel later(10, null, callback, null, true)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test cancel later(10, null, callback, null, true)",
          "duration": 345
        }
      },
      "Namespace tests": {
        "name": "Namespace tests",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 26,
        "type": "testcase",
        "test_create_namespace": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_create_namespace",
          "duration": 2
        },
        "test_multi_args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multi_args",
          "duration": 2
        },
        "test_multi_args_dotted": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multi_args_dotted",
          "duration": 2
        }
      }
    },
    "YUI: Array": {
      "name": "YUI: Array",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 88,
      "type": "testsuite",
      "Array tests": {
        "name": "Array tests",
        "passed": 20,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 20,
        "duration": 84,
        "type": "testcase",
        "testArray": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testArray",
          "duration": 1
        },
        "testDedupe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDedupe",
          "duration": 2
        },
        "dedupe() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "dedupe() should work on array-like objects",
          "duration": 2
        },
        "testEach": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testEach",
          "duration": 1
        },
        "each() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should handle sparse arrays correctly",
          "duration": 1
        },
        "each() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should work on array-like objects",
          "duration": 1
        },
        "testHash": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testHash",
          "duration": 1
        },
        "hash() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hash() should handle sparse arrays correctly",
          "duration": 1
        },
        "hash() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hash() should work on array-like objects",
          "duration": 1
        },
        "testIndexOf": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testIndexOf",
          "duration": 1
        },
        "indexOf() should support an ES5-compatible fromIndex arg": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should support an ES5-compatible fromIndex arg",
          "duration": 1
        },
        "indexOf() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should handle sparse arrays correctly",
          "duration": 1
        },
        "indexOf() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should work on array-like objects",
          "duration": 1
        },
        "testNumericSort": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testNumericSort",
          "duration": 1
        },
        "testSome": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testSome",
          "duration": 1
        },
        "some() should handle sparse arrays correctly": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should handle sparse arrays correctly",
          "duration": 1
        },
        "some() should work on array-like objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should work on array-like objects",
          "duration": 1
        },
        "test Array.test": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Array.test",
          "duration": 1
        },
        "test Array.test with window": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Array.test with window",
          "duration": 1
        },
        "test Array.test with dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Array.test with dom",
          "duration": 1
        }
      }
    },
    "YUI: Object": {
      "name": "YUI: Object",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 96,
      "type": "testsuite",
      "Core": {
        "name": "Core",
        "passed": 16,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 16,
        "duration": 94,
        "type": "testcase",
        "test_create": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_create",
          "duration": 1
        },
        "test_each": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_each",
          "duration": 1
        },
        "test_getValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getValue",
          "duration": 1
        },
        "test_hasKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_hasKey",
          "duration": 1
        },
        "test_hasValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_hasValue",
          "duration": 1
        },
        "test_isEmpty": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_isEmpty",
          "duration": 1
        },
        "test: isEmpty() should work on non-objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: isEmpty() should work on non-objects",
          "duration": 1
        },
        "test_keys": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_keys",
          "duration": 1
        },
        "test_keys_dom": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_keys_dom",
          "duration": 1
        },
        "test_owns": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_owns",
          "duration": 1
        },
        "test_setValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setValue",
          "duration": 1
        },
        "test_size": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_size",
          "duration": 1
        },
        "size() should return 0 for non-objects [legacy behavior]": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "size() should return 0 for non-objects [legacy behavior]",
          "duration": 29
        },
        "test_some": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_some",
          "duration": 2
        },
        "test_values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_values",
          "duration": 1
        },
        "test_people_messing_up_object_prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_people_messing_up_object_prototype",
          "duration": 1
        }
      }
    },
    "YUI: Lang": {
      "name": "YUI: Lang",
      "passed": 17,
      "failed": 4,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 108,
      "type": "testsuite",
      "Lang tests": {
        "name": "Lang tests",
        "passed": 17,
        "failed": 4,
        "errors": 0,
        "ignored": 0,
        "total": 21,
        "duration": 106,
        "type": "testcase",
        "_isNative() should return true for native functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_isNative() should return true for native functions",
          "duration": 1
        },
        "_isNative() should return false for non-native functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_isNative() should return false for non-native functions",
          "duration": 1
        },
        "test_is_array": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_array",
          "duration": 1
        },
        "test_is_array_dom": {
          "result": "fail",
          "message": "Cross frame array failure\nExpected: true (boolean)\nActual: false (boolean)",
          "type": "test",
          "name": "test_is_array_dom",
          "duration": 5
        },
        "test_is_boolean": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_boolean",
          "duration": 1
        },
        "test_is_function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_function",
          "duration": 1
        },
        "test_is_function_dom": {
          "result": "fail",
          "message": "Cross frame function failure\nExpected: true (boolean)\nActual: false (boolean)",
          "type": "test",
          "name": "test_is_function_dom",
          "duration": 10
        },
        "test_is_null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_null",
          "duration": 2
        },
        "test_is_number": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_number",
          "duration": 1
        },
        "test_is_object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_object",
          "duration": 1
        },
        "test_is_object_dom": {
          "result": "fail",
          "message": "Cross frame object failure\nExpected: true (boolean)\nActual: false (boolean)",
          "type": "test",
          "name": "test_is_object_dom",
          "duration": 11
        },
        "test_is_string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_string",
          "duration": 1
        },
        "test_is_undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_undefined",
          "duration": 1
        },
        "test_trim": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_trim",
          "duration": 1
        },
        "test_trim_left": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_trim_left",
          "duration": 1
        },
        "test_trim_right": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_trim_right",
          "duration": 1
        },
        "test_is_value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_value",
          "duration": 1
        },
        "test_is_date": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_is_date",
          "duration": 1
        },
        "test_is_date_dom": {
          "result": "fail",
          "message": "Cross frame date should be true\nExpected: true (boolean)\nActual: false (boolean)",
          "type": "test",
          "name": "test_is_date_dom",
          "duration": 9
        },
        "test_now": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_now",
          "duration": 1
        },
        "test_sub": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_sub",
          "duration": 2
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:31 PM"
  },
  {
    "name": "YUI: Static",
    "passed": 50,
    "failed": 0,
    "errors": 0,
    "ignored": 2,
    "total": 52,
    "duration": 8845,
    "type": "report",
    "Core tests": {
      "name": "Core tests",
      "passed": 32,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 34,
      "duration": 7010,
      "type": "testcase",
      "test: double skin loading from seed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: double skin loading from seed",
        "duration": 80
      },
      "test: pattern requires order": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: pattern requires order"
      },
      "cached functions should execute only once per input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cached functions should execute only once per input",
        "duration": 1
      },
      "getLocation() should return the location object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getLocation() should return the location object",
        "duration": 1
      },
      "getLocation() should return `null` when executing in node.js": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getLocation() should return `null` when executing in node.js"
      },
      "test_cached_undefined_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cached_undefined_null",
        "duration": 1
      },
      "test_guid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_guid",
        "duration": 12
      },
      "test_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stamp",
        "duration": 22
      },
      "test_use_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_array",
        "duration": 26
      },
      "test_use_strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_strings",
        "duration": 18
      },
      "test_one_submodule": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_one_submodule",
        "duration": 25
      },
      "test_base_path": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_base_path",
        "duration": 2
      },
      "test_log_params": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_log_params",
        "duration": 13
      },
      "test_global_apply_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_apply_config",
        "duration": 1
      },
      "test_old_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_old_config",
        "duration": 13
      },
      "test_applyTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_applyTo",
        "duration": 27
      },
      "test_global_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_config",
        "duration": 92
      },
      "test_multiple_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_ua",
        "duration": 24
      },
      "test_conditional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_conditional",
        "duration": 17
      },
      "test_missed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_missed",
        "duration": 18
      },
      "test_attach_error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error",
        "duration": 23
      },
      "test_attach_error_silent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_silent",
        "duration": 21
      },
      "test_attach_error_errFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_errFn",
        "duration": 28
      },
      "test_dump_core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump_core",
        "duration": 13
      },
      "test_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_destroy",
        "duration": 13
      },
      "test_features": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_features",
        "duration": 13
      },
      "test: requirements defined in external module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: requirements defined in external module",
        "duration": 81
      },
      "test: domready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: domready delay",
        "duration": 56
      },
      "test: window.onload delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: window.onload delay",
        "duration": 70
      },
      "test: available delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: available delay",
        "duration": 3017
      },
      "test: contentready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: contentready delay",
        "duration": 3022
      },
      "status should be true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be true",
        "duration": 70
      },
      "status should be false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be false",
        "duration": 18
      },
      "test: fetch with external dependencies redefined in external file": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: fetch with external dependencies redefined in external file",
        "duration": 111
      }
    },
    "Config tests": {
      "name": "Config tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 54,
      "type": "testcase",
      "test: YUI_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: YUI_config",
        "duration": 17
      },
      "test: local config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local config",
        "duration": 1
      },
      "test_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_config",
        "duration": 33
      }
    },
    "Later tests": {
      "name": "Later tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1670,
      "type": "testcase",
      "test later(10, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback)",
        "duration": 180
      },
      "test later(10, obj, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback)",
        "duration": 181
      },
      "test later(10, obj, methodString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString)",
        "duration": 181
      },
      "test later(10, null, callback, argArray)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray)",
        "duration": 180
      },
      "test later(0, null, callback, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(0, null, callback, obj)",
        "duration": 18
      },
      "test later(o, null, setTimeout, [fn, 0])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(o, null, setTimeout, [fn, 0])",
        "duration": 19
      },
      "test cancel later(100, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(100, null, callback)",
        "duration": 335
      },
      "test later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, null, true)",
        "duration": 40
      },
      "test later(10, obj, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback, null, true)",
        "duration": 26
      },
      "test later(10, obj, methodString, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString, null, true)",
        "duration": 24
      },
      "test later(10, null, callback, argArray, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray, true)",
        "duration": 26
      },
      "test cancel later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(10, null, callback, null, true)",
        "duration": 346
      }
    },
    "Namespace tests": {
      "name": "Namespace tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 26,
      "type": "testcase",
      "test_create_namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create_namespace",
        "duration": 1
      },
      "test_multi_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args",
        "duration": 1
      },
      "test_multi_args_dotted": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args_dotted",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:41 PM"
  },
  {
    "name": "YUI: Full",
    "passed": 50,
    "failed": 0,
    "errors": 0,
    "ignored": 2,
    "total": 52,
    "duration": 8838,
    "type": "report",
    "Core tests": {
      "name": "Core tests",
      "passed": 32,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 34,
      "duration": 7006,
      "type": "testcase",
      "test: double skin loading from seed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: double skin loading from seed",
        "duration": 171
      },
      "test: pattern requires order": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: pattern requires order"
      },
      "cached functions should execute only once per input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cached functions should execute only once per input",
        "duration": 1
      },
      "getLocation() should return the location object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getLocation() should return the location object",
        "duration": 1
      },
      "getLocation() should return `null` when executing in node.js": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getLocation() should return `null` when executing in node.js"
      },
      "test_cached_undefined_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cached_undefined_null",
        "duration": 1
      },
      "test_guid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_guid",
        "duration": 12
      },
      "test_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stamp",
        "duration": 22
      },
      "test_use_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_array",
        "duration": 23
      },
      "test_use_strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_strings",
        "duration": 16
      },
      "test_one_submodule": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_one_submodule",
        "duration": 24
      },
      "test_base_path": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_base_path",
        "duration": 2
      },
      "test_log_params": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_log_params",
        "duration": 12
      },
      "test_global_apply_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_apply_config",
        "duration": 1
      },
      "test_old_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_old_config",
        "duration": 11
      },
      "test_applyTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_applyTo",
        "duration": 12
      },
      "test_global_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_config",
        "duration": 26
      },
      "test_multiple_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_ua",
        "duration": 23
      },
      "test_conditional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_conditional",
        "duration": 17
      },
      "test_missed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_missed",
        "duration": 18
      },
      "test_attach_error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error",
        "duration": 23
      },
      "test_attach_error_silent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_silent",
        "duration": 46
      },
      "test_attach_error_errFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_errFn",
        "duration": 29
      },
      "test_dump_core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump_core",
        "duration": 11
      },
      "test_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_destroy",
        "duration": 12
      },
      "test_features": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_features",
        "duration": 12
      },
      "test: requirements defined in external module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: requirements defined in external module",
        "duration": 44
      },
      "test: domready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: domready delay",
        "duration": 54
      },
      "test: window.onload delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: window.onload delay",
        "duration": 65
      },
      "test: available delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: available delay",
        "duration": 2999
      },
      "test: contentready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: contentready delay",
        "duration": 2998
      },
      "status should be true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be true",
        "duration": 71
      },
      "status should be false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be false",
        "duration": 17
      },
      "test: fetch with external dependencies redefined in external file": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: fetch with external dependencies redefined in external file",
        "duration": 110
      }
    },
    "Config tests": {
      "name": "Config tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 51,
      "type": "testcase",
      "test: YUI_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: YUI_config",
        "duration": 16
      },
      "test: local config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local config",
        "duration": 1
      },
      "test_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_config",
        "duration": 30
      }
    },
    "Later tests": {
      "name": "Later tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1668,
      "type": "testcase",
      "test later(10, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback)",
        "duration": 180
      },
      "test later(10, obj, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback)",
        "duration": 180
      },
      "test later(10, obj, methodString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString)",
        "duration": 181
      },
      "test later(10, null, callback, argArray)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray)",
        "duration": 181
      },
      "test later(0, null, callback, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(0, null, callback, obj)",
        "duration": 16
      },
      "test later(o, null, setTimeout, [fn, 0])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(o, null, setTimeout, [fn, 0])",
        "duration": 16
      },
      "test cancel later(100, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(100, null, callback)",
        "duration": 334
      },
      "test later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, null, true)",
        "duration": 38
      },
      "test later(10, obj, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback, null, true)",
        "duration": 27
      },
      "test later(10, obj, methodString, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString, null, true)",
        "duration": 27
      },
      "test later(10, null, callback, argArray, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray, true)",
        "duration": 27
      },
      "test cancel later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(10, null, callback, null, true)",
        "duration": 346
      }
    },
    "Namespace tests": {
      "name": "Namespace tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 27,
      "type": "testcase",
      "test_create_namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create_namespace",
        "duration": 1
      },
      "test_multi_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args",
        "duration": 1
      },
      "test_multi_args_dotted": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args_dotted",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:58:51 PM"
  },
  {
    "name": "YUI: Fetch",
    "passed": 50,
    "failed": 0,
    "errors": 0,
    "ignored": 2,
    "total": 52,
    "duration": 8862,
    "type": "report",
    "Core tests": {
      "name": "Core tests",
      "passed": 32,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 34,
      "duration": 7008,
      "type": "testcase",
      "test: double skin loading from seed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: double skin loading from seed",
        "duration": 50
      },
      "test: pattern requires order": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: pattern requires order"
      },
      "cached functions should execute only once per input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "cached functions should execute only once per input",
        "duration": 2
      },
      "getLocation() should return the location object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getLocation() should return the location object",
        "duration": 1
      },
      "getLocation() should return `null` when executing in node.js": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getLocation() should return `null` when executing in node.js"
      },
      "test_cached_undefined_null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cached_undefined_null",
        "duration": 1
      },
      "test_guid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_guid",
        "duration": 13
      },
      "test_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stamp",
        "duration": 23
      },
      "test_use_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_array",
        "duration": 25
      },
      "test_use_strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_use_strings",
        "duration": 18
      },
      "test_one_submodule": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_one_submodule",
        "duration": 47
      },
      "test_base_path": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_base_path",
        "duration": 2
      },
      "test_log_params": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_log_params",
        "duration": 14
      },
      "test_global_apply_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_apply_config",
        "duration": 1
      },
      "test_old_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_old_config",
        "duration": 24
      },
      "test_applyTo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_applyTo",
        "duration": 43
      },
      "test_global_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_config",
        "duration": 43
      },
      "test_multiple_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multiple_ua",
        "duration": 24
      },
      "test_conditional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_conditional",
        "duration": 18
      },
      "test_missed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_missed",
        "duration": 18
      },
      "test_attach_error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error",
        "duration": 22
      },
      "test_attach_error_silent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_silent",
        "duration": 21
      },
      "test_attach_error_errFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_attach_error_errFn",
        "duration": 27
      },
      "test_dump_core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_dump_core",
        "duration": 12
      },
      "test_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_destroy",
        "duration": 12
      },
      "test_features": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_features",
        "duration": 12
      },
      "test: requirements defined in external module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: requirements defined in external module",
        "duration": 102
      },
      "test: domready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: domready delay",
        "duration": 57
      },
      "test: window.onload delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: window.onload delay",
        "duration": 69
      },
      "test: available delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: available delay",
        "duration": 3016
      },
      "test: contentready delay": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: contentready delay",
        "duration": 3010
      },
      "status should be true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be true",
        "duration": 70
      },
      "status should be false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "status should be false",
        "duration": 18
      },
      "test: fetch with external dependencies redefined in external file": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: fetch with external dependencies redefined in external file",
        "duration": 108
      }
    },
    "Config tests": {
      "name": "Config tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 52,
      "type": "testcase",
      "test: YUI_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: YUI_config",
        "duration": 17
      },
      "test: local config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local config",
        "duration": 1
      },
      "test_config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_config",
        "duration": 33
      }
    },
    "Later tests": {
      "name": "Later tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1669,
      "type": "testcase",
      "test later(10, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback)",
        "duration": 180
      },
      "test later(10, obj, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback)",
        "duration": 180
      },
      "test later(10, obj, methodString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString)",
        "duration": 181
      },
      "test later(10, null, callback, argArray)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray)",
        "duration": 180
      },
      "test later(0, null, callback, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(0, null, callback, obj)",
        "duration": 17
      },
      "test later(o, null, setTimeout, [fn, 0])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(o, null, setTimeout, [fn, 0])",
        "duration": 16
      },
      "test cancel later(100, null, callback)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(100, null, callback)",
        "duration": 335
      },
      "test later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, null, true)",
        "duration": 40
      },
      "test later(10, obj, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, callback, null, true)",
        "duration": 26
      },
      "test later(10, obj, methodString, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, obj, methodString, null, true)",
        "duration": 26
      },
      "test later(10, null, callback, argArray, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test later(10, null, callback, argArray, true)",
        "duration": 24
      },
      "test cancel later(10, null, callback, null, true)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test cancel later(10, null, callback, null, true)",
        "duration": 346
      }
    },
    "Namespace tests": {
      "name": "Namespace tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 25,
      "type": "testcase",
      "test_create_namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create_namespace",
        "duration": 1
      },
      "test_multi_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args",
        "duration": 1
      },
      "test_multi_args_dotted": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_multi_args_dotted",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:00 PM"
  },
  {
    "name": "YUI: Array",
    "passed": 20,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 20,
    "duration": 158,
    "type": "report",
    "Array tests": {
      "name": "Array tests",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 76,
      "type": "testcase",
      "testArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testArray",
        "duration": 2
      },
      "testDedupe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDedupe",
        "duration": 1
      },
      "dedupe() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "dedupe() should work on array-like objects",
        "duration": 1
      },
      "testEach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEach",
        "duration": 1
      },
      "each() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "each() should handle sparse arrays correctly",
        "duration": 1
      },
      "each() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "each() should work on array-like objects",
        "duration": 1
      },
      "testHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testHash",
        "duration": 1
      },
      "hash() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "hash() should handle sparse arrays correctly",
        "duration": 1
      },
      "hash() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "hash() should work on array-like objects",
        "duration": 1
      },
      "testIndexOf": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIndexOf",
        "duration": 1
      },
      "indexOf() should support an ES5-compatible fromIndex arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf() should support an ES5-compatible fromIndex arg",
        "duration": 1
      },
      "indexOf() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf() should handle sparse arrays correctly",
        "duration": 1
      },
      "indexOf() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "indexOf() should work on array-like objects",
        "duration": 1
      },
      "testNumericSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumericSort",
        "duration": 1
      },
      "testSome": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSome",
        "duration": 1
      },
      "some() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "some() should handle sparse arrays correctly",
        "duration": 1
      },
      "some() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "some() should work on array-like objects",
        "duration": 1
      },
      "test Array.test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Array.test",
        "duration": 1
      },
      "test Array.test with window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Array.test with window",
        "duration": 1
      },
      "test Array.test with dom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Array.test with dom",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:02 PM"
  },
  {
    "name": "XML",
    "passed": 6,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 6,
    "duration": 113,
    "type": "report",
    "XML Parse Tests": {
      "name": "XML Parse Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 18,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 2
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 12
      }
    },
    "XML Format Tests": {
      "name": "XML Format Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 17,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 5
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 5
      },
      "testFormat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFormat",
        "duration": 6
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:03 PM"
  },
  {
    "name": "Widget: Position Align",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 349,
    "type": "report",
    "Methods": {
      "name": "Methods",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 242,
      "type": "testcase",
      "align() with no arguments should not set the `align` Attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with no arguments should not set the `align` Attribute",
        "duration": 54
      },
      "align() with no arguments should call `_syncUIPosAlign()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with no arguments should call `_syncUIPosAlign()",
        "duration": 19
      },
      "align() with arguments should set the `align` Attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with arguments should set the `align` Attribute",
        "duration": 55
      },
      "align() with invalid points Array should throw an error after render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() with invalid points Array should throw an error after render",
        "duration": 34
      },
      "align() should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "align() should be chainable",
        "duration": 17
      },
      "centered() should set the `align` Attribute with center `points`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "centered() should set the `align` Attribute with center `points`",
        "duration": 15
      },
      "centered() should accept a `node` argument and set that as the `align` Node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "centered() should accept a `node` argument and set that as the `align` Node",
        "duration": 18
      },
      "centered() should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "centered() should be chainable",
        "duration": 15
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:04 PM"
  },
  {
    "name": "Widget: Anim",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 724,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 633,
      "type": "testcase",
      "A widget should be pluggable with Y.Plugin.WidgetAnim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A widget should be pluggable with Y.Plugin.WidgetAnim",
        "duration": 140
      },
      "A widget should animate on `visibleChange` when plugged with Y.Plugin.WidgetAnim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A widget should animate on `visibleChange` when plugged with Y.Plugin.WidgetAnim",
        "duration": 485
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:05 PM"
  },
  {
    "name": "ClassNameManager",
    "passed": 4,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 4,
    "duration": 87,
    "type": "report",
    "ClassNameManager Tests": {
      "name": "ClassNameManager Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 11,
      "type": "testcase",
      "testSingleSection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSection",
        "duration": 1
      },
      "testSingleSectionNoPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSingleSectionNoPrefix",
        "duration": 0
      },
      "testMoreThanOneSection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMoreThanOneSection",
        "duration": 1
      },
      "testMoreThanOneSectionNoPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMoreThanOneSectionNoPrefix",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:06 PM"
  },
  {
    "name": "TabView",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 218,
    "type": "report",
    "Y.TabviewBase": {
      "name": "Y.TabviewBase",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 21,
      "type": "testcase",
      "should create from existing markup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create from existing markup",
        "duration": 5
      }
    },
    "Y.TabView": {
      "name": "Y.TabView",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 106,
      "type": "testcase",
      "should return the selected tab": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the selected tab",
        "duration": 1
      },
      "should update the selected tab": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should update the selected tab",
        "duration": 5
      },
      "should fire selection change": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire selection change",
        "duration": 3
      },
      "should add the new tab to the tabview": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the new tab to the tabview",
        "duration": 26
      },
      "should remove the selected tab": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the selected tab",
        "duration": 15
      },
      "should fire selectionChange event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire selectionChange event",
        "duration": 6
      },
      "should set the label": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the label",
        "duration": 40
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:08 PM"
  },
  {
    "name": "Substitute",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 87,
    "type": "report",
    "Substitute tests": {
      "name": "Substitute tests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "test_substitute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_substitute",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:08 PM"
  },
  {
    "name": "Resize",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 915,
    "type": "report",
    "Resize Test": {
      "name": "Resize Test",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 801,
      "type": "testcase",
      "test: loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: loading",
        "duration": 1
      },
      "test: instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: instantiation",
        "duration": 196
      },
      "test: handles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: handles",
        "duration": 2
      },
      "test: moving top": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving top",
        "duration": 70
      },
      "test: moving right": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving right",
        "duration": 62
      },
      "test: moving bottom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving bottom",
        "duration": 61
      },
      "test: moving left": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving left",
        "duration": 62
      },
      "test: moving tr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving tr",
        "duration": 66
      },
      "test: moving tl": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving tl",
        "duration": 64
      },
      "test: moving br": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving br",
        "duration": 63
      },
      "test: moving bl": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: moving bl",
        "duration": 64
      },
      "test: destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: destroy",
        "duration": 14
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:11 PM"
  },
  {
    "name": "Widget: Buttons",
    "passed": 65,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 66,
    "duration": 3550,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 10,
      "duration": 366,
      "type": "testcase",
      "Initialization should fail if `WidgetStdMod` has not been added": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Initialization should fail if `WidgetStdMod` has not been added",
        "duration": 22
      },
      "Initialization should fail if `WidgetStdMod` has been added after `WidgetButtons`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Initialization should fail if `WidgetStdMod` has been added after `WidgetButtons`",
        "duration": 17
      },
      "`buttons` should default to an empty Object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should default to an empty Object",
        "duration": 19
      },
      "`buttons` should be accessible within a subclass initializer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be accessible within a subclass initializer",
        "duration": 65
      },
      "`buttons` should be parsed from a `srcNode`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be parsed from a `srcNode`",
        "duration": 28
      },
      "`buttons` should be parsed from a `srcNode` and use the `name` attribute of the node": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`buttons` should be parsed from a `srcNode` and use the `name` attribute of the node"
      },
      "`buttons` parsed from a `srcNode` should inherit any defaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` parsed from a `srcNode` should inherit any defaults",
        "duration": 29
      },
      "`buttons` parsed from a `srcNode` should be overridden by user-provided `buttons`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` parsed from a `srcNode` should be overridden by user-provided `buttons`",
        "duration": 96
      },
      "`defaultButton` should default to `null`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should default to `null`",
        "duration": 16
      },
      "`destory()` should remove all buttons": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`destory()` should remove all buttons",
        "duration": 43
      }
    },
    "Attributes and Properties": {
      "name": "Attributes and Properties",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 1095,
      "type": "testcase",
      "`buttons` should be able to be specified as an Array of Objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Array of Objects",
        "duration": 44
      },
      "`buttons` should be able to be specified as an Object of Arrays of Objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Object of Arrays of Objects",
        "duration": 30
      },
      "`buttons` specified as an Object of section-Arrays should override a button specific section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` specified as an Object of section-Arrays should override a button specific section",
        "duration": 31
      },
      "`buttons` specified without a section should default to the footer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` specified without a section should default to the footer",
        "duration": 31
      },
      "`buttons` should be able to be specified as an Array of Y.Nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Array of Y.Nodes",
        "duration": 34
      },
      "`buttons` should be able to be specified as an Object of Arrays of Y.Nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Object of Arrays of Y.Nodes",
        "duration": 34
      },
      "`buttons` should be able to be specified as an Array of Y.Nodes from another YUI instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as an Array of Y.Nodes from another YUI instance",
        "duration": 70
      },
      "`buttons` should be able to be specified as a mixture of all possibile configurations": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be able to be specified as a mixture of all possibile configurations",
        "duration": 33
      },
      "`buttons` should gracefully handle an object with non-array properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should gracefully handle an object with non-array properties",
        "duration": 43
      },
      "`buttons` should be settable to a new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be settable to a new value",
        "duration": 86
      },
      "`buttons` should be settable to the same value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should be settable to the same value",
        "duration": 47
      },
      "Default `BUTTONS` should be usable by only providing their string name": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Default `BUTTONS` should be usable by only providing their string name",
        "duration": 61
      },
      "User-provided `buttons` should override defaults": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "User-provided `buttons` should override defaults",
        "duration": 64
      },
      "A button configured with a `name` should be accessible by that `name`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button configured with a `name` should be accessible by that `name`",
        "duration": 26
      },
      "Last button in should win when multiple `buttons` have the same `name`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Last button in should win when multiple `buttons` have the same `name`",
        "duration": 52
      },
      "A button with an `action` String should be called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button with an `action` String should be called",
        "duration": 25
      },
      "A button configured with a `isDefault` should be the `defaultButton`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button configured with a `isDefault` should be the `defaultButton`",
        "duration": 24
      },
      "Last button in should win when multiple `buttons` are `isDefault`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Last button in should win when multiple `buttons` are `isDefault`",
        "duration": 31
      },
      "`isDefault` should only be considered when it is `true` or \"true\" (any case)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`isDefault` should only be considered when it is `true` or \"true\" (any case)",
        "duration": 87
      },
      "A button should be created using the configured `template`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "A button should be created using the configured `template`",
        "duration": 30
      },
      "`defaultButton` should be read-only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be read-only",
        "duration": 32
      },
      "`defaultButton` should be updated when a new button that `isDefault` is added": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be updated when a new button that `isDefault` is added",
        "duration": 37
      },
      "`defaultButton` should be updated when a new button that `isDefault` is added and receive visual styling": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be updated when a new button that `isDefault` is added and receive visual styling",
        "duration": 53
      },
      "`defaultButton` should be updated when a button that is the default is removed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`defaultButton` should be updated when a button that is the default is removed",
        "duration": 26
      }
    },
    "Methods": {
      "name": "Methods",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 756,
      "type": "testcase",
      "`addButton()` should add and render a new button": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` should add and render a new button",
        "duration": 144
      },
      "`addButton()` should default the new button to the end of the footer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` should default the new button to the end of the footer",
        "duration": 41
      },
      "`addButton()` without an `index` should default the new button to the end of the section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` without an `index` should default the new button to the end of the section",
        "duration": 35
      },
      "`addButton()` with an `index` should insert the new button at the correct location": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` with an `index` should insert the new button at the correct location",
        "duration": 34
      },
      "`addButton()` with an `index` that is too large should insert the new button at the end of the section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` with an `index` that is too large should insert the new button at the end of the section",
        "duration": 34
      },
      "`addButton()` with a negative `index` should insert the new button that many items from the end of the section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` with a negative `index` should insert the new button that many items from the end of the section",
        "duration": 42
      },
      "`addButton()` should accept a node as the button to add": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addButton()` should accept a node as the button to add",
        "duration": 34
      },
      "`getButton() should return `undefined` when no arguments are passed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton() should return `undefined` when no arguments are passed",
        "duration": 17
      },
      "`getButton()` should return a button by name": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton()` should return a button by name",
        "duration": 47
      },
      "`getButton()` should return a button by name for a section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton()` should return a button by name for a section",
        "duration": 30
      },
      "`getButton()` should return a button by index and section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`getButton()` should return a button by index and section",
        "duration": 62
      },
      "`removeButton()` should remove a button from the colleciton and the DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button from the colleciton and the DOM",
        "duration": 41
      },
      "`removeButton()` should remove a button by name for a section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button by name for a section",
        "duration": 36
      },
      "`removeButton()` should remove a button by `index` and default to the footer section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button by `index` and default to the footer section",
        "duration": 29
      },
      "`removeButton()` should remove a button by `index` and `section`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton()` should remove a button by `index` and `section`",
        "duration": 35
      },
      "`removeButton() should always return `this`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`removeButton() should always return `this`",
        "duration": 37
      }
    },
    "Rendering": {
      "name": "Rendering",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 441,
      "type": "testcase",
      "`buttons` should render their `value` as text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should render their `value` as text",
        "duration": 60
      },
      "`buttons` should render their `label` as text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should render their `label` as text",
        "duration": 56
      },
      "`buttons` should render in the correction section": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should render in the correction section",
        "duration": 68
      },
      "`buttons` should move to the correct position": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttons` should move to the correct position",
        "duration": 50
      },
      "Default button should be focused on `visibleChange`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Default button should be focused on `visibleChange`",
        "duration": 79
      },
      "Updating section content should not remove a button": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Updating section content should not remove a button",
        "duration": 84
      }
    },
    "Events": {
      "name": "Events",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 785,
      "type": "testcase",
      "`buttonsChange` should fire when setting new `buttons`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should fire when setting new `buttons`",
        "duration": 87
      },
      "`buttonsChange` should fire when calling `addButton()`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should fire when calling `addButton()`",
        "duration": 167
      },
      "`buttonsChange` should fire when calling `removeButton()`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should fire when calling `removeButton()`",
        "duration": 56
      },
      "`buttonsChange` should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`buttonsChange` should be preventable",
        "duration": 51
      },
      "Preventing `buttonsChange` should cause `addButton()` to not have side-effects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Preventing `buttonsChange` should cause `addButton()` to not have side-effects",
        "duration": 62
      },
      "Preventing `buttonsChange` should cause `removeButton()` to not have side-effects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Preventing `buttonsChange` should cause `removeButton()` to not have side-effects",
        "duration": 68
      },
      "`contentUpdate` should fire when the buttons change in the DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should fire when the buttons change in the DOM",
        "duration": 71
      },
      "`contentUpdate` should fire when a button is added": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should fire when a button is added",
        "duration": 64
      },
      "`contentUpdate` should fire when a button is removed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should fire when a button is removed",
        "duration": 52
      },
      "`contentUpdate` should not fire when the buttons in the DOM do not actually change": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentUpdate` should not fire when the buttons in the DOM do not actually change",
        "duration": 54
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:15 PM"
  },
  {
    "name": "Profiler",
    "passed": 15,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 15,
    "duration": 167,
    "type": "report",
    "Profiler Registration Tests": {
      "name": "Profiler Registration Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 33,
      "type": "testcase",
      "testInstrument": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstrument",
        "duration": 1
      },
      "testRegisterFunction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterFunction",
        "duration": 2
      },
      "testRegisterGlobalFunction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterGlobalFunction",
        "duration": 2
      },
      "testRegisterGlobalFunctionOnGlobalObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterGlobalFunctionOnGlobalObject",
        "duration": 3
      },
      "testRegisterObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterObject",
        "duration": 1
      },
      "testRegisterConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterConstructor",
        "duration": 1
      },
      "testRegisterConstructorWithInheritance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRegisterConstructorWithInheritance",
        "duration": 1
      },
      "testFunctionAccuracy1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionAccuracy1",
        "duration": 1
      },
      "testFunctionAccuracy2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFunctionAccuracy2",
        "duration": 1
      }
    },
    "Profiler Stopwatch Tests": {
      "name": "Profiler Stopwatch Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 19,
      "type": "testcase",
      "testStartStop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStartStop",
        "duration": 2
      },
      "testStartStopPause": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStartStopPause",
        "duration": 5
      },
      "testStartTwice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStartTwice",
        "duration": 5
      }
    },
    "Profiler Report Data Tests": {
      "name": "Profiler Report Data Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "testGetReport": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetReport",
        "duration": 2
      },
      "testGetCallCount": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetCallCount",
        "duration": 1
      },
      "testGetMath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetMath",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:16 PM"
  },
  {
    "name": "Overlay",
    "passed": 1,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 1,
    "duration": 138,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 61,
      "type": "testcase",
      "Y.Overlay() should create a new overlay widget": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.Overlay() should create a new overlay widget",
        "duration": 39
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:18 PM"
  },
  {
    "name": "Number",
    "passed": 13,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 13,
    "duration": 157,
    "type": "report",
    "Number Parse Tests": {
      "name": "Number Parse Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 1
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      }
    },
    "Number Format Tests": {
      "name": "Number Format Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 36,
      "type": "testcase",
      "testUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUndefined",
        "duration": 0
      },
      "testNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNull",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      },
      "testPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrefix",
        "duration": 1
      },
      "testSuffix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSuffix",
        "duration": 1
      },
      "testDecimalPlaces": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDecimalPlaces",
        "duration": 1
      },
      "testThousandsSeparator": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testThousandsSeparator",
        "duration": 1
      },
      "testComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplex",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:19 PM"
  },
  {
    "name": "Slider",
    "passed": 35,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 35,
    "duration": 3421,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 1256,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 31
      },
      "test SliderBase construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test SliderBase construction",
        "duration": 19
      },
      "test render(selector)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render(selector)",
        "duration": 321
      },
      "test render( node )": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render( node )",
        "duration": 172
      },
      "test render: selector attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: selector attrib in constructor",
        "duration": 212
      },
      "test render: node attrib in constructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render: node attrib in constructor",
        "duration": 205
      },
      "test render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render off DOM",
        "duration": 64
      },
      "test destroy() before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() before render",
        "duration": 21
      },
      "test destroy() after render off DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render off DOM",
        "duration": 63
      },
      "test destroy() after render to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test destroy() after render to DOM",
        "duration": 61
      }
    },
    "API": {
      "name": "API",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 451,
      "type": "testcase",
      "test getValue() and setValue(v) before render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getValue() and setValue(v) before render",
        "duration": 24
      },
      "test getValue() and setValue(v) after render() to hidden container": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getValue() and setValue(v) after render() to hidden container",
        "duration": 63
      },
      "test getValue() and setValue(v) after render() to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getValue() and setValue(v) after render() to DOM",
        "duration": 65
      },
      "setValue(v) then render() should position thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setValue(v) then render() should position thumb",
        "duration": 60
      },
      "setValue(v) after render() should move the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setValue(v) after render() should move the thumb",
        "duration": 129
      },
      "setValue(v) when hidden should still move the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setValue(v) when hidden should still move the thumb",
        "duration": 70
      }
    },
    "Attributes": {
      "name": "Attributes",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 1060,
      "type": "testcase",
      "test axis": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test axis",
        "duration": 116
      },
      "axis should be writeOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "axis should be writeOnce",
        "duration": 38
      },
      "axis should only accept 'x', 'X', 'y', and 'Y'": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "axis should only accept 'x', 'X', 'y', and 'Y'",
        "duration": 25
      },
      "test length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test length",
        "duration": 224
      },
      "thumbUrl should default at render()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "thumbUrl should default at render()",
        "duration": 59
      },
      "thumbUrl should default to sam skin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "thumbUrl should default to sam skin",
        "duration": 65
      },
      "thumbUrl should default from the current skin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "thumbUrl should default from the current skin",
        "duration": 61
      },
      "test clickableRail": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test clickableRail",
        "duration": 124
      },
      "test min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test min",
        "duration": 24
      },
      "test max": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test max",
        "duration": 22
      },
      "test value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test value",
        "duration": 72
      },
      "setting the value outside the min or max should constrain it": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setting the value outside the min or max should constrain it",
        "duration": 28
      },
      "setting the min or max should update the value if necessary": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setting the min or max should update the value if necessary",
        "duration": 65
      },
      "instantiating with disabled: true should lock the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "instantiating with disabled: true should lock the thumb",
        "duration": 60
      }
    },
    "Mouse": {
      "name": "Mouse",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 153,
      "type": "testcase",
      "clicking on the rail should move the thumb": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "clicking on the rail should move the thumb",
        "duration": 136
      }
    },
    "Keyboard": {
      "name": "Keyboard",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 402,
      "type": "testcase",
      "test keyboard input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test keyboard input",
        "duration": 185
      },
      "test focus on thumb by click": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test focus on thumb by click",
        "duration": 62
      },
      "test keyboard input and resultant value change, when Slider length is less than max - min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test keyboard input and resultant value change, when Slider length is less than max - min",
        "duration": 58
      },
      "test ARIA attributes while values change by keyboard input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ARIA attributes while values change by keyboard input",
        "duration": 65
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:23 PM"
  },
  {
    "name": "Node: Data",
    "passed": 25,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 25,
    "duration": 319,
    "type": "report",
    "Node data": {
      "name": "Node data",
      "passed": 25,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 25,
      "duration": 232,
      "type": "testcase",
      "should return empty object when no data set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty object when no data set",
        "duration": 5
      },
      "should return undefined when no data field set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return undefined when no data field set",
        "duration": 7
      },
      "should set data value to string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to string",
        "duration": 5
      },
      "should set data value to number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to number",
        "duration": 5
      },
      "should set data value to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to zero",
        "duration": 6
      },
      "should set data value to undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to undefined",
        "duration": 5
      },
      "should set data value to null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set data value to null",
        "duration": 6
      },
      "should set field value to string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set field value to string",
        "duration": 5
      },
      "should set field name to number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set field name to number",
        "duration": 5
      },
      "should set field name to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set field name to zero",
        "duration": 6
      },
      "should initialize from HTML attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should initialize from HTML attribute",
        "duration": 49
      },
      "should prefer setData value to HTML attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prefer setData value to HTML attribute",
        "duration": 14
      },
      "should return all set values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all set values",
        "duration": 7
      },
      "should return all html data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all html data",
        "duration": 8
      },
      "should prefer setData values to HTML attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prefer setData values to HTML attributes",
        "duration": 9
      },
      "should setData on all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should setData on all nodes",
        "duration": 11
      },
      "should return all html data from all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all html data from all nodes",
        "duration": 5
      },
      "should prefer setData values to HTML attributes on all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prefer setData values to HTML attributes on all nodes",
        "duration": 9
      },
      "should clear field data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear field data",
        "duration": 5
      },
      "should clear number field data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear number field data",
        "duration": 10
      },
      "should clear number zero field data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear number zero field data",
        "duration": 5
      },
      "should clear data for given field from all nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear data for given field from all nodes",
        "duration": 5
      },
      "should clear field data from all nodes and revert to HTML attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear field data from all nodes and revert to HTML attributes",
        "duration": 6
      },
      "should clear all data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should clear all data",
        "duration": 5
      },
      "should store data for document node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should store data for document node",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:25 PM"
  },
  {
    "name": "Node",
    "passed": 249,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 250,
    "duration": 1999,
    "type": "report",
    "Node: Data": {
      "name": "Node: Data",
      "passed": 25,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 25,
      "duration": 199,
      "type": "testsuite",
      "Node data": {
        "name": "Node data",
        "passed": 25,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 25,
        "duration": 196,
        "type": "testcase",
        "should return empty object when no data set": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return empty object when no data set",
          "duration": 8
        },
        "should return undefined when no data field set": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return undefined when no data field set",
          "duration": 5
        },
        "should set data value to string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to string",
          "duration": 9
        },
        "should set data value to number": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to number",
          "duration": 5
        },
        "should set data value to zero": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to zero",
          "duration": 5
        },
        "should set data value to undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to undefined",
          "duration": 5
        },
        "should set data value to null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set data value to null",
          "duration": 5
        },
        "should set field value to string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set field value to string",
          "duration": 5
        },
        "should set field name to number": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set field name to number",
          "duration": 6
        },
        "should set field name to zero": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set field name to zero",
          "duration": 6
        },
        "should initialize from HTML attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should initialize from HTML attribute",
          "duration": 5
        },
        "should prefer setData value to HTML attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should prefer setData value to HTML attribute",
          "duration": 5
        },
        "should return all set values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return all set values",
          "duration": 48
        },
        "should return all html data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return all html data",
          "duration": 6
        },
        "should prefer setData values to HTML attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should prefer setData values to HTML attributes",
          "duration": 5
        },
        "should setData on all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should setData on all nodes",
          "duration": 6
        },
        "should return all html data from all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return all html data from all nodes",
          "duration": 6
        },
        "should prefer setData values to HTML attributes on all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should prefer setData values to HTML attributes on all nodes",
          "duration": 10
        },
        "should clear field data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear field data",
          "duration": 5
        },
        "should clear number field data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear number field data",
          "duration": 5
        },
        "should clear number zero field data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear number zero field data",
          "duration": 5
        },
        "should clear data for given field from all nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear data for given field from all nodes",
          "duration": 5
        },
        "should clear field data from all nodes and revert to HTML attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear field data from all nodes and revert to HTML attributes",
          "duration": 7
        },
        "should clear all data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear all data",
          "duration": 5
        },
        "should store data for document node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should store data for document node",
          "duration": 1
        }
      }
    },
    "Y.all": {
      "name": "Y.all",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 105,
      "type": "testcase",
      "should fire the handler once": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the handler once",
        "duration": 3
      },
      "should return a NodeList of size zero from empty string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size zero from empty string",
        "duration": 10
      },
      "should return a NodeList of size zero from non-existant id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size zero from non-existant id",
        "duration": 1
      },
      "should return a NodeList of size zero from non-existant id descendant": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size zero from non-existant id descendant",
        "duration": 2
      },
      "should return a NodeList of size 1 from id query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of size 1 from id query",
        "duration": 1
      },
      "should return the same size as the DOM length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the same size as the DOM length",
        "duration": 1
      },
      "should return the first child element from query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the first child element from query",
        "duration": 1
      },
      "should return the second child element from query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the second child element from query",
        "duration": 2
      },
      "should correctly handle special chars in id attribute query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should correctly handle special chars in id attribute query",
        "duration": 2
      },
      "inserted node should become new first-child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "inserted node should become new first-child",
        "duration": 25
      },
      "should match return value from Y.Selector.query for body :first-child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should match return value from Y.Selector.query for body :first-child",
        "duration": 2
      },
      "should return the OPTIONs from the SELECT input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the OPTIONs from the SELECT input",
        "duration": 1
      },
      "should return 3 OPTIONs from the SELECT input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return 3 OPTIONs from the SELECT input",
        "duration": 1
      },
      "should find 2 FORMs via form query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find 2 FORMs via form query",
        "duration": 1
      },
      "should find all elements with bar className": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all elements with bar className",
        "duration": 1
      },
      "should wrap all DIV elements with NodeList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap all DIV elements with NodeList",
        "duration": 6
      },
      "should match the attribute query from Y.Selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should match the attribute query from Y.Selector",
        "duration": 1
      },
      "should match the className query from Y.Selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should match the className query from Y.Selector",
        "duration": 1
      },
      "should return a NodeList of the body element from a DOM ref": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a NodeList of the body element from a DOM ref",
        "duration": 2
      }
    },
    "NodeList array methods": {
      "name": "NodeList array methods",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 86,
      "type": "testcase",
      "should pass correct arguments to each node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should pass correct arguments to each node",
        "duration": 2
      },
      "should return true when some function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true when some function returns true",
        "duration": 1
      },
      "should return false when no function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false when no function returns true",
        "duration": 2
      },
      "should return 0 from indexOf BODY": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return 0 from indexOf BODY",
        "duration": 1
      },
      "should return 0 from indexOf the first DIV": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return 0 from indexOf the first DIV",
        "duration": 1
      },
      "should return -1 from indexOf for non-existant node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return -1 from indexOf for non-existant node",
        "duration": 1
      },
      "should return -1 from indexOf for node not in nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return -1 from indexOf for node not in nodelist",
        "duration": 1
      },
      "should pop the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should pop the nodelist",
        "duration": 2
      },
      "should shift the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should shift the nodelist",
        "duration": 1
      },
      "should push the node on nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should push the node on nodelist",
        "duration": 1
      },
      "should unshift the node on nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should unshift the node on nodelist",
        "duration": 1
      },
      "should unshift the dom node on nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should unshift the dom node on nodelist",
        "duration": 1
      },
      "should concat the nodelists": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should concat the nodelists",
        "duration": 1
      },
      "should concat the nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should concat the nodes",
        "duration": 2
      },
      "should return nodelist from empty concat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return nodelist from empty concat",
        "duration": 15
      },
      "should return nodelist from empty slice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return nodelist from empty slice",
        "duration": 11
      },
      "should return nodelist from empty splice": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return nodelist from empty splice",
        "duration": 5
      },
      "should slice the nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should slice the nodes",
        "duration": 1
      },
      "should splice the nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should splice the nodes",
        "duration": 2
      },
      "should refresh the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should refresh the nodelist",
        "duration": 1
      }
    },
    "Y.Node get() method": {
      "name": "Y.Node get() method",
      "passed": 23,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 23,
      "duration": 89,
      "type": "testcase",
      "should return null from empty string input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null from empty string input",
        "duration": 1
      },
      "should return null from unfound property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null from unfound property",
        "duration": 2
      },
      "should return null nodeValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null nodeValue",
        "duration": 1
      },
      "should return DIV from nodeName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return DIV from nodeName",
        "duration": 2
      },
      "should return UL from nodeName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return UL from nodeName",
        "duration": 1
      },
      "should return LI from nodeName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return LI from nodeName",
        "duration": 1
      },
      "should return the firstChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the firstChild",
        "duration": 3
      },
      "should return the nextSibling of the firstChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the nextSibling of the firstChild",
        "duration": 2
      },
      "should return the nodeName of the nextSibling of the firstChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the nodeName of the nextSibling of the firstChild",
        "duration": 1
      },
      "should return the nodeName of the of the lastChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the nodeName of the of the lastChild",
        "duration": 1
      },
      "should get the document node from the ownerDocument": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the document node from the ownerDocument",
        "duration": 1
      },
      "should return the OPTIONs from the SElECT": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the OPTIONs from the SElECT",
        "duration": 1
      },
      "should return the text of the new element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the text of the new element",
        "duration": 8
      },
      "should return the updated text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the updated text",
        "duration": 5
      },
      "should return the correct number of children": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct number of children",
        "duration": 1
      },
      "should return zero children from empty node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return zero children from empty node",
        "duration": 2
      },
      "should return matching childNode length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return matching childNode length",
        "duration": 8
      },
      "should return the correct tabIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex",
        "duration": 1
      },
      "should return the correct tabIndex when not set (DIV)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex when not set (DIV)",
        "duration": 1
      },
      "should return the correct tabIndex when not set (A)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex when not set (A)",
        "duration": 2
      },
      "should return the correct tabIndex when set to -1 (A)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct tabIndex when set to -1 (A)",
        "duration": 1
      },
      "should convert live list to static array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should convert live list to static array",
        "duration": 2
      },
      "test_getters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getters",
        "duration": 1
      }
    },
    "Y.NodeList get() method": {
      "name": "Y.NodeList get() method",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 11,
      "type": "testcase",
      "should return an array of tagNames from the nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return an array of tagNames from the nodelist",
        "duration": 2
      },
      "should find the id of the first nodes's parentNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find the id of the first nodes's parentNode",
        "duration": 1
      },
      "should find the text of the first item in children collection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find the text of the first item in children collection",
        "duration": 2
      },
      "should convert DOM node return values to NodeList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should convert DOM node return values to NodeList",
        "duration": 1
      }
    },
    "Y.Node.ancestor": {
      "name": "Y.Node.ancestor",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 68,
      "type": "testcase",
      "should return the parent node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the parent node",
        "duration": 1
      },
      "should return the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the same node",
        "duration": 2
      },
      "should return the matching ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor",
        "duration": 1
      },
      "should return the matching ancestor via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor via selector",
        "duration": 2
      },
      "should return the matching ancestor (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self match)",
        "duration": 1
      },
      "should return the matching ancestor (test self match) via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self match) via selector",
        "duration": 1
      },
      "should return the matching ancestor (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self not matched)",
        "duration": 1
      },
      "should return the matching ancestor (test self not matched) via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self not matched) via selector",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should stop when the stop function returns true via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true via selector",
        "duration": 2
      },
      "should stop when the stop function returns true via selector as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true via selector as 2nd arg",
        "duration": 2
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor before stop fn as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop fn as 2nd arg",
        "duration": 1
      },
      "should find ancestor before stop via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop via selector",
        "duration": 1
      },
      "should find ancestor before stop via selector as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop via selector as 2nd arg",
        "duration": 1
      },
      "should find ancestor via selector before stop via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor via selector before stop via selector",
        "duration": 2
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      },
      "should find ancestor when testFn and stop via selector both pass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when testFn and stop via selector both pass",
        "duration": 1
      },
      "should find ancestor when test and stop via selector both pass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when test and stop via selector both pass",
        "duration": 1
      },
      "should find TD ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find TD ancestor",
        "duration": 1
      }
    },
    "Y.Node.ancestors": {
      "name": "Y.Node.ancestors",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 41,
      "type": "testcase",
      "should return an array of one (documentElement)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return an array of one (documentElement)",
        "duration": 1
      },
      "should include the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should include the starting node",
        "duration": 2
      },
      "should omit the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should omit the starting node",
        "duration": 1
      },
      "should return the matching ancestors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors",
        "duration": 1
      },
      "should return the matching ancestors via selector": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors via selector",
        "duration": 1
      },
      "should return the matching ancestors (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self match)",
        "duration": 1
      },
      "should return the matching ancestors (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self not matched)",
        "duration": 2
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 2
      },
      "should stop when the stop function returns true as 2nd arg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true as 2nd arg",
        "duration": 1
      }
    },
    "Y.Node.siblings": {
      "name": "Y.Node.siblings",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "should return all siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all siblings",
        "duration": 1
      },
      "should return all LI siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all LI siblings",
        "duration": 1
      },
      "should return all LI.bar siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all LI.bar siblings",
        "duration": 2
      }
    },
    "Y.Node.previous": {
      "name": "Y.Node.previous",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "should return the correct previous element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the correct previous element",
        "duration": 1
      }
    },
    "Y.Node.insert": {
      "name": "Y.Node.insert",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 19,
      "type": "testcase",
      "insert should fail silently given null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "insert should fail silently given null input",
        "duration": 1
      },
      "insert should work with 0 (falsy number input)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "insert should work with 0 (falsy number input)",
        "duration": 1
      },
      "insert should replace content when given null input and replace where string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "insert should replace content when given null input and replace where string",
        "duration": 5
      },
      "prepend should fail silently given null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "prepend should fail silently given null input",
        "duration": 1
      }
    },
    "Y.Node.removeAttribute": {
      "name": "Y.Node.removeAttribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "should remove the given attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the given attribute",
        "duration": 4
      },
      "should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be chainable",
        "duration": 5
      },
      "should remove readonly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove readonly",
        "duration": 1
      }
    },
    "Y.Node.ATTRS.children": {
      "name": "Y.Node.ATTRS.children",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 10,
      "type": "testcase",
      "should return children from document fragment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return children from document fragment",
        "duration": 1
      }
    },
    "Y.Node.setHTML": {
      "name": "Y.Node.setHTML",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 28,
      "type": "testcase",
      "should insert html into div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert html into div",
        "duration": 8
      },
      "should insert html into nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert html into nodelist",
        "duration": 5
      },
      "should get html from div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get html from div",
        "duration": 8
      },
      "should get html from nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get html from nodelist",
        "duration": 5
      }
    },
    "Y.Node.getStyle": {
      "name": "Y.Node.getStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 5,
      "type": "testcase",
      "should return undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return undefined when given invalid property",
        "duration": 4
      }
    },
    "Y.Node.getComputedStyle": {
      "name": "Y.Node.getComputedStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "should return undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return undefined when given invalid property",
        "duration": 5
      }
    },
    "Y.NodeList.getStyle": {
      "name": "Y.NodeList.getStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 4,
      "type": "testcase",
      "should return array of undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return array of undefined when given invalid property",
        "duration": 2
      }
    },
    "Y.NodeList.getComputedStyle": {
      "name": "Y.NodeList.getComputedStyle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "should return array of undefined when given invalid property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return array of undefined when given invalid property",
        "duration": 4
      }
    },
    "Node": {
      "name": "Node",
      "passed": 107,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 108,
      "duration": 1184,
      "type": "testsuite",
      "Y.one": {
        "name": "Y.one",
        "passed": 96,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 97,
        "duration": 1129,
        "type": "testcase",
        "should cache node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should cache node",
          "duration": 5
        },
        "should get fresh node after destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should get fresh node after destroy",
          "duration": 4
        },
        "should return null from empty string input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null from empty string input",
          "duration": 1
        },
        "should return null from null input": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null from null input",
          "duration": 0
        },
        "should return null for non-existant id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null for non-existant id",
          "duration": 1
        },
        "should return null for element descendant of non-existant id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return null for element descendant of non-existant id",
          "duration": 1
        },
        "should find matching element by id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should find matching element by id",
          "duration": 1
        },
        "should return the correct element from the iframe document": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return the correct element from the iframe document",
          "duration": 2
        },
        "should find id descendant of class selector": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should find id descendant of class selector",
          "duration": 1
        },
        "should find element by selector": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should find element by selector",
          "duration": 6
        },
        "test_create": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_create",
          "duration": 25
        },
        "test_setter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setter",
          "duration": 8
        },
        "test_dom_methods": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_dom_methods",
          "duration": 19
        },
        "test_fragment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_fragment",
          "duration": 1
        },
        "test_screen": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_screen",
          "duration": 7
        },
        "test_region": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_region",
          "duration": 3
        },
        "test_classes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_classes",
          "duration": 17
        },
        "test_toggle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toggle",
          "duration": 2
        },
        "test_setStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setStyle",
          "duration": 1
        },
        "test_getStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getStyle",
          "duration": 2
        },
        "test_getComputedStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getComputedStyle",
          "duration": 14
        },
        "test_setStyles": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setStyles",
          "duration": 1
        },
        "test_selector": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_selector",
          "duration": 2
        },
        "test_window": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_window",
          "duration": 2
        },
        "test_windowSize": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_windowSize",
          "duration": 1
        },
        "test_scroll": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_scroll",
          "duration": 27
        },
        "test_setContent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_setContent",
          "duration": 17
        },
        "test_insert": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_insert",
          "duration": 35
        },
        "test_inject": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_inject",
          "duration": 13
        },
        "test_getValue": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_getValue",
          "duration": 3
        },
        "test_remove": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_remove",
          "duration": 12
        },
        "test_replace": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_replace",
          "duration": 13
        },
        "test_elements": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_elements",
          "duration": 2
        },
        "test_toFrag": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_toFrag",
          "duration": 2
        },
        "test_aria": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_aria",
          "duration": 4
        },
        "test_plugin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_plugin",
          "duration": 37
        },
        "test_props": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_props",
          "duration": 4
        },
        "test_one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_one",
          "duration": 2
        },
        "test_all": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_all",
          "duration": 3
        },
        "test_isEmpty": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_isEmpty",
          "duration": 1
        },
        "test_swap": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_swap",
          "duration": 2
        },
        "test_data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_data",
          "duration": 2
        },
        "test_appendStyle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_appendStyle",
          "duration": 9
        },
        "test_nodelistEvent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_nodelistEvent",
          "duration": 67
        },
        "test_size": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_size",
          "duration": 9
        },
        "test_select": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_select",
          "duration": 8
        },
        "test_label_for": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_label_for",
          "duration": 6
        },
        "test_destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_destroy",
          "duration": 11
        },
        "test_prependLinkFrag": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test_prependLinkFrag"
        },
        "test_prependDivFrag": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_prependDivFrag",
          "duration": 12
        },
        "test_focus": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_focus",
          "duration": 1
        },
        "should hide the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should hide the node",
          "duration": 3
        },
        "should show the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should show the node",
          "duration": 2
        },
        "should show the node and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should show the node and fire callback",
          "duration": 1
        },
        "should show the node and treat function as callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should show the node and treat function as callback",
          "duration": 2
        },
        "should hide the node and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should hide the node and fire callback",
          "duration": 4
        },
        "should hide the node and treat function as callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should hide the node and treat function as callback",
          "duration": 2
        },
        "should toggle the node view on": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should toggle the node view on",
          "duration": 2
        },
        "should toggle the node view on and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should toggle the node view on and fire callback",
          "duration": 2
        },
        "should force toggle the node view on": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view on",
          "duration": 1
        },
        "should force toggle the node view on and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view on and fire callback",
          "duration": 11
        },
        "should force toggle the node view off": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view off",
          "duration": 1
        },
        "should force toggle the node view off and fire callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should force toggle the node view off and fire callback",
          "duration": 2
        },
        "should set text for textNode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should set text for textNode",
          "duration": 1
        },
        "should append to the given node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append to the given node",
          "duration": 5
        },
        "should append to the given DOM node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append to the given DOM node",
          "duration": 6
        },
        "should wrap the node with the given html": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the node with the given html",
          "duration": 9
        },
        "should wrap the node with the given DOM node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the node with the given DOM node",
          "duration": 8
        },
        "should wrap the node with the given node instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the node with the given node instance",
          "duration": 7
        },
        "should wrap the paragraph with a div": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should wrap the paragraph with a div",
          "duration": 9
        },
        "should remove the node from its parent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should remove the node from its parent",
          "duration": 7
        },
        "should return true for fragment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return true for fragment",
          "duration": 5
        },
        "should create a caption element": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create a caption element",
          "duration": 5
        },
        "should replace node with the given node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given node",
          "duration": 7
        },
        "should replace node with the given dom node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given dom node",
          "duration": 7
        },
        "should replace node with the given html": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given html",
          "duration": 7
        },
        "should replace node with the given html and return the replaced node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should replace node with the given html and return the replaced node",
          "duration": 8
        },
        "should append the given html and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append the given html and return the new node",
          "duration": 8
        },
        "should append the given nodelist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append the given nodelist",
          "duration": 7
        },
        "should append the given nodelist and return a NodeList instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should append the given nodelist and return a NodeList instance",
          "duration": 7
        },
        "should insert the given html and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the given html and return the new node",
          "duration": 7
        },
        "should insert the given nodelist before the given node and return the nodelist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the given nodelist before the given node and return the nodelist",
          "duration": 8
        },
        "should insert the node before the given node and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the node before the given node and return the new node",
          "duration": 8
        },
        "should insert the given node before the given dom node and return the new node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should insert the given node before the given dom node and return the new node",
          "duration": 5
        },
        "should empty the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should empty the node",
          "duration": 5
        },
        "should empty the node and recursively destroy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should empty the node and recursively destroy",
          "duration": 5
        },
        "should empty the nodelist": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should empty the nodelist",
          "duration": 10
        },
        "should load the content from the given url into the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should load the content from the given url into the node",
          "duration": 17
        },
        "should load the query result from the given url into the node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should load the query result from the given url into the node",
          "duration": 14
        },
        "should call method with node context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should call method with node context",
          "duration": 8
        },
        "should clear inline styles": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should clear inline styles",
          "duration": 5
        },
        "should apply inline opacity": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should apply inline opacity",
          "duration": 5
        },
        "should accept document Node instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should accept document Node instance",
          "duration": 4
        },
        "should destroy recursively": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should destroy recursively",
          "duration": 3
        },
        "should return the DOM node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return the DOM node",
          "duration": 1
        },
        "should return the DOM nodes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return the DOM nodes",
          "duration": 1
        },
        "should not cache document fragment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should not cache document fragment",
          "duration": 5
        }
      },
      "generateID": {
        "name": "generateID",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 10,
        "type": "testcase",
        "should generate a unique ID": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should generate a unique ID",
          "duration": 5
        },
        "should return exising ID": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should return exising ID",
          "duration": 5
        }
      },
      "new Y.Node()": {
        "name": "new Y.Node()",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 7,
        "type": "testcase",
        "should generate a fresh instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should generate a fresh instance",
          "duration": 1
        },
        "compareTo should pass": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "compareTo should pass",
          "duration": 1
        }
      },
      "NodeList API": {
        "name": "NodeList API",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 26,
        "type": "testcase",
        "should have the create API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should have the create API",
          "duration": 1
        },
        "should have the view API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should have the view API",
          "duration": 1
        },
        "should have the event API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should have the event API",
          "duration": 1
        },
        "should create empty NodeList from empty arguments": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty arguments",
          "duration": 0
        },
        "should create empty NodeList from empty string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty string",
          "duration": 1
        },
        "should create empty NodeList from empty arguments via Y.all": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty arguments via Y.all",
          "duration": 1
        },
        "should create empty NodeList from empty string via Y.all": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "should create empty NodeList from empty string via Y.all",
          "duration": 1
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:28 PM"
  },
  {
    "name": "History: HTML5",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 354,
    "type": "report",
    "HistoryHTML5": {
      "name": "HistoryHTML5",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 269,
      "type": "testcase",
      "Y.HistoryHTML5 constructor should accept an initialState config property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.HistoryHTML5 constructor should accept an initialState config property",
        "duration": 3
      },
      "Y.History should === Y.HistoryHTML5 by default except when not supported": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.History should === Y.HistoryHTML5 by default except when not supported",
        "duration": 2
      },
      "Y.config.useHistoryHTML5 should specify the behavior of the Y.History alias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.config.useHistoryHTML5 should specify the behavior of the Y.History alias",
        "duration": 232
      },
      "add() should change state": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should change state",
        "duration": 3
      },
      "add() should set a custom URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should set a custom URL",
        "duration": 3
      },
      "replace() should change state without a new history entry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should change state without a new history entry",
        "duration": 3
      },
      "replace() should set a custom URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should set a custom URL",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:29 PM"
  },
  {
    "name": "History: Hash",
    "passed": 17,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 18,
    "duration": 1181,
    "type": "report",
    "HistoryHash": {
      "name": "HistoryHash",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 18,
      "duration": 1104,
      "type": "testcase",
      "synthetic hashchange event should fire when the hash changes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "synthetic hashchange event should fire when the hash changes",
        "duration": 65
      },
      "hashchange should be case-sensitive (except in IE8+)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "hashchange should be case-sensitive (except in IE8+)"
      },
      "hashchange should NOT be case-sensitive in IE8+": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "hashchange should NOT be case-sensitive in IE8+",
        "duration": 123
      },
      "createHash() should create a hash string from an object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "createHash() should create a hash string from an object",
        "duration": 3
      },
      "decode() should decode URI components with + for space": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "decode() should decode URI components with + for space",
        "duration": 2
      },
      "encode() should encode URI components with + for space": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "encode() should encode URI components with + for space",
        "duration": 2
      },
      "setHash() should set the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setHash() should set the hash",
        "duration": 3
      },
      "getHash() should get the current raw (not decoded) hash string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getHash() should get the current raw (not decoded) hash string",
        "duration": 3
      },
      "getUrl() should get the current URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getUrl() should get the current URL",
        "duration": 2
      },
      "parseHash() should parse a hash string into an object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "parseHash() should parse a hash string into an object",
        "duration": 2
      },
      "parseHash() should use the current hash if no argument is provided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "parseHash() should use the current hash if no argument is provided",
        "duration": 3
      },
      "replaceHash() should replace the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceHash() should replace the hash",
        "duration": 4
      },
      "bookmarked state should be merged into initialState": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "bookmarked state should be merged into initialState",
        "duration": 70
      },
      "add() should change the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should change the hash",
        "duration": 8
      },
      "replace() should replace the hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should replace the hash",
        "duration": 4
      },
      "Setting an unencoded hash value outside of HistoryHash should not result in two history entries": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Setting an unencoded hash value outside of HistoryHash should not result in two history entries",
        "duration": 241
      },
      "Setting a non-string value should not result in two history entries": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Setting a non-string value should not result in two history entries",
        "duration": 303
      },
      "Subscribers of hashchange should not be called once for every YUI instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Subscribers of hashchange should not be called once for every YUI instance",
        "duration": 131
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:32 PM"
  },
  {
    "name": "History: Base",
    "passed": 22,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 22,
    "duration": 217,
    "type": "report",
    "HistoryBase": {
      "name": "HistoryBase",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 76,
      "type": "testcase",
      "Initial state should be an empty object by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Initial state should be an empty object by default",
        "duration": 3
      },
      "Constructor should accept a config object containing an initial state": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Constructor should accept a config object containing an initial state",
        "duration": 3
      },
      "Constructor should ignore an argument that isn't an object hash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Constructor should ignore an argument that isn't an object hash",
        "duration": 1
      },
      "HistoryBase should have a static boolean html5 property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HistoryBase should have a static boolean html5 property",
        "duration": 1
      },
      "HistoryBase should have a static boolean nativeHashChange property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "HistoryBase should have a static boolean nativeHashChange property",
        "duration": 1
      },
      "_resolveChanges() should change the state and fire events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_resolveChanges() should change the state and fire events",
        "duration": 4
      },
      "_resolveChanges() should pass the src param to events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_resolveChanges() should pass the src param to events",
        "duration": 3
      },
      "_resolveChanges() should not fire events when there are no changes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "_resolveChanges() should not fire events when there are no changes",
        "duration": 2
      },
      "local events should not fire for changes in other HistoryBase instances": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "local events should not fire for changes in other HistoryBase instances",
        "duration": 3
      },
      "add() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should change state with the correct event src",
        "duration": 1
      },
      "add() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "add() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should not merge states when the \"merge\" option is false",
        "duration": 2
      },
      "add() should allow non-object states": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "add() should allow non-object states",
        "duration": 2
      },
      "addValue() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addValue() should change state with the correct event src",
        "duration": 1
      },
      "addValue() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addValue() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "addValue() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addValue() should not merge states when the \"merge\" option is false",
        "duration": 2
      },
      "replace() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should change state with the correct event src",
        "duration": 1
      },
      "replace() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "replace() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replace() should not merge states when the \"merge\" option is false",
        "duration": 2
      },
      "replaceValue() should change state with the correct event src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceValue() should change state with the correct event src",
        "duration": 1
      },
      "replaceValue() should merge states when the \"merge\" option is true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceValue() should merge states when the \"merge\" option is true",
        "duration": 2
      },
      "replaceValue() should not merge states when the \"merge\" option is false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replaceValue() should not merge states when the \"merge\" option is false",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:33 PM"
  },
  {
    "name": "Recordset",
    "passed": 30,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 30,
    "duration": 560,
    "type": "report",
    "API Tests": {
      "name": "API Tests",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 479,
      "type": "testcase",
      "testCreateEmptyRecordset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateEmptyRecordset",
        "duration": 16
      },
      "testGetRecords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetRecords",
        "duration": 7
      },
      "testAddSingleRecordToEnd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddSingleRecordToEnd",
        "duration": 9
      },
      "testAddSingleRecordToIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddSingleRecordToIndex",
        "duration": 8
      },
      "testAddMultipleRecordsToEnd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddMultipleRecordsToEnd",
        "duration": 10
      },
      "testAddMultipleRecordsToIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddMultipleRecordsToIndex",
        "duration": 11
      },
      "testDeleteSingleRecordFromEnd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeleteSingleRecordFromEnd",
        "duration": 8
      },
      "testDeleteSingleRecordFromIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeleteSingleRecordFromIndex",
        "duration": 7
      },
      "testDeleteRangeOfRecords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDeleteRangeOfRecords",
        "duration": 8
      },
      "testEmptyRecordSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEmptyRecordSet",
        "duration": 7
      },
      "testGetValuesByKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetValuesByKey",
        "duration": 7
      },
      "testGetValuesByKeyWithInvalidKey": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetValuesByKeyWithInvalidKey",
        "duration": 8
      },
      "testUpdateRecordAtIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUpdateRecordAtIndex",
        "duration": 9
      },
      "testUpdateRecordAtIndices": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testUpdateRecordAtIndices",
        "duration": 11
      },
      "testDefaultHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultHash",
        "duration": 16
      },
      "testDefaultSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefaultSort",
        "duration": 13
      },
      "testResort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testResort",
        "duration": 15
      },
      "testReverseBeforeSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReverseBeforeSort",
        "duration": 16
      },
      "testFlipAfterSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFlipAfterSort",
        "duration": 21
      },
      "testCustomSort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomSort",
        "duration": 19
      },
      "testSize": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSize",
        "duration": 7
      },
      "testEach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEach",
        "duration": 8
      },
      "testSome": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSome",
        "duration": 7
      },
      "testFilter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilter",
        "duration": 18
      },
      "testReject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReject",
        "duration": 23
      },
      "testMap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMap",
        "duration": 35
      },
      "testCustomHashTableInitialization": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableInitialization",
        "duration": 13
      },
      "testCustomHashTableAddingRecord": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableAddingRecord",
        "duration": 17
      },
      "testCustomHashTableRemovingRecord": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableRemovingRecord",
        "duration": 13
      },
      "testCustomHashTableUpdatingRecord": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHashTableUpdatingRecord",
        "duration": 16
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:34 PM"
  },
  {
    "name": "Pjax",
    "passed": 24,
    "failed": 0,
    "errors": 0,
    "ignored": 11,
    "total": 35,
    "duration": 402,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 8,
      "type": "testcase",
      "should plug into a Node instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should plug into a Node instance",
        "duration": 8
      }
    },
    "Attributes and Properties": {
      "name": "Attributes and Properties",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 4,
      "total": 13,
      "duration": 122,
      "type": "testcase",
      "`addPjaxParam` should be true by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`addPjaxParam` should be true by default",
        "duration": 7
      },
      "Pjax param should be added when `addPjaxParam` is true": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should be added when `addPjaxParam` is true"
      },
      "Pjax param should be appended to an existing query string when `addPjaxParam` is true": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should be appended to an existing query string when `addPjaxParam` is true"
      },
      "Pjax param should be added before the fragment when `addPjaxParam` is true": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should be added before the fragment when `addPjaxParam` is true"
      },
      "Pjax param should not be added when `addPjaxParam` is false": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Pjax param should not be added when `addPjaxParam` is false"
      },
      "`container` should be null by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`container` should be null by default",
        "duration": 12
      },
      "container` should always be `null` or a Node instance": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "container` should always be `null` or a Node instance",
        "duration": 13
      },
      "`contentSelector` should be null by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`contentSelector` should be null by default",
        "duration": 6
      },
      "`linkSelector` should select links with class \"yui3-pjax\" by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`linkSelector` should select links with class \"yui3-pjax\" by default",
        "duration": 7
      },
      "`navigateOnHash` should be false by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigateOnHash` should be false by default",
        "duration": 7
      },
      "`scrollToTop` should be true by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`scrollToTop` should be true by default",
        "duration": 7
      },
      "`timeout` should default to 30000ms": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`timeout` should default to 30000ms",
        "duration": 16
      },
      "`titleSelector` should select the title tag by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`titleSelector` should select the title tag by default",
        "duration": 9
      }
    },
    "Events": {
      "name": "Events",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 15,
      "duration": 120,
      "type": "testcase",
      "should attach events on init in HTML5 browsers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should attach events on init in HTML5 browsers",
        "duration": 8
      },
      "`error` event should fire on Ajax failure": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`error` event should fire on Ajax failure"
      },
      "`error` event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`error` event should be preventable",
        "duration": 7
      },
      "`load` event should fire on Ajax success": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`load` event should fire on Ajax success"
      },
      "`load` event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`load` event should be preventable",
        "duration": 7
      },
      "`navigate` event facade should contain the options passed to `navigate()`": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`navigate` event facade should contain the options passed to `navigate()`"
      },
      "`navigate` event should fire when a pjax link is clicked": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should fire when a pjax link is clicked",
        "duration": 9
      },
      "`navigate` event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should be preventable",
        "duration": 8
      },
      "`navigate` event should not fire when a link is clicked with a button other than the left button": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a link is clicked with a button other than the left button",
        "duration": 8
      },
      "`navigate` event should not fire when a modifier key is pressed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a modifier key is pressed",
        "duration": 8
      },
      "`navigate` event should not fire when a click element is not an anchor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a click element is not an anchor",
        "duration": 7
      },
      "`navigate` event should not fire when a link is clicked with a URL from another origin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire when a link is clicked with a URL from another origin",
        "duration": 8
      },
      "`navigate` event should not fire for a hash URL that resolves to the current page": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should not fire for a hash URL that resolves to the current page",
        "duration": 8
      },
      "`navigate` event should fire for a hash-less URL that resolves to the current page": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should fire for a hash-less URL that resolves to the current page",
        "duration": 9
      },
      "`navigate` event should fire for a hash URL that resolves to the current page when `navigateOnHash` is `true`": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate` event should fire for a hash URL that resolves to the current page when `navigateOnHash` is `true`",
        "duration": 9
      }
    },
    "Methods": {
      "name": "Methods",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 3,
      "duration": 61,
      "type": "testcase",
      "`navigate()` should load the specified URL and fire a `load` event": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`navigate()` should load the specified URL and fire a `load` event"
      },
      "`navigate()` should normalize the specified URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate()` should normalize the specified URL",
        "duration": 32
      },
      "`navigate()` should throw an error when the specified URL is not of the same origin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`navigate()` should throw an error when the specified URL is not of the same origin",
        "duration": 25
      }
    },
    "General Behavior": {
      "name": "General Behavior",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 3,
      "duration": 8,
      "type": "testcase",
      "Page title should be updated if the `titleSelector` matches an element": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Page title should be updated if the `titleSelector` matches an element"
      },
      "Host element content should be updated with page content when `contentSelector` is null": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Host element content should be updated with page content when `contentSelector` is null"
      },
      "Host element content should be updated with partial content when `contentSelector` selects a node": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "Host element content should be updated with partial content when `contentSelector` selects a node"
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:36 PM"
  },
  {
    "name": "Get",
    "passed": 68,
    "failed": 0,
    "errors": 0,
    "ignored": 8,
    "total": 76,
    "duration": 2647,
    "type": "report",
    "Basic JS loading": {
      "name": "Basic JS loading",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 7,
      "total": 26,
      "duration": 940,
      "type": "testcase",
      "test: single script, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single script, success",
        "duration": 12
      },
      "test: single script, failure": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: single script, failure"
      },
      "test: single script timeout callback": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: single script timeout callback"
      },
      "test: single script success, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single script success, end",
        "duration": 9
      },
      "test: single script failure, end": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: single script failure, end"
      },
      "test: multiple scripts, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple scripts, success",
        "duration": 65
      },
      "test: multiple scripts, one failure": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: multiple scripts, one failure"
      },
      "test: multiple scripts, success, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple scripts, success, end",
        "duration": 25
      },
      "test: multiple scripts, failure, end": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: multiple scripts, failure, end"
      },
      "test: async multiple scripts, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple scripts, success",
        "duration": 19
      },
      "test: async multiple scripts, success, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple scripts, success, end",
        "duration": 23
      },
      "test: async multiple script, failure, end": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple script, failure, end",
        "duration": 22
      },
      "test: insertBefore, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, single",
        "duration": 13
      },
      "test: insertBefore, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, multiple",
        "duration": 24
      },
      "test: async, insertBefore, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async, insertBefore, multiple",
        "duration": 20
      },
      "test: charset, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, single",
        "duration": 10
      },
      "test: charset, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, multiple",
        "duration": 97
      },
      "test: async, charset, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async, charset, multiple",
        "duration": 56
      },
      "test: attributes, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, single",
        "duration": 31
      },
      "test: attributes, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, multiple",
        "duration": 23
      },
      "test: async, attributes, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async, attributes, multiple",
        "duration": 23
      },
      "ignore: abort": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": " abort"
      },
      "ignore: timeout": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": " timeout"
      },
      "scripts should be automatically purged after 20 nodes by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "scripts should be automatically purged after 20 nodes by default",
        "duration": 290
      },
      "test: purgethreshold": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: purgethreshold",
        "duration": 28
      },
      "test: async multiple script, failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: async multiple script, failure",
        "duration": 17
      }
    },
    "Basic CSS loading": {
      "name": "Basic CSS loading",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 390,
      "type": "testcase",
      "test: single css, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single css, success",
        "duration": 27
      },
      "test: multiple css, success": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple css, success",
        "duration": 31
      },
      "test: insertBefore, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, single",
        "duration": 32
      },
      "test: insertBefore, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: insertBefore, multiple",
        "duration": 34
      },
      "test: charset, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, single",
        "duration": 53
      },
      "test: charset, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: charset, multiple",
        "duration": 27
      },
      "test: attributes, single": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, single",
        "duration": 25
      },
      "test: attributes, multiple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: attributes, multiple",
        "duration": 28
      },
      "test: single css, failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: single css, failure",
        "duration": 29
      },
      "test: multiple css, failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple css, failure",
        "duration": 30
      },
      "CSS nodes should be inserted in order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "CSS nodes should be inserted in order",
        "duration": 31
      }
    },
    "Y.Get methods": {
      "name": "Y.Get methods",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 603,
      "type": "testcase",
      "abort() should abort a transaction when given a transaction object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should abort a transaction when given a transaction object",
        "duration": 11
      },
      "abort() should abort a transaction when given a transaction id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should abort a transaction when given a transaction id",
        "duration": 14
      },
      "css() should accept a URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a URL",
        "duration": 35
      },
      "css() should accept a URL, options object, and callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a URL, options object, and callback function",
        "duration": 18
      },
      "css() should allow the callback function as the second parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should allow the callback function as the second parameter",
        "duration": 8
      },
      "css() should accept an array of URLs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept an array of URLs",
        "duration": 10
      },
      "css() should accept a request object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a request object",
        "duration": 7
      },
      "css() should accept an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept an array of request objects",
        "duration": 12
      },
      "css() should accept a mixed array of URLs and request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "css() should accept a mixed array of URLs and request objects",
        "duration": 15
      },
      "js() should accept a URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a URL",
        "duration": 37
      },
      "js() should accept a URL, options object, and callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a URL, options object, and callback function",
        "duration": 17
      },
      "js() should allow the callback function as the second parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should allow the callback function as the second parameter",
        "duration": 10
      },
      "js() should accept an array of URLs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept an array of URLs",
        "duration": 29
      },
      "js() should accept a request object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a request object",
        "duration": 17
      },
      "js() should accept an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept an array of request objects",
        "duration": 27
      },
      "js() should accept a mixed array of URLs and request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "js() should accept a mixed array of URLs and request objects",
        "duration": 72
      },
      "load() should accept a URL": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a URL",
        "duration": 40
      },
      "load() should accept a URL, options object, and callback function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a URL, options object, and callback function",
        "duration": 11
      },
      "load() should allow the callback function as the second parameter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should allow the callback function as the second parameter",
        "duration": 15
      },
      "load() should accept an array of URLs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept an array of URLs",
        "duration": 31
      },
      "load() should accept a request object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a request object",
        "duration": 10
      },
      "load() should accept an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept an array of request objects",
        "duration": 12
      },
      "load() should accept a mixed array of URLs and request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "load() should accept a mixed array of URLs and request objects",
        "duration": 20
      },
      "script() should be an alias for js()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "script() should be an alias for js()",
        "duration": 1
      }
    },
    "Transaction behavior": {
      "name": "Transaction behavior",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 43,
      "type": "testcase",
      "transactions should always execute one at a time by default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "transactions should always execute one at a time by default",
        "duration": 30
      }
    },
    "Transaction methods": {
      "name": "Transaction methods",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 112,
      "type": "testcase",
      "abort() should abort the transaction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should abort the transaction",
        "duration": 15
      },
      "abort() should accept a custom error message": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "abort() should accept a custom error message",
        "duration": 15
      },
      "execute() should queue callbacks": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "execute() should queue callbacks",
        "duration": 18
      },
      "execute() should call the callback immediately if the transaction has already finished": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "execute() should call the callback immediately if the transaction has already finished",
        "duration": 10
      },
      "purge() should purge any nodes inserted by the transaction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "purge() should purge any nodes inserted by the transaction",
        "duration": 22
      }
    },
    "Transaction properties": {
      "name": "Transaction properties",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 6,
      "duration": 82,
      "type": "testcase",
      "transactions should have a unique `id` property": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "transactions should have a unique `id` property",
        "duration": 6
      },
      "transactions should have a `data` property when a data object is provided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "transactions should have a `data` property when a data object is provided",
        "duration": 2
      },
      "`errors` property should contain an array of error objects": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "`errors` property should contain an array of error objects"
      },
      "`nodes` property should contain an array of injected nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`nodes` property should contain an array of injected nodes",
        "duration": 17
      },
      "`options` property should contain transaction options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`options` property should contain transaction options",
        "duration": 5
      },
      "`requests` property should contain an array of request objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`requests` property should contain an array of request objects",
        "duration": 16
      }
    },
    "Options": {
      "name": "Options",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 13,
      "type": "testcase",
      "`class` attribute should be set correctly in all browsers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "`class` attribute should be set correctly in all browsers",
        "duration": 11
      }
    },
    "Functional tests": {
      "name": "Functional tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 394,
      "type": "testcase",
      "test: Loader, ScrollView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Loader, ScrollView",
        "duration": 163
      },
      "test: Loader, Autocomplete": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: Loader, Autocomplete",
        "duration": 229
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:39 PM"
  },
  {
    "name": "Escape",
    "passed": 5,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 5,
    "duration": 154,
    "type": "report",
    "Escape": {
      "name": "Escape",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 26,
      "type": "testcase",
      "html() should escape HTML characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html() should escape HTML characters",
        "duration": 1
      },
      "html() should coerce non-strings to strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html() should coerce non-strings to strings",
        "duration": 0
      },
      "regex() should escape regular expression characters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "regex() should escape regular expression characters",
        "duration": 1
      },
      "regex() should coerce non-strings to strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "regex() should coerce non-strings to strings",
        "duration": 1
      },
      "regexp() should be an alias for regex()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "regexp() should be an alias for regex()",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:40 PM"
  },
  {
    "name": "Loader: Static",
    "passed": 69,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 72,
    "duration": 3964,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 69,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 72,
      "duration": 3871,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 23
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 52
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 59
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 34
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 64
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 71
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 85
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 62
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 60
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 60
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 16
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 15
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 59
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 54
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 60
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 62
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 40
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 57
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 64
      },
      "test_group_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_group_filters",
        "duration": 29
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 68
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 48
      },
      "test_iter": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_iter"
      },
      "test_progress": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_progress"
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 23
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 20
      },
      "test_condpattern": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_condpattern",
        "duration": 70
      },
      "test_cond_with_test_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 35
      },
      "test_cond_no_test_or_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 91
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 19
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 19
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 20
      },
      "test_css_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 218
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 1
      },
      "testing fetchCSS false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 157
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 39
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 103
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 13
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 13
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 13
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 51
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 40
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 40
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 18
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 17
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 43
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 40
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 42
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 42
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 39
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 52
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 62
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 45
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 45
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 55
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 43
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 44
      },
      "test: gallery skinnable": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: gallery skinnable"
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 64
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 141
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 128
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 129
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 22
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 43
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 45
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 43
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 43
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 43
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 137
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 37
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 47
      },
      "test external lang 1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test external lang 1",
        "duration": 67
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:45 PM"
  },
  {
    "name": "Loader: On Page",
    "passed": 69,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 72,
    "duration": 3834,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 69,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 72,
      "duration": 3754,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 23
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 54
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 58
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 35
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 58
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 61
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 89
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 61
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 59
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 60
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 17
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 16
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 59
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 53
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 59
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 59
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 38
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 54
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 60
      },
      "test_group_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_group_filters",
        "duration": 27
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 60
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 46
      },
      "test_iter": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_iter"
      },
      "test_progress": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_progress"
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 22
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 18
      },
      "test_condpattern": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_condpattern",
        "duration": 38
      },
      "test_cond_with_test_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 58
      },
      "test_cond_no_test_or_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 47
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 19
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 19
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 18
      },
      "test_css_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 146
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 2
      },
      "testing fetchCSS false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 256
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 39
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 98
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 14
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 13
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 13
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 52
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 41
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 40
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 18
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 17
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 44
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 41
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 42
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 42
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 40
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 53
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 62
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 44
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 44
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 54
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 42
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 42
      },
      "test: gallery skinnable": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: gallery skinnable"
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 25
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 132
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 179
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 129
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 22
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 43
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 42
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 41
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 42
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 44
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 142
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 38
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 47
      },
      "test external lang 1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test external lang 1",
        "duration": 64
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:50 PM"
  },
  {
    "name": "Loader: Full",
    "passed": 69,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 72,
    "duration": 3887,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 69,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 72,
      "duration": 3808,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 22
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 56
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 61
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 35
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 62
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 59
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 98
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 68
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 60
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 60
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 15
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 15
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 60
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 54
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 60
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 59
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 38
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 53
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 60
      },
      "test_group_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_group_filters",
        "duration": 27
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 62
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 47
      },
      "test_iter": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_iter"
      },
      "test_progress": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_progress"
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 21
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 17
      },
      "test_condpattern": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_condpattern",
        "duration": 58
      },
      "test_cond_with_test_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 37
      },
      "test_cond_no_test_or_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 91
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 17
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 18
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 16
      },
      "test_css_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 155
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 1
      },
      "testing fetchCSS false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 253
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 40
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 97
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 12
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 11
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 11
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 51
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 41
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 40
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 17
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 17
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 43
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 41
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 41
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 41
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 40
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 52
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 63
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 45
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 44
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 54
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 40
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 45
      },
      "test: gallery skinnable": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: gallery skinnable"
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 24
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 170
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 139
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 128
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 20
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 43
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 43
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 46
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 43
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 44
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 138
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 35
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 46
      },
      "test external lang 1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test external lang 1",
        "duration": 62
      }
    },
    "timestamp": "Wednesday, October 10, 2012 7:59:55 PM"
  },
  {
    "name": "Loader: Fetch",
    "passed": 69,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 72,
    "duration": 4055,
    "type": "report",
    "Loader Tests": {
      "name": "Loader Tests",
      "passed": 69,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 72,
      "duration": 3974,
      "type": "testcase",
      "test: skin overrides double loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: skin overrides double loading",
        "duration": 25
      },
      "test: empty skin overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: empty skin overrides",
        "duration": 56
      },
      "test_skin_overrides": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_overrides",
        "duration": 60
      },
      "test_resolve_no_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_no_calc",
        "duration": 36
      },
      "test_resolve_manual_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_manual_calc",
        "duration": 62
      },
      "test_resolve_auto_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_auto_calc",
        "duration": 97
      },
      "test_resolve_combo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo",
        "duration": 60
      },
      "test_resolve_filter_debug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_debug",
        "duration": 62
      },
      "test_resolve_filter_min": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_min",
        "duration": 60
      },
      "test_resolve_filter_raw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filter_raw",
        "duration": 61
      },
      "test_custom_filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter",
        "duration": 17
      },
      "test_custom_filter_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_custom_filter_group",
        "duration": 16
      },
      "test_resolve_combo_sep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep",
        "duration": 60
      },
      "test_resolve_combo_sep_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_combo_sep_group",
        "duration": 54
      },
      "test_resolve_maxurl_length": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length",
        "duration": 60
      },
      "test_resolve_maxurl_length_higher": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_higher",
        "duration": 59
      },
      "test_resolve_maxurl_length_too_low": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_too_low",
        "duration": 39
      },
      "test_resolve_maxurl_length_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_maxurl_length_group",
        "duration": 54
      },
      "test_resolve_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_resolve_filters",
        "duration": 65
      },
      "test_group_filters": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_group_filters",
        "duration": 28
      },
      "test_module_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_module_attrs",
        "duration": 84
      },
      "test_global_attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_attrs",
        "duration": 85
      },
      "test_iter": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_iter"
      },
      "test_progress": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test_progress"
      },
      "test_failure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_failure",
        "duration": 24
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 19
      },
      "test_condpattern": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_condpattern",
        "duration": 29
      },
      "test_cond_with_test_function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_with_test_function",
        "duration": 37
      },
      "test_cond_no_test_or_ua": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_cond_no_test_or_ua",
        "duration": 86
      },
      "test: conditional trigger is an array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional trigger is an array",
        "duration": 18
      },
      "test: conditional module in array second module": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional module in array second module",
        "duration": 19
      },
      "test: conditional array in modules not required": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: conditional array in modules not required",
        "duration": 18
      },
      "test_css_stamp": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_css_stamp",
        "duration": 250
      },
      "testing duplicate CSS loading": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing duplicate CSS loading",
        "duration": 1
      },
      "testing fetchCSS false": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing fetchCSS false",
        "duration": 148
      },
      "test_forcemap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_forcemap",
        "duration": 39
      },
      "test_global_mods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_global_mods",
        "duration": 100
      },
      "test_skin_default": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_default",
        "duration": 12
      },
      "test_skin_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_string",
        "duration": 13
      },
      "test_skin_object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_skin_object",
        "duration": 13
      },
      "test_load_optional": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_optional",
        "duration": 52
      },
      "test_load_css_without_type": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_css_without_type",
        "duration": 40
      },
      "test_load_as_string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load_as_string",
        "duration": 40
      },
      "test_combine_no_core_top_level": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_top_level",
        "duration": 18
      },
      "test_combine_no_core_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_combine_no_core_group",
        "duration": 17
      },
      "test_outside_group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_group",
        "duration": 42
      },
      "test_outside_nocombine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_outside_nocombine",
        "duration": 40
      },
      "test_submodules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_submodules",
        "duration": 42
      },
      "test_plugins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_plugins",
        "duration": 42
      },
      "test_fullpath_with_combine": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fullpath_with_combine",
        "duration": 40
      },
      "test_load": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_load",
        "duration": 53
      },
      "test_async": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async",
        "duration": 66
      },
      "test: aliases config option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option",
        "duration": 45
      },
      "test: aliases config option inside group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: aliases config option inside group",
        "duration": 47
      },
      "test: addAlias": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: addAlias",
        "duration": 56
      },
      "test: gallery combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: gallery combo with custom server",
        "duration": 41
      },
      "test: 2in3 combo with custom server": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2in3 combo with custom server",
        "duration": 40
      },
      "test: gallery skinnable": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test: gallery skinnable"
      },
      "test: global async flag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: global async flag",
        "duration": 36
      },
      "test: 2 loader instances with different skins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instances with different skins",
        "duration": 176
      },
      "test: multiple loaders, different resolve order": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: multiple loaders, different resolve order",
        "duration": 131
      },
      "test: 2 loader instanced without shared module data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: 2 loader instanced without shared module data",
        "duration": 135
      },
      "test: cascade dependencies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: cascade dependencies",
        "duration": 23
      },
      "test: local lang file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include",
        "duration": 50
      },
      "test: local lang file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local lang file include in a group",
        "duration": 51
      },
      "test: local skin file include": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include",
        "duration": 45
      },
      "test: local skin file include in a group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: local skin file include in a group",
        "duration": 47
      },
      "test: rootlang empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: rootlang empty array",
        "duration": 46
      },
      "test: mojito loader calculate bleeding over": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: mojito loader calculate bleeding over",
        "duration": 143
      },
      "testing configFn for bug #2532498": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testing configFn for bug #2532498",
        "duration": 39
      },
      "test coverage filter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test coverage filter",
        "duration": 50
      },
      "test external lang 1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test external lang 1",
        "duration": 89
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:00 PM"
  },
  {
    "name": "DragDrop",
    "passed": 47,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 47,
    "duration": 12452,
    "type": "report",
    "DD Test": {
      "name": "DD Test",
      "passed": 47,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 47,
      "duration": 12448,
      "type": "testcase",
      "test_shim": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_shim",
        "duration": 1
      },
      "test_drop_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_setup",
        "duration": 9
      },
      "test_drop_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_setup_events",
        "duration": 3
      },
      "test_drag_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_setup",
        "duration": 16
      },
      "test_shim_after": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_shim_after",
        "duration": 1
      },
      "test_drag_drop_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_drop_setup",
        "duration": 13
      },
      "test_drag_invalids": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_invalids",
        "duration": 1
      },
      "test_drag_groups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_groups",
        "duration": 2
      },
      "test_drop_groups": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_groups",
        "duration": 1
      },
      "test: _shimming test for mousemove events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _shimming test for mousemove events",
        "duration": 1
      },
      "test_drop_overs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_overs",
        "duration": 7
      },
      "test_drag_handles": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_handles",
        "duration": 1
      },
      "test: _prevEndFn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: _prevEndFn",
        "duration": 1
      },
      "test: selectionFix with valid click": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: selectionFix with valid click",
        "duration": 1
      },
      "test: selectionFix without valid click": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: selectionFix without valid click",
        "duration": 1
      },
      "test_drag_drop_group_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_drop_group_setup",
        "duration": 14
      },
      "test_drag_drop_group_pass_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_drop_group_pass_setup",
        "duration": 15
      },
      "test_drag_add_handle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_add_handle",
        "duration": 3
      },
      "test_drag_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_setup_events",
        "duration": 2
      },
      "test_drag_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_move",
        "duration": 1082
      },
      "test_drag_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drag_destroy",
        "duration": 4
      },
      "test_proxy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy",
        "duration": 15
      },
      "test_proxy_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy_setup_events",
        "duration": 2
      },
      "test_proxy_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy_move",
        "duration": 2154
      },
      "test_proxy_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_proxy_destroy",
        "duration": 5
      },
      "test_drop_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_drop_destroy",
        "duration": 2
      },
      "test_constrain_region_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_region_setup",
        "duration": 15
      },
      "test_constrain_node_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_node_setup",
        "duration": 11
      },
      "test_constrain_node_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_node_move",
        "duration": 81
      },
      "test_constrain_node_unplug": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_node_unplug",
        "duration": 1224
      },
      "test_constrain_view_setup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_view_setup",
        "duration": 12
      },
      "test_constrain_inregion": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_inregion",
        "duration": 3
      },
      "test_tick_calc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_tick_calc",
        "duration": 1
      },
      "test_tick_array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_tick_array",
        "duration": 1
      },
      "test_constrain_view_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_constrain_view_move",
        "duration": 677
      },
      "test: node scroll plugin": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: node scroll plugin",
        "duration": 13
      },
      "test_window_scroll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_window_scroll",
        "duration": 2624
      },
      "test_delegate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate",
        "duration": 24
      },
      "test_delegate_setup_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_setup_events",
        "duration": 3
      },
      "test_delegate_move": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_move",
        "duration": 1081
      },
      "test_delegate_move2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_move2",
        "duration": 2825
      },
      "test_delegate_disabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_disabled",
        "duration": 3
      },
      "test_delegate_destroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_delegate_destroy",
        "duration": 12
      },
      "test_css_gutter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_css_gutter",
        "duration": 1
      },
      "test_swap_node_position": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_swap_node_position",
        "duration": 14
      },
      "test_swap_node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_swap_node",
        "duration": 11
      },
      "test: proxy plugin on widget": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test: proxy plugin on widget",
        "duration": 177
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:14 PM"
  },
  {
    "name": "DataTable: Table",
    "passed": 34,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 35,
    "duration": 1959,
    "type": "report",
    "datatable-table": {
      "name": "datatable-table",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 212,
      "type": "testcase",
      "test non-DataTable construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test non-DataTable construction",
        "duration": 4
      },
      "default bodyView should be DataTable.BodyView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "default bodyView should be DataTable.BodyView",
        "duration": 58
      },
      "default headerView should be DataTable.HeaderView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "default headerView should be DataTable.HeaderView",
        "duration": 116
      },
      "default footerView should be undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "default footerView should be undefined",
        "duration": 13
      }
    },
    "relayed APIs (getCell, getRow, etc)": {
      "name": "relayed APIs (getCell, getRow, etc)",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 4,
      "duration": 203,
      "type": "testcase",
      "test getCell() passes through to bodyView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getCell() passes through to bodyView",
        "duration": 37
      },
      "test getRow() passes through to bodyView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRow() passes through to bodyView",
        "duration": 36
      },
      "test getRecord() passes through to bodyView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord() passes through to bodyView",
        "duration": 118
      },
      "test getColumn() passes through to bodyView": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test getColumn() passes through to bodyView"
      }
    },
    "getClassName": {
      "name": "getClassName",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 31,
      "type": "testcase",
      "test standalone getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test standalone getClassName()",
        "duration": 16
      },
      "test host-relayed getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test host-relayed getClassName()",
        "duration": 14
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 145,
      "type": "testcase",
      "test nested columns are flattened into displayColumns": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test nested columns are flattened into displayColumns",
        "duration": 28
      },
      "test headerView is instantiated with full column array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test headerView is instantiated with full column array",
        "duration": 28
      },
      "test footerView is instantiated with full column array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test footerView is instantiated with full column array",
        "duration": 28
      },
      "test bodyView is instantiated with displayColumns": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test bodyView is instantiated with displayColumns",
        "duration": 28
      },
      "test changing columns config propagates to the views": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test changing columns config propagates to the views",
        "duration": 30
      }
    },
    "caption attribute": {
      "name": "caption attribute",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 255,
      "type": "testcase",
      "configured caption should render to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "configured caption should render to DOM",
        "duration": 59
      },
      "set('caption', null) should remove caption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('caption', null) should remove caption",
        "duration": 62
      },
      "set('caption', '') should remove caption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('caption', '') should remove caption",
        "duration": 60
      },
      "set('caption', newVal) should update DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('caption', newVal) should update DOM",
        "duration": 60
      }
    },
    "summary attribute": {
      "name": "summary attribute",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 221,
      "type": "testcase",
      "configured summary should render to DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "configured summary should render to DOM",
        "duration": 54
      },
      "set('summary', null) should empty summary": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('summary', null) should empty summary",
        "duration": 51
      },
      "set('summary', '') should empty summary": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('summary', '') should empty summary",
        "duration": 63
      },
      "set('summary', newVal) should update DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('summary', newVal) should update DOM",
        "duration": 53
      }
    },
    "width attribute": {
      "name": "width attribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 186,
      "type": "testcase",
      "configured width should set table width": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "configured width should set table width",
        "duration": 60
      },
      "set('width', newVal) should update table width": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('width', newVal) should update table width",
        "duration": 52
      },
      "set('width', '') should allow natural table width": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('width', '') should allow natural table width",
        "duration": 62
      }
    },
    "render": {
      "name": "render",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 615,
      "type": "testcase",
      "render() should create a <table>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should create a <table>",
        "duration": 59
      },
      "render() should fire the renderTable event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire the renderTable event",
        "duration": 56
      },
      "render() should fire renderHeader if headerView is set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire renderHeader if headerView is set",
        "duration": 45
      },
      "render() should fire renderBody if bodyView is set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire renderBody if bodyView is set",
        "duration": 44
      },
      "render() should fire renderFooter if footerView is set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire renderFooter if footerView is set",
        "duration": 58
      },
      "render() should call render() on the headerView if set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should call render() on the headerView if set",
        "duration": 122
      },
      "render() should call render() on the bodyView if set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should call render() on the bodyView if set",
        "duration": 39
      },
      "render() should call render() on the footerView if set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should call render() on the footerView if set",
        "duration": 49
      },
      "Shared ModelList should not generate duplicate ids": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Shared ModelList should not generate duplicate ids",
        "duration": 112
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:17 PM"
  },
  {
    "name": "DataTable: Sortable",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 709,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 475,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 30
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 17
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 21
      },
      "test sortable values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sortable values",
        "duration": 215
      },
      "test set('sortable')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('sortable')",
        "duration": 25
      },
      "test sortBy values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test sortBy values",
        "duration": 120
      },
      "test set('sortBy')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('sortBy')",
        "duration": 23
      }
    },
    "DataTable.Sortable tests": {
      "name": "DataTable.Sortable tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 155,
      "type": "testcase",
      "test ui triggered sort": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ui triggered sort",
        "duration": 103
      },
      "sorting a column with null values should group the nulls": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "sorting a column with null values should group the nulls",
        "duration": 42
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:19 PM"
  },
  {
    "name": "Datatable: Scroll",
    "passed": 21,
    "failed": 0,
    "errors": 0,
    "ignored": 2,
    "total": 23,
    "duration": 3005,
    "type": "report",
    "DataTable: Scroll": {
      "name": "DataTable: Scroll",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 2841,
      "type": "testsuite",
      "lifecycle and instantiation": {
        "name": "lifecycle and instantiation",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 60,
        "type": "testcase",
        "Y.DataTable should be augmented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.DataTable should be augmented",
          "duration": 20
        },
        "Y.DataTable.Base should not be augmented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.DataTable.Base should not be augmented",
          "duration": 17
        },
        "Y.DataTable constructor should not error": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.DataTable constructor should not error",
          "duration": 20
        }
      },
      "scrollable attribute": {
        "name": "scrollable attribute",
        "passed": 18,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 18,
        "duration": 2763,
        "type": "testcase",
        "test scrollable values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test scrollable values",
          "duration": 159
        },
        "test set('scrollable')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test set('scrollable')",
          "duration": 26
        },
        "render() with 'scrollable' unset should not include scrolling UI": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with 'scrollable' unset should not include scrolling UI",
          "duration": 160
        },
        "render() with scrollable set, but neither width\/height should not render scroll UI": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable set, but neither width\/height should not render scroll UI",
          "duration": 289
        },
        "render() with scrollable: x + width should render x scroller": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable: x + width should render x scroller",
          "duration": 96
        },
        "render() with scrollable: y + height should render y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable: y + height should render y scroll DOM",
          "duration": 130
        },
        "render() with scrollable: xy + height, width should render x and y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() with scrollable: xy + height, width should render x and y scroll DOM",
          "duration": 146
        },
        "set('scrollable', 'x') after render() should add x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'x') after render() should add x scroll DOM",
          "duration": 107
        },
        "set('scrollable', 'y') after render() should add y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'y') after render() should add y scroll DOM",
          "duration": 136
        },
        "set('scrollable', 'xy') after render() should add y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'xy') after render() should add y scroll DOM",
          "duration": 217
        },
        "set('scrollable', 'x') from 'xy' should remove y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'x') from 'xy' should remove y scroll DOM",
          "duration": 147
        },
        "set('scrollable', 'y') from 'xy' should remove x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'y') from 'xy' should remove x scroll DOM",
          "duration": 144
        },
        "set('scrollable', false) from 'x' should remove x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', false) from 'x' should remove x scroll DOM",
          "duration": 115
        },
        "set('scrollable', false) from 'y' should remove y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', false) from 'y' should remove y scroll DOM",
          "duration": 133
        },
        "set('scrollable', false) from 'xy' should remove x and y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', false) from 'xy' should remove x and y scroll DOM",
          "duration": 134
        },
        "set('scrollable', 'x') from 'y' should add x scroll DOM and remove y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'x') from 'y' should add x scroll DOM and remove y scroll DOM",
          "duration": 139
        },
        "set('scrollable', 'y') from 'x' should add y scroll DOM and remove x scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'y') from 'x' should add y scroll DOM and remove x scroll DOM",
          "duration": 148
        },
        "set('scrollable', 'xy') from 'y' should add x scroll DOM outside y scroll DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set('scrollable', 'xy') from 'y' should add x scroll DOM outside y scroll DOM",
          "duration": 144
        }
      }
    },
    "y scrollable": {
      "name": "y scrollable",
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 2,
      "duration": 89,
      "type": "testsuite",
      "y scroll": {
        "name": "y scroll",
        "passed": 0,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 2,
        "duration": 79,
        "type": "testcase",
        "test scroll lock between virtual scrollbar and y scroller": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test scroll lock between virtual scrollbar and y scroller"
        },
        "virtual scrollbar syncs scrollTop with y scroller": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "virtual scrollbar syncs scrollTop with y scroller"
        }
      },
      "xy scroll": {
        "name": "xy scroll",
        "passed": 0,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 0,
        "duration": 1,
        "type": "testcase"
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:23 PM"
  },
  {
    "name": "DataTable: Mutable",
    "passed": 98,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 98,
    "duration": 2828,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 316,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 47
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 17
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 62
      },
      "test autoSync values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test autoSync values",
        "duration": 162
      },
      "test set('autoSync')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('autoSync')",
        "duration": 22
      }
    },
    "addColumn": {
      "name": "addColumn",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 275,
      "type": "testcase",
      "test addColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn() does nothing",
        "duration": 26
      },
      "test addColumn(string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(string)",
        "duration": 20
      },
      "test addColumn(config)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(config)",
        "duration": 23
      },
      "test addColumn(string, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(string, number)",
        "duration": 21
      },
      "test addColumn(config, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(config, number)",
        "duration": 23
      },
      "test addColumn(string, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(string, [number, number])",
        "duration": 22
      },
      "test addColumn(config, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addColumn(config, [number, number])",
        "duration": 23
      },
      "addColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event should fire",
        "duration": 22
      },
      "addColumn event should have column config and index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event should have column config and index",
        "duration": 24
      },
      "addColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event should be preventable",
        "duration": 21
      },
      "addColumn event e.index modification should update destination": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn event e.index modification should update destination",
        "duration": 22
      },
      "addColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addColumn should be chainable",
        "duration": 21
      }
    },
    "modifyColumn": {
      "name": "modifyColumn",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 216,
      "type": "testcase",
      "test modifyColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn() does nothing",
        "duration": 20
      },
      "test modifyColumn(string) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn(string) does nothing",
        "duration": 19
      },
      "test modifyColumn(string, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn(string, obj)",
        "duration": 20
      },
      "test modifyColumn(number, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn(number, obj)",
        "duration": 21
      },
      "test modifyColumn([number, number], obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test modifyColumn([number, number], obj)",
        "duration": 24
      },
      "modifyColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event should fire",
        "duration": 22
      },
      "modifyColumn event should have column config and newColumnDef": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event should have column config and newColumnDef",
        "duration": 20
      },
      "modifyColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event should be preventable",
        "duration": 22
      },
      "modifyColumn event e.newColumnDef modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn event e.newColumnDef modification should apply",
        "duration": 20
      },
      "modifyColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyColumn should be chainable",
        "duration": 23
      }
    },
    "removeColumn": {
      "name": "removeColumn",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 214,
      "type": "testcase",
      "test removeColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn() does nothing",
        "duration": 22
      },
      "test removeColumn(string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn(string)",
        "duration": 26
      },
      "test removeColumn(number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn(number)",
        "duration": 22
      },
      "test removeColumn([number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test removeColumn([number, number])",
        "duration": 23
      },
      "removeColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event should fire",
        "duration": 23
      },
      "removeColumn event should have column config": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event should have column config",
        "duration": 26
      },
      "removeColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event should be preventable",
        "duration": 22
      },
      "removeColumn event e.column modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn event e.column modification should apply",
        "duration": 23
      },
      "removeColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeColumn should be chainable",
        "duration": 23
      }
    },
    "moveColumn": {
      "name": "moveColumn",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 370,
      "type": "testcase",
      "test moveColumn() does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn() does nothing",
        "duration": 22
      },
      "test moveColumn(name) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(name) does nothing",
        "duration": 24
      },
      "test moveColumn(string, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(string, number)",
        "duration": 25
      },
      "test moveColumn(number, number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(number, number)",
        "duration": 26
      },
      "test moveColumn([number, number], number)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn([number, number], number)",
        "duration": 25
      },
      "test moveColumn(string, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(string, [number, number])",
        "duration": 26
      },
      "test moveColumn(number, [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn(number, [number, number])",
        "duration": 25
      },
      "test moveColumn([number, number], [number, number])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test moveColumn([number, number], [number, number])",
        "duration": 26
      },
      "moveColumn event should fire": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event should fire",
        "duration": 25
      },
      "moveColumn event should have column and index": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event should have column and index",
        "duration": 23
      },
      "moveColumn event should be preventable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event should be preventable",
        "duration": 23
      },
      "moveColumn event e.column modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event e.column modification should apply",
        "duration": 25
      },
      "moveColumn event e.index modification should apply": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn event e.index modification should apply",
        "duration": 25
      },
      "moveColumn should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "moveColumn should be chainable",
        "duration": 31
      }
    },
    "addRow": {
      "name": "addRow",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 223,
      "type": "testcase",
      "addRow() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow() should do nothing",
        "duration": 82
      },
      "addRow(data) should create a new Model in the data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data) should create a new Model in the data",
        "duration": 25
      },
      "addRow(data) should fire the data's add event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data) should fire the data's add event",
        "duration": 26
      },
      "addRow(data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data, { sync: true }) should trigger Model sync",
        "duration": 23
      },
      "addRow(data) with autoSync:true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(data) with autoSync:true should trigger Model sync",
        "duration": 23
      },
      "addRow(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRow(...) should be chainable",
        "duration": 28
      }
    },
    "addRows": {
      "name": "addRows",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 155,
      "type": "testcase",
      "addRows() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows() should do nothing",
        "duration": 23
      },
      "addRows([data]) should create a new Model in the data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data]) should create a new Model in the data",
        "duration": 28
      },
      "addRows([data]) should fire the data's add event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data]) should fire the data's add event",
        "duration": 26
      },
      "addRows([data], { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data], { sync: true }) should trigger Model sync",
        "duration": 26
      },
      "addRows([data]) with autoSync:true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows([data]) with autoSync:true should trigger Model sync",
        "duration": 26
      },
      "addRows(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "addRows(...) should be chainable",
        "duration": 24
      }
    },
    "modifyRow": {
      "name": "modifyRow",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 421,
      "type": "testcase",
      "modifyRow() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow() should do nothing",
        "duration": 21
      },
      "modifyRow(index, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data) should change the Model attributes",
        "duration": 25
      },
      "modifyRow(id, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data) should change the Model attributes",
        "duration": 21
      },
      "modifyRow(clientId, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data) should change the Model attributes",
        "duration": 22
      },
      "modifyRow(model, data) should change the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data) should change the Model attributes",
        "duration": 22
      },
      "modifyRow(index, data) should fire the model's change event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data) should fire the model's change event",
        "duration": 26
      },
      "modifyRow(id, data) should fire the model's change event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data) should fire the model's change event",
        "duration": 23
      },
      "modifyRow(clientId, data) should fire the model's model event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data) should fire the model's model event",
        "duration": 24
      },
      "modifyRow(model, data) should fire the model's change event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data) should fire the model's change event",
        "duration": 23
      },
      "modifyRow(index, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data, { sync: true }) should trigger Model sync",
        "duration": 22
      },
      "modifyRow(id, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data, { sync: true }) should trigger Model sync",
        "duration": 24
      },
      "modifyRow(clientId, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data, { sync: true }) should trigger Model sync",
        "duration": 22
      },
      "modifyRow(model, data, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data, { sync: true }) should trigger Model sync",
        "duration": 23
      },
      "modifyRow(index, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(index, data) with autoSync: true should trigger Model sync",
        "duration": 23
      },
      "modifyRow(id, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(id, data) with autoSync: true should trigger Model sync",
        "duration": 23
      },
      "modifyRow(clientId, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(clientId, data) with autoSync: true should trigger Model sync",
        "duration": 23
      },
      "modifyRow(model, data) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(model, data) with autoSync: true should trigger Model sync",
        "duration": 23
      },
      "modifyRow(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "modifyRow(...) should be chainable",
        "duration": 21
      }
    },
    "removeRow": {
      "name": "removeRow",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 531,
      "type": "testcase",
      "removeRow() should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow() should do nothing",
        "duration": 23
      },
      "removeRow(index) should delete the Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index) should delete the Model",
        "duration": 24
      },
      "removeRow(id) should delete the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id) should delete the Model attributes",
        "duration": 22
      },
      "removeRow(clientId) should delete the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId) should delete the Model attributes",
        "duration": 23
      },
      "removeRow(model) should delete the Model attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model) should delete the Model attributes",
        "duration": 24
      },
      "removeRow(index) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index) should fire the data's remove event",
        "duration": 26
      },
      "removeRow(id, data) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id, data) should fire the data's remove event",
        "duration": 22
      },
      "removeRow(clientId, data) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId, data) should fire the data's remove event",
        "duration": 24
      },
      "removeRow(model, data) should fire the data's remove event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model, data) should fire the data's remove event",
        "duration": 23
      },
      "removeRow(index, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index, { sync: true }) should trigger Model sync",
        "duration": 25
      },
      "removeRow(id, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id, { sync: true }) should trigger Model sync",
        "duration": 24
      },
      "removeRow(clientId, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId, { sync: true }) should trigger Model sync",
        "duration": 37
      },
      "removeRow(model, { sync: true }) should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model, { sync: true }) should trigger Model sync",
        "duration": 87
      },
      "removeRow(index) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(index) with autoSync: true should trigger Model sync",
        "duration": 27
      },
      "removeRow(id) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(id) with autoSync: true should trigger Model sync",
        "duration": 23
      },
      "removeRow(clientId) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(clientId) with autoSync: true should trigger Model sync",
        "duration": 25
      },
      "removeRow(model) with autoSync: true should trigger Model sync": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(model) with autoSync: true should trigger Model sync",
        "duration": 27
      },
      "removeRow(...) should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removeRow(...) should be chainable",
        "duration": 22
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:27 PM"
  },
  {
    "name": "DataTable: Message",
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 11,
    "duration": 442,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 341,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 34
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 20
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 71
      },
      "test showMessaegs values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessaegs values",
        "duration": 170
      },
      "test set('showMessages')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test set('showMessages')",
        "duration": 26
      }
    },
    "datatable-message": {
      "name": "datatable-message",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 25,
      "type": "testcase",
      "test showMessage()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessage()",
        "duration": 1
      },
      "test showMessage(string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessage(string)",
        "duration": 0
      },
      "test showMessage(intlString)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test showMessage(intlString)",
        "duration": 0
      },
      "test hideMessage()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test hideMessage()",
        "duration": 0
      },
      "adding rows should hide the message": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "adding rows should hide the message",
        "duration": 1
      },
      "removing all rows should show the emptyMessage": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removing all rows should show the emptyMessage",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:29 PM"
  },
  {
    "name": "DataTable: Head",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 409,
    "type": "report",
    "datatable-head": {
      "name": "datatable-head",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 4,
      "type": "testcase",
      "test non-DataTable construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test non-DataTable construction",
        "duration": 2
      }
    },
    "nested headers": {
      "name": "nested headers",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 39,
      "type": "testcase",
      "columns configured with children should result in multiple thead rows": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns configured with children should result in multiple thead rows",
        "duration": 35
      }
    },
    "abbr column config": {
      "name": "abbr column config",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 73,
      "type": "testcase",
      "column abbr should be added to the <th> as attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column abbr should be added to the <th> as attribute",
        "duration": 71
      }
    },
    "className column config": {
      "name": "className column config",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 31,
      "type": "testcase",
      "column className should be added to the <th>'s class attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column className should be added to the <th>'s class attribute",
        "duration": 21
      }
    },
    "_id column config": {
      "name": "_id column config",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 22,
      "type": "testcase",
      "column _id should be added to the <th>'s class attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column _id should be added to the <th>'s class attribute",
        "duration": 22
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 92,
      "type": "testcase",
      "changing columns should rerender headers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changing columns should rerender headers",
        "duration": 92
      }
    },
    "getClassName": {
      "name": "getClassName",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 60,
      "type": "testcase",
      "test standalone getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test standalone getClassName()",
        "duration": 28
      },
      "test host-relayed getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test host-relayed getClassName()",
        "duration": 27
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:30 PM"
  },
  {
    "name": "DataTable: Core",
    "passed": 31,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 34,
    "duration": 1099,
    "type": "report",
    "Class extension": {
      "name": "Class extension",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 38,
      "type": "testcase",
      "testClassExtension": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClassExtension",
        "duration": 38
      }
    },
    "getRecord": {
      "name": "getRecord",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 121,
      "type": "testcase",
      "test getRecord(index)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(index)",
        "duration": 26
      },
      "test getRecord(id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(id)",
        "duration": 59
      },
      "test getRecord(clientId)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(clientId)",
        "duration": 23
      }
    },
    "getColumn": {
      "name": "getColumn",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 88,
      "type": "testcase",
      "test getColumn(key)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(key)",
        "duration": 17
      },
      "test getColumn(name)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(name)",
        "duration": 17
      },
      "test getColumn(index)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(index)",
        "duration": 19
      },
      "test getColumn([ index, index ])": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn([ index, index ])",
        "duration": 16
      },
      "test getColumn(column)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getColumn(column)",
        "duration": 18
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 13,
      "duration": 425,
      "type": "testcase",
      "columns should default from data array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from data array",
        "duration": 56
      },
      "columns should default from data ModelList's model class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from data ModelList's model class",
        "duration": 70
      },
      "columns should default from recordType": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from recordType",
        "duration": 52
      },
      "columns should default from data array after empty instantiation": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "columns should default from data array after empty instantiation"
      },
      "columns should default from data ModelList after empty instantiation": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "columns should default from data ModelList after empty instantiation"
      },
      "columns should default from recordType after empty instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "columns should default from recordType after empty instantiation",
        "duration": 58
      },
      "string columns should be converted to objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "string columns should be converted to objects",
        "duration": 16
      },
      "test columnset pass through": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test columnset pass through",
        "duration": 20
      },
      "duplicate keys should have unique column ids": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "duplicate keys should have unique column ids",
        "duration": 18
      },
      "child columns should get _parent property pointing to their parent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "child columns should get _parent property pointing to their parent",
        "duration": 18
      },
      "set('columns', VALUE) should update getColumn(NAME) map": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('columns', VALUE) should update getColumn(NAME) map",
        "duration": 21
      },
      "get('columns.KEY') should return column object based on _id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "get('columns.KEY') should return column object based on _id",
        "duration": 22
      },
      "test col.field alias for col.name": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test col.field alias for col.name",
        "duration": 16
      }
    },
    "data attribute": {
      "name": "data attribute",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 224,
      "type": "testcase",
      "test array as data value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test array as data value",
        "duration": 28
      },
      "test ModelList passed as data value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ModelList passed as data value",
        "duration": 21
      },
      "set('data', array) should update the existing ModelList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', array) should update the existing ModelList",
        "duration": 28
      },
      "set('data', modelList) should replace the existing ModelList": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', modelList) should replace the existing ModelList",
        "duration": 21
      },
      "set('data', garbage) should do nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', garbage) should do nothing",
        "duration": 27
      },
      "set('data', modelList) should fire a dataChange": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', modelList) should fire a dataChange",
        "duration": 34
      },
      "test recordset pass through": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test recordset pass through",
        "duration": 49
      }
    },
    "recordType attribute": {
      "name": "recordType attribute",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 5,
      "duration": 115,
      "type": "testcase",
      "test instantiation with recordType: object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test instantiation with recordType: object",
        "duration": 23
      },
      "test instantiation with recordType: array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test instantiation with recordType: array",
        "duration": 22
      },
      "test instantiation with recordType: Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test instantiation with recordType: Model",
        "duration": 22
      },
      "get('recordType') should return the data modelList.model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "get('recordType') should return the data modelList.model",
        "duration": 43
      },
      "recordType should default from keys of first object in data array": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "recordType should default from keys of first object in data array"
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:32 PM"
  },
  {
    "name": "DataTable: Column Widths",
    "passed": 8,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 8,
    "duration": 857,
    "type": "report",
    "lifecycle and instantiation": {
      "name": "lifecycle and instantiation",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 127,
      "type": "testcase",
      "Y.DataTable should be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable should be augmented",
        "duration": 21
      },
      "Y.DataTable.Base should not be augmented": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable.Base should not be augmented",
        "duration": 17
      },
      "Y.DataTable constructor should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "Y.DataTable constructor should not error",
        "duration": 87
      }
    },
    "render": {
      "name": "render",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 609,
      "type": "testcase",
      "colgroup should be added for all DataTables": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "colgroup should be added for all DataTables",
        "duration": 307
      },
      "col width should be set from configuration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "col width should be set from configuration",
        "duration": 119
      },
      "column changes should propagate to the <col>s": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "column changes should propagate to the <col>s",
        "duration": 144
      }
    },
    "setColumnWidth": {
      "name": "setColumnWidth",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 43,
      "type": "testcase",
      "test setColumnWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test setColumnWidth",
        "duration": 24
      },
      "setColumnWidth should be chainable": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "setColumnWidth should be chainable",
        "duration": 18
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:34 PM"
  },
  {
    "name": "DataTable: Body",
    "passed": 31,
    "failed": 0,
    "errors": 0,
    "ignored": 3,
    "total": 34,
    "duration": 1280,
    "type": "report",
    "datatable-body": {
      "name": "datatable-body",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 10,
      "type": "testcase",
      "test non-DataTable construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test non-DataTable construction",
        "duration": 8
      }
    },
    "getCell": {
      "name": "getCell",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 427,
      "type": "testcase",
      "getCell([row, col]) should return <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell([row, col]) should return <td>",
        "duration": 32
      },
      "getCell(tdNode) should return <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(tdNode) should return <td>",
        "duration": 76
      },
      "getCell(childNode) should return <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(childNode) should return <td>",
        "duration": 29
      },
      "getCell([row, col], shiftString) should return relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell([row, col], shiftString) should return relative <td>",
        "duration": 31
      },
      "getCell(tdNode, shiftString) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(tdNode, shiftString) should return the relative <td>",
        "duration": 34
      },
      "getCell(childNode, shiftString) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(childNode, shiftString) should return the relative <td>",
        "duration": 115
      },
      "getCell([row, col], shiftArray) should return relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell([row, col], shiftArray) should return relative <td>",
        "duration": 33
      },
      "getCell(tdNode, shiftArray) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(tdNode, shiftArray) should return the relative <td>",
        "duration": 29
      },
      "getCell(childNode, shiftArray) should return the relative <td>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getCell(childNode, shiftArray) should return the relative <td>",
        "duration": 30
      }
    },
    "getRow": {
      "name": "getRow",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 91,
      "type": "testcase",
      "getRow(index) should return <tr>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRow(index) should return <tr>",
        "duration": 31
      },
      "getRow(model) should return the <tr>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRow(model) should return the <tr>",
        "duration": 30
      },
      "getRow(model.clientId) should return the <tr>": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRow(model.clientId) should return the <tr>",
        "duration": 28
      }
    },
    "getRecord": {
      "name": "getRecord",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 7,
      "duration": 143,
      "type": "testcase",
      "getRecord(node) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(node) should return the corresponding Model",
        "duration": 31
      },
      "getRecord(childNode) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(childNode) should return the corresponding Model",
        "duration": 29
      },
      "getRecord(rowId) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(rowId) should return the corresponding Model",
        "duration": 32
      },
      "getRecord(childElId) should return the corresponding Model": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "getRecord(childElId) should return the corresponding Model",
        "duration": 33
      },
      "getRecord(index) should return modelList.item(index)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getRecord(index) should return modelList.item(index)"
      },
      "getRecord(model.id) should return the corresponding Model": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getRecord(model.id) should return the corresponding Model"
      },
      "getRecord(model.clientId) should return the corresponding Model": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "getRecord(model.clientId) should return the corresponding Model"
      }
    },
    "columns attribute": {
      "name": "columns attribute",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 232,
      "type": "testcase",
      "formatter adding to o.className should add to cell classes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "formatter adding to o.className should add to cell classes",
        "duration": 34
      },
      "formatter adding to o.rowClass should add to row classes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "formatter adding to o.rowClass should add to row classes",
        "duration": 34
      },
      "nodeFormatter should be able to add classes to o.cell": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "nodeFormatter should be able to add classes to o.cell",
        "duration": 30
      },
      "nodeFormatter should be able to add row classes from o.cell.ancestor()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "nodeFormatter should be able to add row classes from o.cell.ancestor()",
        "duration": 33
      },
      "emptyCellValue should apply for missing, null, or empty string values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "emptyCellValue should apply for missing, null, or empty string values",
        "duration": 34
      },
      "changing columns config propagates to the UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changing columns config propagates to the UI",
        "duration": 41
      }
    },
    "getClassName": {
      "name": "getClassName",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 30,
      "type": "testcase",
      "test standalone getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test standalone getClassName()",
        "duration": 14
      },
      "test host-relayed getClassName()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test host-relayed getClassName()",
        "duration": 13
      }
    },
    "modelList changes": {
      "name": "modelList changes",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 264,
      "type": "testcase",
      "replacing the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "replacing the modelList should update UI",
        "duration": 37
      },
      "changes to the modelList after replacing it should update the UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changes to the modelList after replacing it should update the UI",
        "duration": 45
      },
      "reset()ing the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "reset()ing the modelList should update UI",
        "duration": 39
      },
      "adding Models to the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "adding Models to the modelList should update UI",
        "duration": 38
      },
      "removing Models from the modelList should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "removing Models from the modelList should update UI",
        "duration": 65
      },
      "changing Model attributes should update UI": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "changing Model attributes should update UI",
        "duration": 36
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:37 PM"
  },
  {
    "name": "DataTable: Base",
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 16,
    "duration": 996,
    "type": "report",
    "DataTable.Base tests": {
      "name": "DataTable.Base tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 170,
      "type": "testcase",
      "DataTable.Base should implement Core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable.Base should implement Core",
        "duration": 19
      },
      "DataTable.Base should set default view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable.Base should set default view",
        "duration": 18
      },
      "DataTable.Base should preserve properties on the namespace": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable.Base should preserve properties on the namespace",
        "duration": 111
      }
    },
    "DataTable tests": {
      "name": "DataTable tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 65,
      "type": "testcase",
      "DataTable should implement Core": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable should implement Core",
        "duration": 17
      },
      "DataTable should be a subclass of Y.DataTable.Base": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable should be a subclass of Y.DataTable.Base",
        "duration": 26
      },
      "DataTable should default view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "DataTable should default view",
        "duration": 18
      }
    },
    "DataTable UI tests": {
      "name": "DataTable UI tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 256,
      "type": "testcase",
      "set('data', modelList) should update the table": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set('data', modelList) should update the table",
        "duration": 168
      },
      "set(<core attr>, newVal) should relay to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "set(<core attr>, newVal) should relay to view",
        "duration": 67
      }
    },
    "delegate": {
      "name": "delegate",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 84,
      "type": "testcase",
      "test table.delegate() pases through to node.delegate()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test table.delegate() pases through to node.delegate()",
        "duration": 78
      }
    },
    "getCell": {
      "name": "getCell",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 38,
      "type": "testcase",
      "test getCell() passes through to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getCell() passes through to view",
        "duration": 35
      }
    },
    "getRow": {
      "name": "getRow",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 34,
      "type": "testcase",
      "test getRow() passes through to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRow() passes through to view",
        "duration": 31
      }
    },
    "getRecord": {
      "name": "getRecord",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 36,
      "type": "testcase",
      "test getRecord(unknown) passes through to view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test getRecord(unknown) passes through to view",
        "duration": 33
      }
    },
    "render": {
      "name": "render",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 179,
      "type": "testcase",
      "render() should fire the renderView event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire the renderView event",
        "duration": 83
      },
      "render() should fire renderView if view is set": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should fire renderView if view is set",
        "duration": 37
      },
      "render() should bubble renderX events from view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "render() should bubble renderX events from view",
        "duration": 39
      }
    },
    "syncUI": {
      "name": "syncUI",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 39,
      "type": "testcase",
      "syncUI should call render() on the view": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "syncUI should call render() on the view",
        "duration": 36
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:39 PM"
  },
  {
    "name": "Custom Event: AOP",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 5,
    "total": 23,
    "duration": 191,
    "type": "report",
    "Y.Do": {
      "name": "Y.Do",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 18,
      "duration": 62,
      "type": "testcase",
      "test before": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test before",
        "duration": 2
      },
      "test after": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test after",
        "duration": 1
      },
      "test multiple subscribers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test multiple subscribers",
        "duration": 1
      },
      "test multiple methods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test multiple methods",
        "duration": 1
      },
      "test detach": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test detach",
        "duration": 2
      },
      "test detach multiple methods": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test detach multiple methods",
        "duration": 1
      },
      "test context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test context",
        "duration": 2
      },
      "test additional args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test additional args",
        "duration": 1
      },
      "test altered args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test altered args",
        "duration": 1
      },
      "test chained altered args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test chained altered args",
        "duration": 2
      },
      "test altered return": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test altered return",
        "duration": 1
      },
      "test chained altered return": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test chained altered return",
        "duration": 1
      },
      "test originalRetVal not overwritten by nested call": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test originalRetVal not overwritten by nested call"
      },
      "test halt before": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test halt before",
        "duration": 1
      },
      "test halt after": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test halt after",
        "duration": 1
      },
      "test prevent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test prevent",
        "duration": 1
      },
      "test before\/after with falsy context binds args": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test before\/after with falsy context binds args"
      },
      "test ET altered return": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ET altered return",
        "duration": 2
      }
    },
    "EventTarget on\/before\/after": {
      "name": "EventTarget on\/before\/after",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 3,
      "total": 5,
      "duration": 21,
      "type": "testcase",
      "test target.on(fn, host, methodName)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(fn, host, methodName)",
        "duration": 3
      },
      "test target.on(fn, host, methodName, context)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(fn, host, methodName, context)",
        "duration": 1
      },
      "test target.on(fn, host, noSuchMethod)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on(fn, host, noSuchMethod)"
      },
      "test target.on([fnA, fnB, fnC], host, noSuchMethod)": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on([fnA, fnB, fnC], host, noSuchMethod)"
      },
      "test target.before() is an alias for target.on()": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.before() is an alias for target.on()"
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:40 PM"
  },
  {
    "name": "Custom Event: Complex",
    "passed": 55,
    "failed": 0,
    "errors": 0,
    "ignored": 1,
    "total": 56,
    "duration": 347,
    "type": "report",
    "Custom Event: Complex": {
      "name": "Custom Event: Complex",
      "passed": 28,
      "failed": 0,
      "errors": 0,
      "ignored": 1,
      "total": 29,
      "duration": 162,
      "type": "testsuite",
      "Custom Event Complex": {
        "name": "Custom Event Complex",
        "passed": 28,
        "failed": 0,
        "errors": 0,
        "ignored": 1,
        "total": 29,
        "duration": 160,
        "type": "testcase",
        "testAugment": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAugment",
          "duration": 20
        },
        "testExtend": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testExtend",
          "duration": 2
        },
        "testPrefix": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPrefix",
          "duration": 3
        },
        "testDetachKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDetachKey",
          "duration": 2
        },
        "testDetachAllByKey": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDetachAllByKey",
          "duration": 1
        },
        "testChain": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testChain",
          "duration": 16
        },
        "testObjType": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testObjType",
          "duration": 2
        },
        "testBubble": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testBubble",
          "duration": 2
        },
        "testPreventFnOnce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventFnOnce",
          "duration": 1
        },
        "testPreventFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventFromBubbleTarget",
          "duration": 2
        },
        "testPreventedFnOnceFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventedFnOnceFromBubbleTarget",
          "duration": 3
        },
        "testStopFnOnce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStopFnOnce",
          "duration": 2
        },
        "testStopFnFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStopFnFromBubbleTarget",
          "duration": 9
        },
        "testStopFnOnceFromBubbleTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStopFnOnceFromBubbleTarget",
          "duration": 5
        },
        "testDetachHandle": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testDetachHandle",
          "duration": 3
        },
        "testBroadcast": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testBroadcast",
          "duration": 9
        },
        "test_fire_once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_fire_once",
          "duration": 2
        },
        "test_async_fireonce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_async_fireonce",
          "duration": 1
        },
        "testAlternativeSequencePost300GA": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testAlternativeSequencePost300GA",
          "duration": 3
        },
        "testStarSubscriber": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testStarSubscriber",
          "duration": 3
        },
        "testPreventBubble": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testPreventBubble",
          "duration": 1
        },
        "test_listen_once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_listen_once",
          "duration": 2
        },
        "test_array_type_param": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_array_type_param",
          "duration": 2
        },
        "test_bubble_config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubble_config",
          "duration": 2
        },
        "test_onceAfter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_onceAfter",
          "duration": 3
        },
        "test_multiple_object_publish": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_multiple_object_publish",
          "duration": 1
        },
        "testIndividualCustomEventMonitoring": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "testIndividualCustomEventMonitoring",
          "duration": 3
        },
        "ignore: Does not work currently due to infinite recursion - testEventTargetMonitoring": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": " Does not work currently due to infinite recursion - testEventTargetMonitoring"
        },
        "test_node_publish": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_node_publish",
          "duration": 6
        }
      }
    },
    "Firing Sequence": {
      "name": "Firing Sequence",
      "passed": 27,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 27,
      "duration": 111,
      "type": "testsuite",
      "Single Event Sequence": {
        "name": "Single Event Sequence",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 21,
        "type": "testcase",
        "test_seqSimple": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqSimple",
          "duration": 2
        },
        "test_seqDefaultFnComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultFnComplete",
          "duration": 1
        },
        "test_seqDefaultFnPrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultFnPrevented",
          "duration": 2
        },
        "test_seqPreventedFnComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqPreventedFnComplete",
          "duration": 1
        },
        "test_seqPreventedFnPrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqPreventedFnPrevented",
          "duration": 1
        },
        "test_seqDefaultAndPreventedFnComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultAndPreventedFnComplete",
          "duration": 2
        },
        "test_seqDefaultAndPreventedFnPrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_seqDefaultAndPreventedFnPrevented",
          "duration": 1
        }
      },
      "Broadcast With Facade": {
        "name": "Broadcast With Facade",
        "passed": 13,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 13,
        "duration": 56,
        "type": "testcase",
        "test_broadcast_0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_0",
          "duration": 2
        },
        "test_broadcast_1": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1",
          "duration": 2
        },
        "test_broadcast_2": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2",
          "duration": 2
        },
        "test_broadcast_1_complete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_complete",
          "duration": 2
        },
        "test_broadcast_1_prevented_at_YUI_Instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_prevented_at_YUI_Instance",
          "duration": 2
        },
        "test_broadcast_1_stopped_at_source": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_stopped_at_source",
          "duration": 2
        },
        "test_broadcast_1_stopped_at_YUI_Instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_1_stopped_at_YUI_Instance",
          "duration": 2
        },
        "test_broadcast_2_complete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_complete",
          "duration": 2
        },
        "test_broadcast_2_prevented_at_YUI_Instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_prevented_at_YUI_Instance",
          "duration": 2
        },
        "test_broadcast_2_prevented_at_YUI_global": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_prevented_at_YUI_global",
          "duration": 3
        },
        "test_broadcast_2_stopped_at_source": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_stopped_at_source",
          "duration": 3
        },
        "test_broadcast_2_stopped_at_YUI_instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_stopped_at_YUI_instance",
          "duration": 3
        },
        "test_broadcast_2_stopped_at_YUI_global": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_broadcast_2_stopped_at_YUI_global",
          "duration": 3
        }
      },
      "Bubble Single Target": {
        "name": "Bubble Single Target",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 28,
        "type": "testcase",
        "test_bubbleComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleComplete",
          "duration": 3
        },
        "test_bubblePrevented": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubblePrevented",
          "duration": 3
        },
        "test_bubblePreventedOnTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubblePreventedOnTarget",
          "duration": 2
        },
        "test_bubbleStopped": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleStopped",
          "duration": 2
        },
        "test_bubbleStoppedOnTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleStoppedOnTarget",
          "duration": 2
        },
        "test_bubbleHalted": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleHalted",
          "duration": 1
        },
        "test_bubbleHaltedOnTarget": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_bubbleHaltedOnTarget",
          "duration": 2
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:41 PM"
  },
  {
    "name": "Custom Event Deprecated: Base",
    "passed": 132,
    "failed": 0,
    "errors": 0,
    "ignored": 13,
    "total": 145,
    "duration": 847,
    "type": "report",
    "Custom Event Deprecated: Base": {
      "name": "Custom Event Deprecated: Base",
      "passed": 129,
      "failed": 0,
      "errors": 0,
      "ignored": 8,
      "total": 137,
      "duration": 666,
      "type": "testsuite",
      "Event Target constructor": {
        "name": "Event Target constructor",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 11,
        "type": "testcase",
        "test new Y.EventTarget()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test new Y.EventTarget()",
          "duration": 1
        },
        "test new Y.EventTarget(config)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test new Y.EventTarget(config)",
          "duration": 1
        },
        "test Y.augment(Clz, Y.EventTarget)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Y.augment(Clz, Y.EventTarget)",
          "duration": 2
        },
        "test Y.extend(Clz, Y.EventTarget)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Y.extend(Clz, Y.EventTarget)",
          "duration": 1
        }
      },
      "target.on()": {
        "name": "target.on()",
        "passed": 18,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 20,
        "duration": 133,
        "type": "testcase",
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 2
        },
        "test target.on(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn)",
          "duration": 1
        },
        "test target.on(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn) allows duplicate subs",
          "duration": 2
        },
        "test target.on(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn, obj)",
          "duration": 1
        },
        "test target.on(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn, obj, args)",
          "duration": 1
        },
        "test target.on([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([type], fn)",
          "duration": 1
        },
        "test target.on([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn)",
          "duration": 1
        },
        "test target.on([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeA], fn)",
          "duration": 1
        },
        "test target.on([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([], fn) does nothing",
          "duration": 1
        },
        "test target.on([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.on({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: fn })",
          "duration": 2
        },
        "test target.on({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: true }, fn)",
          "duration": 2
        },
        "test target.on({ type: { fn: wins } }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { fn: wins } }, fn)",
          "duration": 1
        },
        "test target.on({ type: { fn: wins } }, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { fn: wins } }, fn, obj, args)",
          "duration": 1
        },
        "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)",
          "duration": 1
        },
        "test target.on({ type: { context: wins } }, callback, ctx, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({ type: { context: wins } }, callback, ctx, args)",
          "duration": 2
        },
        "test target.on(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 4
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 2
        },
        "test target.on('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('click', fn) registers custom event only",
          "duration": 1
        }
      },
      "target.after": {
        "name": "target.after",
        "passed": 14,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 16,
        "duration": 68,
        "type": "testcase",
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.after(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn)",
          "duration": 1
        },
        "test target.after(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn) allows duplicate subs",
          "duration": 1
        },
        "test target.after(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn, obj)",
          "duration": 1
        },
        "test target.after(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn, obj, args)",
          "duration": 1
        },
        "test target.after([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([type], fn)",
          "duration": 1
        },
        "test target.after([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn)",
          "duration": 2
        },
        "test target.after([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeA], fn)",
          "duration": 1
        },
        "test target.after([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([], fn) does nothing",
          "duration": 1
        },
        "test target.after([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.after([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.after({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({ type: fn })",
          "duration": 2
        },
        "test target.after({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({ type: true }, fn)",
          "duration": 2
        },
        "test target.after(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.after(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 4
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 2
        },
        "test target.after('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('click', fn) registers custom event only",
          "duration": 1
        }
      },
      "target.once": {
        "name": "target.once",
        "passed": 14,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 16,
        "duration": 66,
        "type": "testcase",
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.once(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn)",
          "duration": 1
        },
        "test target.once(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn) allows duplicate subs",
          "duration": 1
        },
        "test target.once(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn, obj)",
          "duration": 1
        },
        "test target.once(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once(type, fn, obj, args)",
          "duration": 1
        },
        "test target.once([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([type], fn)",
          "duration": 1
        },
        "test target.once([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([typeA, typeB], fn)",
          "duration": 1
        },
        "test target.once([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([typeA, typeA], fn)",
          "duration": 1
        },
        "test target.once([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once([], fn) does nothing",
          "duration": 1
        },
        "test target.once([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.once([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.once({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once({ type: fn })",
          "duration": 2
        },
        "test target.once({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once({ type: true }, fn)",
          "duration": 2
        },
        "test target.once(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.once(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 4
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 3
        },
        "test target.once('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.once('click', fn) registers custom event only",
          "duration": 1
        }
      },
      "target.onceAfter": {
        "name": "target.onceAfter",
        "passed": 15,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 17,
        "duration": 109,
        "type": "testcase",
        "test_onceAfter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_onceAfter",
          "duration": 1
        },
        "test auto-publish on subscribe": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test auto-publish on subscribe",
          "duration": 1
        },
        "test target.onceAfter(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn)",
          "duration": 1
        },
        "test target.onceAfter(type, fn) allows duplicate subs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn) allows duplicate subs",
          "duration": 1
        },
        "test target.onceAfter(type, fn, obj)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn, obj)",
          "duration": 1
        },
        "test target.onceAfter(type, fn, obj, args)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter(type, fn, obj, args)",
          "duration": 1
        },
        "test target.onceAfter([type], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([type], fn)",
          "duration": 1
        },
        "test target.onceAfter([typeA, typeB], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([typeA, typeB], fn)",
          "duration": 2
        },
        "test target.onceAfter([typeA, typeA], fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([typeA, typeA], fn)",
          "duration": 1
        },
        "test target.onceAfter([], fn) does nothing": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter([], fn) does nothing",
          "duration": 1
        },
        "test target.onceAfter([{ fn: fn, context: obj }]) does nothing": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.onceAfter([{ fn: fn, context: obj }]) does nothing"
        },
        "test target.onceAfter({ type: fn })": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter({ type: fn })",
          "duration": 2
        },
        "test target.onceAfter({ type: true }, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter({ type: true }, fn)",
          "duration": 2
        },
        "test target.onceAfter(type, { handleEvents: fn })": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.onceAfter(type, { handleEvents: fn })"
        },
        "test callback context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test callback context",
          "duration": 5
        },
        "test subscription bound args": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test subscription bound args",
          "duration": 28
        },
        "test target.onceAfter('click', fn) registers custom event only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.onceAfter('click', fn) registers custom event only",
          "duration": 2
        }
      },
      "target.detach": {
        "name": "target.detach",
        "passed": 58,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 58,
        "duration": 235,
        "type": "testcase",
        "test target.detach() with not subs is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.detach() with not subs is harmless",
          "duration": 1
        },
        "test target.detachAll() with not subs is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.detachAll() with not subs is harmless",
          "duration": 1
        },
        "test target.on() + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detach(type, fn)",
          "duration": 2
        },
        "test target.on(type, fn, thisObj) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type, fn, thisObj) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.on() + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detach(type)",
          "duration": 1
        },
        "test target.on() + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detach()",
          "duration": 1
        },
        "test target.on() + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.detachAll()",
          "duration": 1
        },
        "test target.on() + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + handle.detach()",
          "duration": 1
        },
        "test target.on('cat|__', fn) + target.detach('cat|___')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('cat|__', fn) + target.detach('cat|___')",
          "duration": 1
        },
        "test target.on('cat|__', fn) + target.detach('cat|___', fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('cat|__', fn) + target.detach('cat|___', fn)",
          "duration": 1
        },
        "test target.on('cat|__', fn) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on('cat|__', fn) + target.detach('cat|*')",
          "duration": 1
        },
        "test target.on({...}) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + target.detach(type)",
          "duration": 2
        },
        "test target.on({...}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + target.detach(type, fn)",
          "duration": 2
        },
        "test target.on({...}) + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + target.detachAll()",
          "duration": 2
        },
        "test target.on({'cat|type': fn}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({'cat|type': fn}) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.on({'cat|type': fn}) + target.detach('cat|type')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({'cat|type': fn}) + target.detach('cat|type')",
          "duration": 1
        },
        "test target.on({'cat|type': fn}) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({'cat|type': fn}) + target.detach('cat|*')",
          "duration": 2
        },
        "test target.on([type], fn) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([type], fn) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.on([type], fn) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([type], fn) + target.detach(type)",
          "duration": 1
        },
        "test target.on([typeA, typeB], fn) + target.detach(typeA)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn) + target.detach(typeA)",
          "duration": 1
        },
        "test target.on([typeA, typeB], fn) + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn) + target.detach()",
          "duration": 1
        },
        "test target.on({}) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({}) + target.detach() is harmless",
          "duration": 1
        },
        "test target.on([], fn) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([], fn) + target.detach() is harmless",
          "duration": 1
        },
        "test target.on({}) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({}) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.on([], fn) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([], fn) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.on({...}) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on({...}) + handle.detach()",
          "duration": 1
        },
        "test target.on([typeA, typeB], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeB], fn) + handle.detach()",
          "duration": 1
        },
        "test target.on([typeA, typeA], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on([typeA, typeA], fn) + handle.detach()",
          "duration": 2
        },
        "test target.on(type) + target.detach(prefix:type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(type) + target.detach(prefix:type)",
          "duration": 2
        },
        "test target.after() + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after(type, fn, thisObj) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type, fn, thisObj) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after() + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detach(type)",
          "duration": 1
        },
        "test target.after() + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detach()",
          "duration": 2
        },
        "test target.after() + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + target.detachAll()",
          "duration": 2
        },
        "test target.after() + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after() + handle.detach()",
          "duration": 1
        },
        "test target.after('cat|__', fn) + target.detach('cat|___')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('cat|__', fn) + target.detach('cat|___')",
          "duration": 1
        },
        "test target.after('cat|__', fn) + target.detach('cat|___', fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('cat|__', fn) + target.detach('cat|___', fn)",
          "duration": 1
        },
        "test target.after('cat|__', fn) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after('cat|__', fn) + target.detach('cat|*')",
          "duration": 1
        },
        "test target.after({...}) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + target.detach(type)",
          "duration": 2
        },
        "test target.after({...}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after({...}) + target.detachAll()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + target.detachAll()",
          "duration": 1
        },
        "test target.after({'cat|type': fn}) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({'cat|type': fn}) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after({'cat|type': fn}) + target.detach('cat|type')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({'cat|type': fn}) + target.detach('cat|type')",
          "duration": 2
        },
        "test target.after({'cat|type': fn}) + target.detach('cat|*')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({'cat|type': fn}) + target.detach('cat|*')",
          "duration": 2
        },
        "test target.after([type], fn) + target.detach(type, fn)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([type], fn) + target.detach(type, fn)",
          "duration": 1
        },
        "test target.after([type], fn) + target.detach(type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([type], fn) + target.detach(type)",
          "duration": 1
        },
        "test target.after([typeA, typeB], fn) + target.detach(typeA)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn) + target.detach(typeA)",
          "duration": 1
        },
        "test target.after([typeA, typeB], fn) + target.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn) + target.detach()",
          "duration": 2
        },
        "test target.after({}) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({}) + target.detach() is harmless",
          "duration": 1
        },
        "test target.after([], fn) + target.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([], fn) + target.detach() is harmless",
          "duration": 1
        },
        "test target.after({}) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({}) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.after([], fn) + handle.detach() is harmless": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([], fn) + handle.detach() is harmless",
          "duration": 1
        },
        "test target.after({...}) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after({...}) + handle.detach()",
          "duration": 2
        },
        "test target.after([typeA, typeB], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeB], fn) + handle.detach()",
          "duration": 2
        },
        "test target.after([typeA, typeA], fn) + handle.detach()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after([typeA, typeA], fn) + handle.detach()",
          "duration": 1
        },
        "test target.after(type) + target.detach(prefix:type)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.after(type) + target.detach(prefix:type)",
          "duration": 1
        },
        "test target.on() + target.after() + target.detach(type) detaches both": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on() + target.after() + target.detach(type) detaches both",
          "duration": 1
        },
        "test target.detach('~AFTER~')": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.detach('~AFTER~')",
          "duration": 1
        }
      },
      "target.fire": {
        "name": "target.fire",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 17,
        "type": "testcase",
        "test target.fire() with no subscribers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.fire() with no subscribers",
          "duration": 1
        },
        "test on() and fire() argument aggregation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test on() and fire() argument aggregation",
          "duration": 2
        },
        "test target.fire(*) arg is passed as is": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.fire(*) arg is passed as is",
          "duration": 3
        },
        "test broadcast": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test broadcast",
          "duration": 2
        }
      },
      "target.publish()": {
        "name": "target.publish()",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 12,
        "type": "testcase",
        "test_fire_once": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_fire_once",
          "duration": 1
        },
        "test_async_fireonce": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test_async_fireonce",
          "duration": 1
        }
      }
    },
    "AOP": {
      "name": "AOP",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 5,
      "total": 8,
      "duration": 41,
      "type": "testsuite",
      "Y.Do": {
        "name": "Y.Do",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 2,
        "total": 3,
        "duration": 17,
        "type": "testcase",
        "test before\/after with falsy context binds args": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test before\/after with falsy context binds args"
        },
        "test Y.AlterReturn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test Y.AlterReturn",
          "duration": 1
        },
        "test originalRetVal not overwritten by nested call": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test originalRetVal not overwritten by nested call"
        }
      },
      "EventTarget on\/before\/after": {
        "name": "EventTarget on\/before\/after",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 3,
        "total": 5,
        "duration": 21,
        "type": "testcase",
        "test target.on(fn, host, methodName)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(fn, host, methodName)",
          "duration": 1
        },
        "test target.on(fn, host, methodName, context)": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test target.on(fn, host, methodName, context)",
          "duration": 1
        },
        "test target.on(fn, host, noSuchMethod)": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on(fn, host, noSuchMethod)"
        },
        "test target.on([fnA, fnB, fnC], host, noSuchMethod)": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.on([fnA, fnB, fnC], host, noSuchMethod)"
        },
        "test target.before() is an alias for target.on()": {
          "result": "ignore",
          "message": "Test ignored",
          "type": "test",
          "name": "test target.before() is an alias for target.on()"
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:43 PM"
  },
  {
    "name": "Custom Event: Base",
    "passed": 130,
    "failed": 0,
    "errors": 0,
    "ignored": 8,
    "total": 138,
    "duration": 746,
    "type": "report",
    "Event Target Constructor": {
      "name": "Event Target Constructor",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 15,
      "type": "testcase",
      "test new Y.EventTarget()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test new Y.EventTarget()",
        "duration": 1
      },
      "test new Y.EventTarget(config)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test new Y.EventTarget(config)",
        "duration": 1
      },
      "test Y.augment(Clz, Y.EventTarget)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.augment(Clz, Y.EventTarget)",
        "duration": 3
      },
      "test Y.extend(Clz, Y.EventTarget)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.extend(Clz, Y.EventTarget)",
        "duration": 2
      }
    },
    "target.on()": {
      "name": "target.on()",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 20,
      "duration": 175,
      "type": "testcase",
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.on(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn)",
        "duration": 2
      },
      "test target.on(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.on(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn, obj)",
        "duration": 1
      },
      "test target.on(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn, obj, args)",
        "duration": 1
      },
      "test target.on([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([type], fn)",
        "duration": 1
      },
      "test target.on([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn)",
        "duration": 1
      },
      "test target.on([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeA], fn)",
        "duration": 2
      },
      "test target.on([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([], fn) does nothing",
        "duration": 1
      },
      "test target.on([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.on({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: fn })",
        "duration": 10
      },
      "test target.on({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: true }, fn)",
        "duration": 2
      },
      "test target.on({ type: { fn: wins } }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { fn: wins } }, fn)",
        "duration": 2
      },
      "test target.on({ type: { fn: wins } }, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { fn: wins } }, fn, obj, args)",
        "duration": 1
      },
      "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { fn: wins, context: wins } }, fn, ctx, args)",
        "duration": 1
      },
      "test target.on({ type: { context: wins } }, callback, ctx, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({ type: { context: wins } }, callback, ctx, args)",
        "duration": 2
      },
      "test target.on(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.on(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 5
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 3
      },
      "test target.on('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.after": {
      "name": "target.after",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 16,
      "duration": 66,
      "type": "testcase",
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.after(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn)",
        "duration": 1
      },
      "test target.after(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.after(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn, obj)",
        "duration": 1
      },
      "test target.after(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn, obj, args)",
        "duration": 1
      },
      "test target.after([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([type], fn)",
        "duration": 2
      },
      "test target.after([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn)",
        "duration": 2
      },
      "test target.after([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeA], fn)",
        "duration": 2
      },
      "test target.after([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([], fn) does nothing",
        "duration": 1
      },
      "test target.after([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.after([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.after({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({ type: fn })",
        "duration": 2
      },
      "test target.after({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({ type: true }, fn)",
        "duration": 2
      },
      "test target.after(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.after(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 4
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 3
      },
      "test target.after('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.once": {
      "name": "target.once",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 16,
      "duration": 66,
      "type": "testcase",
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 2
      },
      "test target.once(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn)",
        "duration": 1
      },
      "test target.once(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.once(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn, obj)",
        "duration": 1
      },
      "test target.once(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once(type, fn, obj, args)",
        "duration": 1
      },
      "test target.once([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([type], fn)",
        "duration": 1
      },
      "test target.once([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([typeA, typeB], fn)",
        "duration": 1
      },
      "test target.once([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([typeA, typeA], fn)",
        "duration": 1
      },
      "test target.once([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once([], fn) does nothing",
        "duration": 0
      },
      "test target.once([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.once([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.once({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once({ type: fn })",
        "duration": 1
      },
      "test target.once({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once({ type: true }, fn)",
        "duration": 2
      },
      "test target.once(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.once(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 4
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 2
      },
      "test target.once('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.once('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.onceAfter": {
      "name": "target.onceAfter",
      "passed": 15,
      "failed": 0,
      "errors": 0,
      "ignored": 2,
      "total": 17,
      "duration": 71,
      "type": "testcase",
      "test_onceAfter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_onceAfter",
        "duration": 2
      },
      "test auto-publish on subscribe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test auto-publish on subscribe",
        "duration": 1
      },
      "test target.onceAfter(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn)",
        "duration": 2
      },
      "test target.onceAfter(type, fn) allows duplicate subs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn) allows duplicate subs",
        "duration": 1
      },
      "test target.onceAfter(type, fn, obj)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn, obj)",
        "duration": 1
      },
      "test target.onceAfter(type, fn, obj, args)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter(type, fn, obj, args)",
        "duration": 1
      },
      "test target.onceAfter([type], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([type], fn)",
        "duration": 1
      },
      "test target.onceAfter([typeA, typeB], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([typeA, typeB], fn)",
        "duration": 2
      },
      "test target.onceAfter([typeA, typeA], fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([typeA, typeA], fn)",
        "duration": 2
      },
      "test target.onceAfter([], fn) does nothing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter([], fn) does nothing",
        "duration": 1
      },
      "test target.onceAfter([{ fn: fn, context: obj }]) does nothing": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.onceAfter([{ fn: fn, context: obj }]) does nothing"
      },
      "test target.onceAfter({ type: fn })": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter({ type: fn })",
        "duration": 1
      },
      "test target.onceAfter({ type: true }, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter({ type: true }, fn)",
        "duration": 1
      },
      "test target.onceAfter(type, { handleEvents: fn })": {
        "result": "ignore",
        "message": "Test ignored",
        "type": "test",
        "name": "test target.onceAfter(type, { handleEvents: fn })"
      },
      "test callback context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test callback context",
        "duration": 4
      },
      "test subscription bound args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test subscription bound args",
        "duration": 3
      },
      "test target.onceAfter('click', fn) registers custom event only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.onceAfter('click', fn) registers custom event only",
        "duration": 1
      }
    },
    "target.detach": {
      "name": "target.detach",
      "passed": 59,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 59,
      "duration": 239,
      "type": "testcase",
      "test target.detach() with not subs is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.detach() with not subs is harmless",
        "duration": 1
      },
      "test target.detachAll() with not subs is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.detachAll() with not subs is harmless",
        "duration": 1
      },
      "test target.on() + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detach(type, fn)",
        "duration": 1
      },
      "test target.on(type, fn, thisObj) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type, fn, thisObj) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.on() + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detach(type)",
        "duration": 2
      },
      "test target.on() + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detach()",
        "duration": 2
      },
      "test target.on() + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.detachAll()",
        "duration": 1
      },
      "test target.on() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + handle.detach()",
        "duration": 1
      },
      "test target.on('cat|__', fn) + target.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('cat|__', fn) + target.detach('cat|___')",
        "duration": 1
      },
      "test target.on('cat|__', fn) + target.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('cat|__', fn) + target.detach('cat|___', fn)",
        "duration": 1
      },
      "test target.on('cat|__', fn) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on('cat|__', fn) + target.detach('cat|*')",
        "duration": 1
      },
      "test target.on({...}) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + target.detach(type)",
        "duration": 2
      },
      "test target.on({...}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on({...}) + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + target.detachAll()",
        "duration": 1
      },
      "test target.on({'cat|type': fn}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({'cat|type': fn}) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.on({'cat|type': fn}) + target.detach('cat|type')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({'cat|type': fn}) + target.detach('cat|type')",
        "duration": 1
      },
      "test target.on({'cat|type': fn}) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({'cat|type': fn}) + target.detach('cat|*')",
        "duration": 2
      },
      "test target.on([type], fn) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([type], fn) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.on([type], fn) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([type], fn) + target.detach(type)",
        "duration": 1
      },
      "test target.on([typeA, typeB], fn) + target.detach(typeA)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn) + target.detach(typeA)",
        "duration": 1
      },
      "test target.on([typeA, typeB], fn) + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn) + target.detach()",
        "duration": 2
      },
      "test target.on({}) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({}) + target.detach() is harmless",
        "duration": 1
      },
      "test target.on([], fn) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([], fn) + target.detach() is harmless",
        "duration": 1
      },
      "test target.on({}) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({}) + handle.detach() is harmless",
        "duration": 0
      },
      "test target.on([], fn) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([], fn) + handle.detach() is harmless",
        "duration": 0
      },
      "test target.on({...}) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on({...}) + handle.detach()",
        "duration": 1
      },
      "test target.on([typeA, typeB], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeB], fn) + handle.detach()",
        "duration": 1
      },
      "test target.on([typeA, typeA], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on([typeA, typeA], fn) + handle.detach()",
        "duration": 1
      },
      "test target.on(type) + target.detach(prefix:type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on(type) + target.detach(prefix:type)",
        "duration": 1
      },
      "test target.after() + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detach(type, fn)",
        "duration": 1
      },
      "test target.after(type, fn, thisObj) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type, fn, thisObj) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.after() + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detach(type)",
        "duration": 1
      },
      "test target.after() + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detach()",
        "duration": 1
      },
      "test target.after() + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + target.detachAll()",
        "duration": 1
      },
      "test target.after() + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after() + handle.detach()",
        "duration": 1
      },
      "test target.after('cat|__', fn) + target.detach('cat|___')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('cat|__', fn) + target.detach('cat|___')",
        "duration": 2
      },
      "test target.after('cat|__', fn) + target.detach('cat|___', fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('cat|__', fn) + target.detach('cat|___', fn)",
        "duration": 1
      },
      "test target.after('cat|__', fn) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after('cat|__', fn) + target.detach('cat|*')",
        "duration": 1
      },
      "test target.after({...}) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + target.detach(type)",
        "duration": 1
      },
      "test target.after({...}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.after({...}) + target.detachAll()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + target.detachAll()",
        "duration": 1
      },
      "test target.after({'cat|type': fn}) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({'cat|type': fn}) + target.detach(type, fn)",
        "duration": 2
      },
      "test target.after({'cat|type': fn}) + target.detach('cat|type')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({'cat|type': fn}) + target.detach('cat|type')",
        "duration": 1
      },
      "test target.after({'cat|type': fn}) + target.detach('cat|*')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({'cat|type': fn}) + target.detach('cat|*')",
        "duration": 1
      },
      "test target.after([type], fn) + target.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([type], fn) + target.detach(type, fn)",
        "duration": 1
      },
      "test target.after([type], fn) + target.detach(type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([type], fn) + target.detach(type)",
        "duration": 1
      },
      "test target.after([typeA, typeB], fn) + target.detach(typeA)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn) + target.detach(typeA)",
        "duration": 2
      },
      "test target.after([typeA, typeB], fn) + target.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn) + target.detach()",
        "duration": 1
      },
      "test target.after({}) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({}) + target.detach() is harmless",
        "duration": 0
      },
      "test target.after([], fn) + target.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([], fn) + target.detach() is harmless",
        "duration": 0
      },
      "test target.after({}) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({}) + handle.detach() is harmless",
        "duration": 1
      },
      "test target.after([], fn) + handle.detach() is harmless": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([], fn) + handle.detach() is harmless",
        "duration": 1
      },
      "test target.after({...}) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after({...}) + handle.detach()",
        "duration": 2
      },
      "test target.after([typeA, typeB], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeB], fn) + handle.detach()",
        "duration": 1
      },
      "test target.after([typeA, typeA], fn) + handle.detach()": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after([typeA, typeA], fn) + handle.detach()",
        "duration": 1
      },
      "test target.after(type) + target.detach(prefix:type)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.after(type) + target.detach(prefix:type)",
        "duration": 1
      },
      "test target.on() + target.after() + target.detach(type) detaches both": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.on() + target.after() + target.detach(type) detaches both",
        "duration": 1
      },
      "test target.detach('~AFTER~')": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.detach('~AFTER~')",
        "duration": 1
      },
      "test Y.detach(type, fn)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test Y.detach(type, fn)",
        "duration": 1
      }
    },
    "target.fire": {
      "name": "target.fire",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 19,
      "type": "testcase",
      "test target.fire() with no subscribers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.fire() with no subscribers",
        "duration": 1
      },
      "test on() and fire() argument aggregation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test on() and fire() argument aggregation",
        "duration": 3
      },
      "test target.fire(*) arg is passed as is": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test target.fire(*) arg is passed as is",
        "duration": 4
      },
      "test broadcast": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test broadcast",
        "duration": 3
      }
    },
    "target.publish()": {
      "name": "target.publish()",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 10,
      "type": "testcase",
      "test_fire_once": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fire_once",
        "duration": 1
      },
      "test_async_fireonce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_async_fireonce",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:45 PM"
  },
  {
    "name": "Collection: ArrayList",
    "passed": 14,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 14,
    "duration": 135,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 6,
      "type": "testcase",
      "construct with array should not error": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "construct with array should not error",
        "duration": 1
      },
      "construct after augmented class instantiation should not clobber items": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "construct after augmented class instantiation should not clobber items",
        "duration": 1
      }
    },
    "API": {
      "name": "API",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 43,
      "type": "testcase",
      "test item": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test item",
        "duration": 1
      },
      "test each": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test each",
        "duration": 1
      },
      "test each with context override": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test each with context override",
        "duration": 1
      },
      "test some": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test some",
        "duration": 2
      },
      "test some with context override": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test some with context override",
        "duration": 1
      },
      "test some without breaking out of the loop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test some without breaking out of the loop",
        "duration": 1
      },
      "test indexOf": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test indexOf",
        "duration": 1
      },
      "test size": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test size",
        "duration": 2
      },
      "test isEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test isEmpty",
        "duration": 1
      },
      "test toJSON": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test toJSON",
        "duration": 1
      }
    },
    "addMethod": {
      "name": "addMethod",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 8,
      "type": "testcase",
      "test addMethod": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test addMethod",
        "duration": 2
      },
      "methods should be chainable unless a value is returned": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "methods should be chainable unless a value is returned",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:46 PM"
  },
  {
    "name": "Collection: ArrayInvoke",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 102,
    "type": "report",
    "array-invoke": {
      "name": "array-invoke",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 30,
      "type": "testcase",
      "invoke() should return an empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "invoke() should return an empty array",
        "duration": 1
      },
      "invoke(array) should return an empty array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "invoke(array) should return an empty array",
        "duration": 1
      },
      "test invoke(array, string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(array, string)",
        "duration": 3
      },
      "test invoke(sparseArray, string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(sparseArray, string)",
        "duration": 1
      },
      "test invoke(array, string, args...)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(array, string, args...)",
        "duration": 1
      },
      "test invoke(sparseArray, string, args...)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(sparseArray, string, args...)",
        "duration": 1
      },
      "test invoke(array, nonExistentMethodName)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test invoke(array, nonExistentMethodName)",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:47 PM"
  },
  {
    "name": "Collection",
    "passed": 33,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 33,
    "duration": 203,
    "type": "report",
    "General": {
      "name": "General",
      "passed": 33,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 33,
      "duration": 130,
      "type": "testcase",
      "testLastIndexOf": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLastIndexOf",
        "duration": 1
      },
      "testLastIndexOf_fromIndex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testLastIndexOf_fromIndex",
        "duration": 0
      },
      "lastIndexOf() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "lastIndexOf() should handle sparse arrays correctly",
        "duration": 2
      },
      "testMap": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMap",
        "duration": 1
      },
      "testMapContext": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMapContext",
        "duration": 1
      },
      "map() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "map() should handle sparse arrays correctly",
        "duration": 1
      },
      "map() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "map() should work on array-like objects",
        "duration": 1
      },
      "testReduce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReduce",
        "duration": 1
      },
      "testReduceContext": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReduceContext",
        "duration": 0
      },
      "reduce() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "reduce() should handle sparse arrays correctly",
        "duration": 1
      },
      "reduce() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "reduce() should work on array-like objects",
        "duration": 1
      },
      "testFind": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFind",
        "duration": 1
      },
      "testFindNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFindNoMatch",
        "duration": 1
      },
      "testFindFirst": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFindFirst",
        "duration": 1
      },
      "testFindLast": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFindLast",
        "duration": 1
      },
      "find() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "find() should handle sparse arrays correctly",
        "duration": 1
      },
      "testFilter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilter",
        "duration": 1
      },
      "testFilterNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilterNoMatch",
        "duration": 1
      },
      "filter() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should handle sparse arrays correctly",
        "duration": 1
      },
      "filter() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "filter() should work on array-like objects",
        "duration": 1
      },
      "testReject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReject",
        "duration": 1
      },
      "testRejectNoMatch": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRejectNoMatch",
        "duration": 1
      },
      "testGrepMatches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGrepMatches",
        "duration": 0
      },
      "testGrepNoMatches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGrepNoMatches",
        "duration": 1
      },
      "testPartition": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPartition",
        "duration": 1
      },
      "testZip": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testZip",
        "duration": 1
      },
      "testEvery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEvery",
        "duration": 1
      },
      "testEveryNoMatches": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEveryNoMatches",
        "duration": 2
      },
      "every() should handle sparse arrays correctly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "every() should handle sparse arrays correctly",
        "duration": 0
      },
      "every() should work on array-like objects": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "every() should work on array-like objects",
        "duration": 1
      },
      "unique() should return a copy of an array with duplicate items removed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "unique() should return a copy of an array with duplicate items removed",
        "duration": 1
      },
      "unique() should support a custom test function": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "unique() should support a custom test function",
        "duration": 1
      },
      "flatten() should flatten nested arrays into a single-level array": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "flatten() should flatten nested arrays into a single-level array",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:48 PM"
  },
  {
    "name": "Button",
    "passed": 33,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 33,
    "duration": 1225,
    "type": "report",
    "button-core": {
      "name": "button-core",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 133,
      "type": "testsuite",
      "Attributes": {
        "name": "Attributes",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 53,
        "type": "testcase",
        "Disabling a button should set the `disable` attribute to `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Disabling a button should set the `disable` attribute to `true`",
          "duration": 10
        },
        "Enabling a button should set the `disabled` attribute to `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Enabling a button should set the `disabled` attribute to `false`",
          "duration": 7
        },
        "Changing the label should change the `label` attribute of a button": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the label should change the `label` attribute of a button",
          "duration": 7
        },
        "Changing the label should change the `innerHTML` value of a button node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the label should change the `innerHTML` value of a button node",
          "duration": 7
        },
        "Changing the `disabled` attribute should fire a `disabledChange` event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the `disabled` attribute should fire a `disabledChange` event",
          "duration": 8
        },
        "Changing the `label` attribute should fire a `labelChange` event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the `label` attribute should fire a `labelChange` event",
          "duration": 8
        }
      },
      "Instantiation": {
        "name": "Instantiation",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 75,
        "type": "testcase",
        "Creating an unattached button should create a Y.ButtonCore instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Creating an unattached button should create a Y.ButtonCore instance",
          "duration": 5
        },
        "Modifying the label of a nested button structure should not modify the non-label elements": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Modifying the label of a nested button structure should not modify the non-label elements",
          "duration": 57
        },
        "modifying the `label` attribute should work properly on <input> elements": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "modifying the `label` attribute should work properly on <input> elements",
          "duration": 7
        }
      }
    },
    "button-plugin": {
      "name": "button-plugin",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 61,
      "type": "testsuite",
      "Methods": {
        "name": "Methods",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 59,
        "type": "testcase",
        "node.plug(Y.Plugin.Button, config) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "node.plug(Y.Plugin.Button, config) should return a Y.Node instance with Button functionality",
          "duration": 8
        },
        "Y.Plugin.Button.createNode(srcNode) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(srcNode) should return a Y.Node instance with Button functionality",
          "duration": 8
        },
        "Y.Plugin.Button.createNode(srcNode, config) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(srcNode, config) should return a Y.Node instance with Button functionality",
          "duration": 8
        },
        "Y.Plugin.Button.createNode(config) should return a Y.Node instance with Button functionality": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(config) should return a Y.Node instance with Button functionality",
          "duration": 8
        },
        "Y.Plugin.Button.createNode(config) should return a Y.Node with the specified `template` element": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.Plugin.Button.createNode(config) should return a Y.Node with the specified `template` element",
          "duration": 15
        }
      }
    },
    "button": {
      "name": "button",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 685,
      "type": "testsuite",
      "Basic": {
        "name": "Basic",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 648,
        "type": "testcase",
        "Changing the label atrribute should trigger labelChange": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Changing the label atrribute should trigger labelChange",
          "duration": 53
        },
        "ToggleButton should have `toggle` role": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ToggleButton should have `toggle` role",
          "duration": 111
        },
        "Selecting a toggleButton should add class `yui3-button-selected`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Selecting a toggleButton should add class `yui3-button-selected`",
          "duration": 60
        },
        "Select toggling a button should fire pressedChange": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Select toggling a button should fire pressedChange",
          "duration": 60
        },
        "disable() should set the disabled attribute to true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "disable() should set the disabled attribute to true",
          "duration": 53
        },
        "enable() should set the disabled attribute to false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "enable() should set the disabled attribute to false",
          "duration": 51
        },
        "Setting `pressed` should toggle the `pressed` attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `pressed` should toggle the `pressed` attribute",
          "duration": 50
        },
        "Setting `checked` should toggle the `checked` attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `checked` should toggle the `checked` attribute",
          "duration": 54
        },
        "Toggle buttons should have proper ARIA data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Toggle buttons should have proper ARIA data",
          "duration": 54
        },
        "Checkbox buttons should have proper ARIA data": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Checkbox buttons should have proper ARIA data",
          "duration": 55
        }
      },
      "Config": {
        "name": "Config",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 33,
        "type": "testcase",
        "Passing `pressed=true` in with the config will default the button to a `pressed` state": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing `pressed=true` in with the config will default the button to a `pressed` state",
          "duration": 17
        },
        "Passing `checked=true` in with the config will default the button to a `checked` state": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Passing `checked=true` in with the config will default the button to a `checked` state",
          "duration": 14
        }
      }
    },
    "button-group": {
      "name": "button-group",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 259,
      "type": "testsuite",
      "Methods": {
        "name": "Methods",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 28,
        "type": "testcase",
        "ButtonGroup.getButtons() should return an array of Y.Node instances": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getButtons() should return an array of Y.Node instances",
          "duration": 26
        }
      },
      "Checkbox": {
        "name": "Checkbox",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 154,
        "type": "testcase",
        "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons",
          "duration": 33
        },
        "ButtonGroup.getSelectedValues() should return values of selected buttons": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getSelectedValues() should return values of selected buttons",
          "duration": 36
        },
        "Selecting a button should trigger selectionChange": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Selecting a button should trigger selectionChange",
          "duration": 32
        },
        "Selecting a button in a group should provide an originEvent": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Selecting a button in a group should provide an originEvent",
          "duration": 29
        }
      },
      "Radio": {
        "name": "Radio",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 40,
        "type": "testcase",
        "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroup.getSelectedButtons() should return accurate counts of selected buttons",
          "duration": 36
        }
      },
      "MISC": {
        "name": "MISC",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 28,
        "type": "testcase",
        "ButtonGroups should apply yui3-button-selected to anscestor button div, not the nested element that was clicked": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ButtonGroups should apply yui3-button-selected to anscestor button div, not the nested element that was clicked",
          "duration": 26
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:51 PM"
  },
  {
    "name": "Dom: Selector",
    "passed": 37,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 37,
    "duration": 242,
    "type": "report",
    "Query All": {
      "name": "Query All",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 40,
      "type": "testcase",
      "testFilter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFilter",
        "duration": 3
      },
      "testTest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTest",
        "duration": 6
      },
      "testRootQuery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRootQuery",
        "duration": 12
      },
      "testNthType": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNthType",
        "duration": 1
      },
      "testNthChild": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNthChild",
        "duration": 2
      },
      "testQuery": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testQuery",
        "duration": 6
      },
      "should find all queries in group": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all queries in group",
        "duration": 1
      }
    },
    "Simple Node Test": {
      "name": "Simple Node Test",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 126,
      "type": "testcase",
      "testPseudo": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPseudo",
        "duration": 3
      },
      "testAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAttr",
        "duration": 3
      },
      "testClass": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testClass",
        "duration": 2
      },
      "testId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testId",
        "duration": 1
      },
      "testTag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTag",
        "duration": 1
      },
      "testDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDisabled",
        "duration": 2
      },
      "testEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEnabled",
        "duration": 2
      },
      "testIframe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testIframe",
        "duration": 2
      },
      "testScoped": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testScoped",
        "duration": 2
      },
      "should run scoped query when form has input with name=\"id\"": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run scoped query when form has input with name=\"id\"",
        "duration": 1
      },
      "should run scoped query when root has ID with special chars": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run scoped query when root has ID with special chars",
        "duration": 1
      },
      "testAncestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAncestor",
        "duration": 2
      },
      "should return all checked inputs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all checked inputs",
        "duration": 1
      },
      "should apply function for filter test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should apply function for filter test",
        "duration": 1
      },
      "should find element with quoted number ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with quoted number ID",
        "duration": 1
      },
      "should find element with number ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with number ID",
        "duration": 5
      },
      "should find element with colon in quoted ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with colon in quoted ID",
        "duration": 1
      },
      "should find element with colon in ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with colon in ID",
        "duration": 10
      },
      "should find element with colon in ID shorthand": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with colon in ID shorthand",
        "duration": 1
      },
      "should find element with number ID shorthand": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find element with number ID shorthand",
        "duration": 5
      },
      "should omit comments from children": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should omit comments from children",
        "duration": 1
      },
      "should allow documentFragment root node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should allow documentFragment root node",
        "duration": 1
      },
      "should find custom element by tag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find custom element by tag",
        "duration": 1
      },
      "should find custom element by class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find custom element by class",
        "duration": 1
      },
      "should find custom element by tag and class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find custom element by tag and class",
        "duration": 1
      },
      "should support multiple :not pseudos": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should support multiple :not pseudos",
        "duration": 1
      },
      "should test multiple :not pseudos with attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should test multiple :not pseudos with attribute",
        "duration": 1
      },
      "should support boolean custom attribute via quoted attr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should support boolean custom attribute via quoted attr",
        "duration": 2
      },
      "should allow special chars in attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should allow special chars in attribute",
        "duration": 2
      },
      "should allow special chars in attribute, scoped query": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should allow special chars in attribute, scoped query",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:52 PM"
  },
  {
    "name": "Dom: XY",
    "passed": 42,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 42,
    "duration": 260,
    "type": "report",
    "Y.DOM.xy": {
      "name": "Y.DOM.xy",
      "passed": 42,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 42,
      "duration": 167,
      "type": "testcase",
      "should set h1-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set h1-1 in page coords",
        "duration": 1
      },
      "should set static1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static1 in page coords",
        "duration": 1
      },
      "should set abs1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs1 in page coords",
        "duration": 1
      },
      "should set rel1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel1 in page coords",
        "duration": 0
      },
      "should set static2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static2 in page coords",
        "duration": 1
      },
      "should set abs2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs2 in page coords",
        "duration": 1
      },
      "should set rel2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel2 in page coords",
        "duration": 1
      },
      "should set static3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static3 in page coords",
        "duration": 0
      },
      "should set abs3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs3 in page coords",
        "duration": 0
      },
      "should set rel3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel3 in page coords",
        "duration": 1
      },
      "should set p2-is in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p2-is in page coords",
        "duration": 1
      },
      "should set p2-ir in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p2-ir in page coords",
        "duration": 1
      },
      "should set p2-ia in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p2-ia in page coords",
        "duration": 0
      },
      "should set static4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static4 in page coords",
        "duration": 0
      },
      "should set static5 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set static5 in page coords",
        "duration": 1
      },
      "should set abs4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set abs4 in page coords",
        "duration": 1
      },
      "should set rel4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set rel4 in page coords",
        "duration": 1
      },
      "should set p4-is in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p4-is in page coords",
        "duration": 1
      },
      "should set p4-ir in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p4-ir in page coords",
        "duration": 1
      },
      "should set p4-ia in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set p4-ia in page coords",
        "duration": 1
      },
      "should set fixed in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set fixed in page coords",
        "duration": 0
      },
      "should set table1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set table1 in page coords",
        "duration": 0
      },
      "should set tr1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr1 in page coords",
        "duration": 1
      },
      "should set th1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th1 in page coords",
        "duration": 1
      },
      "should set th2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th2 in page coords",
        "duration": 0
      },
      "should set th3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th3 in page coords",
        "duration": 0
      },
      "should set th4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set th4 in page coords",
        "duration": 0
      },
      "should set tr2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr2 in page coords",
        "duration": 1
      },
      "should set td2-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-1 in page coords",
        "duration": 1
      },
      "should set td2-2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-2 in page coords",
        "duration": 1
      },
      "should set td2-3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-3 in page coords",
        "duration": 1
      },
      "should set td2-4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td2-4 in page coords",
        "duration": 0
      },
      "should set tr3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr3 in page coords",
        "duration": 1
      },
      "should set td3-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-1 in page coords",
        "duration": 1
      },
      "should set td3-2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-2 in page coords",
        "duration": 1
      },
      "should set td3-3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-3 in page coords",
        "duration": 0
      },
      "should set td3-4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td3-4 in page coords",
        "duration": 0
      },
      "should set tr4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set tr4 in page coords",
        "duration": 1
      },
      "should set td4-1 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-1 in page coords",
        "duration": 1
      },
      "should set td4-2 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-2 in page coords",
        "duration": 1
      },
      "should set td4-3 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-3 in page coords",
        "duration": 0
      },
      "should set td4-4 in page coords": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set td4-4 in page coords",
        "duration": 0
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:53 PM"
  },
  {
    "name": "Dom: Region",
    "passed": 2,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 2,
    "duration": 102,
    "type": "report",
    "Y.DOM.region": {
      "name": "Y.DOM.region",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 24,
      "type": "testcase",
      "should return a region containing the correct data": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a region containing the correct data",
        "duration": 2
      },
      "should return false for bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for bad input",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:54 PM"
  },
  {
    "name": "Dom: Base",
    "passed": 288,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 288,
    "duration": 1715,
    "type": "report",
    "Y.DOM.byId": {
      "name": "Y.DOM.byId",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 125,
      "type": "testcase",
      "should return element from string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return element from string",
        "duration": 1
      },
      "should return first match when dupe id exists": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return first match when dupe id exists",
        "duration": 1
      },
      "should return null when no match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when no match",
        "duration": 2
      },
      "should return null when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is null",
        "duration": 1
      },
      "should return null when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is undefined",
        "duration": 1
      },
      "should avoid mistaking name for id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should avoid mistaking name for id",
        "duration": 2
      },
      "should avoid mistaking form id for named input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should avoid mistaking form id for named input",
        "duration": 1
      },
      "should search the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search the given node",
        "duration": 5
      },
      "should restrict search to the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should restrict search to the given node",
        "duration": 4
      },
      "should search the given node (off document)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search the given node (off document)",
        "duration": 66
      },
      "should search the given document (frame)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search the given document (frame)",
        "duration": 1
      }
    },
    "Y.DOM.allById": {
      "name": "Y.DOM.allById",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 32,
      "type": "testcase",
      "should return all elements with the given id": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all elements with the given id",
        "duration": 1
      },
      "should return all elements with the given id (root element)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all elements with the given id (root element)",
        "duration": 1
      },
      "should return empty array when no match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when no match",
        "duration": 1
      },
      "should find cloned element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find cloned element",
        "duration": 1
      },
      "should ignore matches on NAME instead of ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should ignore matches on NAME instead of ID",
        "duration": 2
      },
      "should find all clones": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all clones",
        "duration": 2
      },
      "should find all cloned forms": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find all cloned forms",
        "duration": 2
      }
    },
    "Y.DOM.getText": {
      "name": "Y.DOM.getText",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 18,
      "type": "testcase",
      "should return the text content of the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the text content of the given node",
        "duration": 1
      },
      "should return the text content of the given text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the text content of the given text node",
        "duration": 1
      },
      "should return empty string when no text found": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty string when no text found",
        "duration": 1
      },
      "should return empty string when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty string when input is null",
        "duration": 1
      },
      "should return empty string when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty string when input is undefined",
        "duration": 1
      }
    },
    "Y.DOM.setText": {
      "name": "Y.DOM.setText",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 19,
      "type": "testcase",
      "should set content with the given text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set content with the given text",
        "duration": 1
      },
      "should set html content as text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set html content as text",
        "duration": 1
      },
      "should preserve spaces": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should preserve spaces",
        "duration": 1
      },
      "should replace existing content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace existing content",
        "duration": 5
      },
      "should set text for text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set text for text node",
        "duration": 1
      }
    },
    "Y.DOM.elementByAxis": {
      "name": "Y.DOM.elementByAxis",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 81,
      "type": "testcase",
      "should return the next element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next element",
        "duration": 1
      },
      "should return the next node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next node",
        "duration": 1
      },
      "should return the next element that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next element that passes the test fn",
        "duration": 1
      },
      "should return the next node that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the next node that passes the test fn",
        "duration": 1
      },
      "should return the previous element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous element",
        "duration": 1
      },
      "should return the previous node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous node",
        "duration": 1
      },
      "should return the previous element that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous element that passes the test fn",
        "duration": 1
      },
      "should return the previous node that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the previous node that passes the test fn",
        "duration": 1
      },
      "should return the parent element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the parent element",
        "duration": 1
      },
      "should return the ancestor element that passes the test fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the ancestor element that passes the test fn",
        "duration": 1
      },
      "should return null when not found": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when not found",
        "duration": 1
      },
      "should return null when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is null",
        "duration": 2
      },
      "should return null when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when input is undefined",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      }
    },
    "Y.DOM.ancestor": {
      "name": "Y.DOM.ancestor",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 36,
      "type": "testcase",
      "should return the parent node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the parent node",
        "duration": 1
      },
      "should return the same node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the same node",
        "duration": 1
      },
      "should return the matching ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor",
        "duration": 1
      },
      "should return the matching ancestor (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self match)",
        "duration": 1
      },
      "should return the matching ancestor (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestor (test self not matched)",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      }
    },
    "Y.DOM.ancestors": {
      "name": "Y.DOM.ancestors",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 41,
      "type": "testcase",
      "should return an array of one (documentElement)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return an array of one (documentElement)",
        "duration": 1
      },
      "should include the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should include the starting node",
        "duration": 1
      },
      "should omit the starting node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should omit the starting node",
        "duration": 2
      },
      "should return the matching ancestors": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors",
        "duration": 2
      },
      "should return the matching ancestors (test self match)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self match)",
        "duration": 2
      },
      "should return the matching ancestors (test self not matched)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the matching ancestors (test self not matched)",
        "duration": 1
      },
      "should stop when the stop function returns true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should stop when the stop function returns true",
        "duration": 1
      },
      "should find ancestor before stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor before stop",
        "duration": 1
      },
      "should find ancestor when both test and stop return true": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find ancestor when both test and stop return true",
        "duration": 1
      }
    },
    "Y.DOM.contains": {
      "name": "Y.DOM.contains",
      "passed": 11,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 11,
      "duration": 51,
      "type": "testcase",
      "html element should contain body element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html element should contain body element",
        "duration": 1
      },
      "body element should not contain html element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body element should not contain html element",
        "duration": 1
      },
      "should be true for contained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained element",
        "duration": 1
      },
      "should be false for uncontained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained element",
        "duration": 2
      },
      "should be true when element is element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true when element is element",
        "duration": 1
      },
      "should be true for contained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained text node",
        "duration": 1
      },
      "should be false for uncontained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained text node",
        "duration": 1
      },
      "should be true for contained comment node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained comment node",
        "duration": 7
      },
      "should return false for null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for null input",
        "duration": 2
      },
      "should return false for undefined input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for undefined input",
        "duration": 1
      },
      "fragment should contain child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "fragment should contain child",
        "duration": 1
      }
    },
    "Y.DOM._bruteContains": {
      "name": "Y.DOM._bruteContains",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 31,
      "type": "testcase",
      "html element should contain body element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "html element should contain body element",
        "duration": 1
      },
      "body element should not contain html element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "body element should not contain html element",
        "duration": 1
      },
      "should be true for contained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained element",
        "duration": 1
      },
      "should be false for uncontained element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained element",
        "duration": 1
      },
      "should be true when element is element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true when element is element",
        "duration": 1
      },
      "should be true for contained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be true for contained text node",
        "duration": 1
      },
      "should be false for uncontained text node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should be false for uncontained text node",
        "duration": 1
      },
      "should return false for null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for null input",
        "duration": 1
      },
      "should return false for undefined input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for undefined input",
        "duration": 1
      }
    },
    "Y.DOM.inDoc": {
      "name": "Y.DOM.inDoc",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 49,
      "type": "testcase",
      "should return false for off document node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for off document node",
        "duration": 1
      },
      "should return true for in document node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for in document node",
        "duration": 1
      },
      "should return false for removed node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for removed node",
        "duration": 1
      },
      "should work with duplicate IDs in document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should work with duplicate IDs in document",
        "duration": 1
      },
      "should work with duplicate IDs off document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should work with duplicate IDs off document",
        "duration": 1
      },
      "should work with form that has input name=\"id\" and id=\"id\"": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should work with form that has input name=\"id\" and id=\"id\"",
        "duration": 0
      },
      "should return false when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false when input is null",
        "duration": 1
      },
      "should return false for cloned node off document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for cloned node off document",
        "duration": 1
      },
      "should return true for cloned node in document (same id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for cloned node in document (same id)",
        "duration": 1
      },
      "should return true for cloned node in document (new id)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for cloned node in document (new id)",
        "duration": 1
      }
    },
    "Y.DOM.create": {
      "name": "Y.DOM.create",
      "passed": 56,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 56,
      "duration": 354,
      "type": "testcase",
      "should create empty div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create empty div",
        "duration": 5
      },
      "should trim leading space": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should trim leading space",
        "duration": 4
      },
      "should create empty div (self-closed input)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create empty div (self-closed input)",
        "duration": 5
      },
      "should create div with text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create div with text",
        "duration": 5
      },
      "should create div with innerHTML": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create div with innerHTML",
        "duration": 4
      },
      "should create input type submit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create input type submit",
        "duration": 5
      },
      "should create input type radio": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create input type radio",
        "duration": 5
      },
      "should create form": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create form",
        "duration": 4
      },
      "should create a form with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a form with content",
        "duration": 6
      },
      "should create legend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create legend",
        "duration": 4
      },
      "should create fieldset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create fieldset",
        "duration": 5
      },
      "should create label": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create label",
        "duration": 5
      },
      "should create a list item": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a list item",
        "duration": 6
      },
      "should create a one item list": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a one item list",
        "duration": 6
      },
      "should create a table": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table",
        "duration": 5
      },
      "should create a table with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table with content",
        "duration": 6
      },
      "should create a table head": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table head",
        "duration": 4
      },
      "should create a table head from uppercase": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table head from uppercase",
        "duration": 6
      },
      "should create a table head with nested table": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table head with nested table",
        "duration": 5
      },
      "should create a table heading cell": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table heading cell",
        "duration": 5
      },
      "should create a caption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a caption",
        "duration": 9
      },
      "should create a colgroup": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a colgroup",
        "duration": 6
      },
      "should create a col element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a col element",
        "duration": 5
      },
      "should create a colgroup with col elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a colgroup with col elements",
        "duration": 5
      },
      "should create a table row": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table row",
        "duration": 5
      },
      "should create a table row with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table row with content",
        "duration": 57
      },
      "should create a table cell": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table cell",
        "duration": 7
      },
      "should create a table cell with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a table cell with content",
        "duration": 5
      },
      "should create a button element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a button element",
        "duration": 5
      },
      "should create an optgroup element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an optgroup element",
        "duration": 5
      },
      "should create an optgroup with an option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an optgroup with an option",
        "duration": 5
      },
      "should create an optgroup with options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an optgroup with options",
        "duration": 5
      },
      "should create a select element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a select element",
        "duration": 5
      },
      "should create a select with an option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a select with an option",
        "duration": 5
      },
      "should create a select with options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a select with options",
        "duration": 5
      },
      "should create a option element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a option element",
        "duration": 4
      },
      "should create a option with content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a option with content",
        "duration": 6
      },
      "should create a selected option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a selected option",
        "duration": 5
      },
      "should create an iframe (self-closed)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an iframe (self-closed)",
        "duration": 5
      },
      "should create an iframe": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an iframe",
        "duration": 7
      },
      "should create an iframe with attributes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create an iframe with attributes",
        "duration": 6
      },
      "should create a script": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a script",
        "duration": 5
      },
      "should create a script with src": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a script with src",
        "duration": 6
      },
      "should create a link element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a link element",
        "duration": 5
      },
      "should create a link element with attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a link element with attrs",
        "duration": 6
      },
      "should create a textNode": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should create a textNode",
        "duration": 1
      },
      "should return a fragment when creating a collection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment when creating a collection",
        "duration": 8
      },
      "should return a fragment containing options": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing options",
        "duration": 5
      },
      "should return a fragment including text nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment including text nodes",
        "duration": 5
      },
      "should return a fragment with the correct selected option": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment with the correct selected option",
        "duration": 4
      },
      "should return a fragment containing table cells": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing table cells",
        "duration": 5
      },
      "should return a fragment containing col elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing col elements",
        "duration": 4
      },
      "should return a fragment containing table bodies": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing table bodies",
        "duration": 5
      },
      "should return a fragment containing thead with nested table and tbody": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return a fragment containing thead with nested table and tbody",
        "duration": 5
      },
      "should return null when given null input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when given null input",
        "duration": 1
      },
      "should return null when given undefined input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when given undefined input",
        "duration": 1
      }
    },
    "Y.DOM.getAttribute": {
      "name": "Y.DOM.getAttribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 17,
      "type": "testcase",
      "should return \"className\" value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return \"className\" value",
        "duration": 1
      },
      "should return \"for\" value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return \"for\" value",
        "duration": 1
      },
      "should handle bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should handle bad input",
        "duration": 5
      }
    },
    "Y.DOM.setAttribute": {
      "name": "Y.DOM.setAttribute",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 10,
      "type": "testcase",
      "should set className": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set className",
        "duration": 1
      },
      "should set \"for\" attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set \"for\" attribute",
        "duration": 1
      },
      "should handle bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should handle bad input",
        "duration": 1
      }
    },
    "Y.DOM.getValue": {
      "name": "Y.DOM.getValue",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 80,
      "type": "testcase",
      "input value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match html value",
        "duration": 1
      },
      "input value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match no html value",
        "duration": 1
      },
      "input value should match empty html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match empty html value",
        "duration": 1
      },
      "textarea value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea value should match html value",
        "duration": 1
      },
      "textarea value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea value should match no html value",
        "duration": 1
      },
      "should ignore textarea html value attribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should ignore textarea html value attribute",
        "duration": 1
      },
      "select value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match html value",
        "duration": 1
      },
      "select value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match no html value",
        "duration": 1
      },
      "select value should match empty html value with text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match empty html value with text",
        "duration": 1
      },
      "select value should match empty html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "select value should match empty html value",
        "duration": 1
      },
      "option value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match html value",
        "duration": 2
      },
      "option value should match html content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match html content",
        "duration": 1
      },
      "option value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match no html value",
        "duration": 1
      },
      "option value should match empty html value with text": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match empty html value with text",
        "duration": 1
      },
      "option value should match empty html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match empty html value",
        "duration": 1
      },
      "button value should match html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match html value",
        "duration": 1
      },
      "button value should match no html value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match no html value",
        "duration": 1
      },
      "button value should ignore html content": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should ignore html content",
        "duration": 1
      },
      "button value should match empty value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match empty value",
        "duration": 1
      }
    },
    "Y.DOM.setValue": {
      "name": "Y.DOM.setValue",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 56,
      "type": "testcase",
      "input value should match updated value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "input value should match updated value",
        "duration": 2
      },
      "value updated from empty string should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "value updated from empty string should be new value",
        "duration": 2
      },
      "value updated from no value should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "value updated from no value should be new value",
        "duration": 1
      },
      "textarea from html value should match new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea from html value should match new value",
        "duration": 3
      },
      "textarea from no value should match new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "textarea from no value should match new value",
        "duration": 2
      },
      "button value should match updated value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value should match updated value",
        "duration": 4
      },
      "button value updated from empty string should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value updated from empty string should be new value",
        "duration": 1
      },
      "button value updated from no value should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "button value updated from no value should be new value",
        "duration": 1
      },
      "option value should match updated value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value should match updated value",
        "duration": 2
      },
      "option value updated from text should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value updated from text should be new value",
        "duration": 3
      },
      "option value updated from empty string should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value updated from empty string should be new value",
        "duration": 1
      },
      "option value updated from no value should be new value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "option value updated from no value should be new value",
        "duration": 1
      }
    },
    "Y.DOM._nl2Frag": {
      "name": "Y.DOM._nl2Frag",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 15,
      "type": "testcase",
      "should return fragment from HTMLCollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return fragment from HTMLCollection",
        "duration": 8
      },
      "should return fragment from Array of HTML Elements": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return fragment from Array of HTML Elements",
        "duration": 1
      },
      "should return null for bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null for bad input",
        "duration": 2
      }
    },
    "Y.DOM.isWindow": {
      "name": "Y.DOM.isWindow",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 13,
      "type": "testcase",
      "should return true for window object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for window object",
        "duration": 1
      },
      "should return true for frame window object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true for frame window object",
        "duration": 1
      },
      "should return false for document object": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for document object",
        "duration": 1
      },
      "should return false for non-window input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false for non-window input",
        "duration": 1
      }
    },
    "Y.DOM._removeChildNodes": {
      "name": "Y.DOM._removeChildNodes",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 9,
      "type": "testcase",
      "should remove all childNodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove all childNodes",
        "duration": 6
      }
    },
    "Y.DOM.addHTML": {
      "name": "Y.DOM.addHTML",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 110,
      "type": "testcase",
      "should append the given html to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given html to the node",
        "duration": 5
      },
      "should prepend the given html to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prepend the given html to the node",
        "duration": 11
      },
      "should insert the given html after the first child": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert the given html after the first child",
        "duration": 9
      },
      "should append the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given node",
        "duration": 1
      },
      "should add html before the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add html before the given node",
        "duration": 9
      },
      "should add html after the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add html after the given node",
        "duration": 9
      },
      "should replace the existing content (empty string)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (empty string)",
        "duration": 8
      },
      "should replace the existing content (null)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (null)",
        "duration": 5
      },
      "should replace the existing content (undefined)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (undefined)",
        "duration": 5
      },
      "should replace the existing content (0)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the existing content (0)",
        "duration": 10
      },
      "should append the given nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given nodelist",
        "duration": 5
      },
      "should insert the given nodelist before the given node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should insert the given nodelist before the given node",
        "duration": 10
      },
      "should prepend the given nodelist": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should prepend the given nodelist",
        "duration": 9
      },
      "should append the given number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append the given number",
        "duration": 1
      }
    },
    "Y.DOM._getRegExp": {
      "name": "Y.DOM._getRegExp",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 10,
      "type": "testcase",
      "should return RegExp obj": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return RegExp obj",
        "duration": 1
      },
      "should return cached RegExp obj": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return cached RegExp obj",
        "duration": 1
      },
      "should return new RegExp obj": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return new RegExp obj",
        "duration": 1
      }
    },
    "Y.DOM._getDoc": {
      "name": "Y.DOM._getDoc",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 26,
      "type": "testcase",
      "should return document from body": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from body",
        "duration": 1
      },
      "should return document from new node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from new node",
        "duration": 1
      },
      "should return document from window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from window",
        "duration": 1
      },
      "should return document from document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return document from document",
        "duration": 1
      },
      "should return iframe document from iframe window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe document from iframe window",
        "duration": 1
      },
      "should return iframe document from iframe node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe document from iframe node",
        "duration": 2
      },
      "should return iframe document from iframe document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe document from iframe document",
        "duration": 1
      }
    },
    "Y.DOM._getWin": {
      "name": "Y.DOM._getWin",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 31,
      "type": "testcase",
      "should return window from body": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from body",
        "duration": 1
      },
      "should return window from new node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from new node",
        "duration": 1
      },
      "should return window from window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from window",
        "duration": 1
      },
      "should return window from document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return window from document",
        "duration": 1
      },
      "should return iframe window from iframe window": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe window from iframe window",
        "duration": 1
      },
      "should return iframe window from iframe node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe window from iframe node",
        "duration": 1
      },
      "should return iframe window from iframe document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return iframe window from iframe document",
        "duration": 1
      }
    },
    "Y.DOM._batch": {
      "name": "Y.DOM._batch",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 26,
      "type": "testcase",
      "should append html on all nodes in HTMLCollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should append html on all nodes in HTMLCollection",
        "duration": 17
      },
      "should setText on all nodes in HTMLCollection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should setText on all nodes in HTMLCollection",
        "duration": 6
      }
    },
    "Y.DOM.siblings": {
      "name": "Y.DOM.siblings",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "should return all sibling nodes (firstChild)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all sibling nodes (firstChild)",
        "duration": 2
      },
      "should return all sibling nodes (lastChild)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all sibling nodes (lastChild)",
        "duration": 1
      },
      "should return all sibling nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all sibling nodes",
        "duration": 2
      },
      "should return all matching sibling nodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return all matching sibling nodes",
        "duration": 1
      }
    },
    "Y.DOM.wrap": {
      "name": "Y.DOM.wrap",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 24,
      "type": "testcase",
      "should wrap the node with the given html": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap the node with the given html",
        "duration": 5
      },
      "should wrap the node with the given complex html": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap the node with the given complex html",
        "duration": 5
      },
      "should wrap the paragraph with a div": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should wrap the paragraph with a div",
        "duration": 9
      }
    },
    "Y.DOM.unwrap": {
      "name": "Y.DOM.unwrap",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 30,
      "type": "testcase",
      "should remove the node's parent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent",
        "duration": 1
      },
      "should remove the node's parent and replace in DOM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent and replace in DOM",
        "duration": 2
      },
      "should remove the node's parent and replace in DOM with siblings (node as firstChild)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent and replace in DOM with siblings (node as firstChild)",
        "duration": 5
      },
      "should remove the node's parent and replace in DOM with siblings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the node's parent and replace in DOM with siblings",
        "duration": 5
      }
    },
    "Y.DOM.getId": {
      "name": "Y.DOM.getId",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 23,
      "type": "testcase",
      "should get the id from the DIV": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the DIV",
        "duration": 2
      },
      "should get the id from the new form element": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form element",
        "duration": 1
      },
      "should get the id from the new form element (setAttribute)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form element (setAttribute)",
        "duration": 2
      },
      "should get the id from the new form element rather than the named input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form element rather than the named input",
        "duration": 1
      },
      "should get the id from the new form rather than the named input (setAttribute)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the new form rather than the named input (setAttribute)",
        "duration": 1
      },
      "should get the id from the form rather than the named input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should get the id from the form rather than the named input",
        "duration": 1
      }
    },
    "Y.DOM.setId": {
      "name": "Y.DOM.setId",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "should set the id on the DIV": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the DIV",
        "duration": 1
      },
      "should set the id on the FORM": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the FORM",
        "duration": 1
      },
      "should set the id on the FORM with a named INPUT": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the FORM with a named INPUT",
        "duration": 1
      },
      "should set the id on the FORM with an INPUT id === \"id\"": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the id on the FORM with an INPUT id === \"id\"",
        "duration": 1
      }
    },
    "Y.DOM.generateID": {
      "name": "Y.DOM.generateID",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 11,
      "type": "testcase",
      "should generate an ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should generate an ID",
        "duration": 1
      },
      "should return exising ID": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return exising ID",
        "duration": 1
      }
    },
    "Y.DOM.hasClass": {
      "name": "Y.DOM.hasClass",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "should return true with className match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return true with className match",
        "duration": 1
      },
      "should return false with no className": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false with no className",
        "duration": 1
      },
      "should return false with no className match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return false with no className match",
        "duration": 1
      }
    },
    "Y.DOM.addClass": {
      "name": "Y.DOM.addClass",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 35,
      "type": "testcase",
      "should add the class to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the class to the node",
        "duration": 1
      },
      "should add the class to the node and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the class to the node and preserve existing",
        "duration": 1
      },
      "should not add if existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should not add if existing",
        "duration": 1
      },
      "should ltrim the class and add to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should ltrim the class and add to the node",
        "duration": 1
      },
      "should rtrim the class and add to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should rtrim the class and add to the node",
        "duration": 7
      },
      "should trim the class and add to the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should trim the class and add to the node",
        "duration": 1
      },
      "should handle bad input": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should handle bad input",
        "duration": 2
      }
    },
    "Y.DOM.removeClass": {
      "name": "Y.DOM.removeClass",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 44,
      "type": "testcase",
      "should remove the class from the node": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the class from the node",
        "duration": 2
      },
      "should leave the className as is": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should leave the className as is",
        "duration": 1
      },
      "should remove the class from the node and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the class from the node and preserve existing",
        "duration": 1
      }
    },
    "Y.DOM.replaceClass": {
      "name": "Y.DOM.replaceClass",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 13,
      "type": "testcase",
      "should replace the class with the given string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the class with the given string",
        "duration": 1
      },
      "should replace the class with and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should replace the class with and preserve existing",
        "duration": 1
      },
      "should leave the className as is": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should leave the className as is",
        "duration": 1
      }
    },
    "Y.DOM.toggleClass": {
      "name": "Y.DOM.toggleClass",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 18,
      "type": "testcase",
      "should remove the given class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the given class",
        "duration": 1
      },
      "should remove the given class and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should remove the given class and preserve existing",
        "duration": 1
      },
      "should add the given class": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the given class",
        "duration": 1
      },
      "should add the given class and preserve existing": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should add the given class and preserve existing",
        "duration": 1
      }
    },
    "Y.DOM._setSize": {
      "name": "Y.DOM._setSize",
      "passed": 10,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 10,
      "duration": 55,
      "type": "testcase",
      "should set the node offsetWidth to the given value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetWidth to the given value",
        "duration": 2
      },
      "should set the node offsetHeight to the given value": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetHeight to the given value",
        "duration": 1
      },
      "should set the node offsetWidth to zero if given a negative number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetWidth to zero if given a negative number",
        "duration": 1
      },
      "should set the node offsetHeight to zero if given a negative number": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the node offsetHeight to zero if given a negative number",
        "duration": 2
      },
      "should set the offsetWidth via setWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the offsetWidth via setWidth",
        "duration": 1
      },
      "should set the offsetHeight via setHeight": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set the offsetHeight via setHeight",
        "duration": 1
      },
      "should set offsetWidth accounting for padding": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetWidth accounting for padding",
        "duration": 1
      },
      "should set offsetHeight accounting for padding": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetHeight accounting for padding",
        "duration": 2
      },
      "should set offsetWidth to padding when setting to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetWidth to padding when setting to zero",
        "duration": 1
      },
      "should set offsetHeight to padding when setting to zero": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set offsetHeight to padding when setting to zero",
        "duration": 1
      }
    },
    "Y.DOM.children": {
      "name": "Y.DOM.children",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 11,
      "type": "testcase",
      "should return empty array when no element childNodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when no element childNodes",
        "duration": 1
      },
      "should return empty array when input is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when input is null",
        "duration": 1
      },
      "should return empty array when input is undefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return empty array when input is undefined",
        "duration": 1
      },
      "should return elements only": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return elements only",
        "duration": 1
      }
    },
    "Y.DOM.firstByTag": {
      "name": "Y.DOM.firstByTag",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 21,
      "type": "testcase",
      "should return the first match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the first match",
        "duration": 1
      },
      "should return the first match (root element)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return the first match (root element)",
        "duration": 1
      },
      "should return null when no match": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when no match",
        "duration": 1
      },
      "should return null when tag is null": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should return null when tag is null",
        "duration": 1
      },
      "should search given document": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search given document",
        "duration": 1
      },
      "should search given document (frame)": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should search given document (frame)",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:57 PM"
  },
  {
    "name": "Dom",
    "passed": 22,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 22,
    "duration": 666,
    "type": "report",
    "DOM": {
      "name": "DOM",
      "passed": 22,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 22,
      "duration": 581,
      "type": "testcase",
      "test_byId": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_byId",
        "duration": 2
      },
      "test_getText": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getText",
        "duration": 1
      },
      "test_setText": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_setText",
        "duration": 1
      },
      "test_children": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_children",
        "duration": 1
      },
      "test_getStyle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getStyle",
        "duration": 2
      },
      "test_setStyle": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_setStyle",
        "duration": 5
      },
      "test_styleDefaultUnit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_styleDefaultUnit",
        "duration": 2
      },
      "test_create": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_create",
        "duration": 247
      },
      "test_createNodes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_createNodes",
        "duration": 33
      },
      "test_ancestor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_ancestor",
        "duration": 1
      },
      "test_insertBefore": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_insertBefore",
        "duration": 1
      },
      "test_insertAfter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_insertAfter",
        "duration": 1
      },
      "test_getAttribute": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getAttribute",
        "duration": 1
      },
      "test_getValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getValue",
        "duration": 18
      },
      "test_position": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_position",
        "duration": 3
      },
      "test_region": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_region",
        "duration": 2
      },
      "test_viewportRegion": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_viewportRegion",
        "duration": 3
      },
      "test_addHTML": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_addHTML",
        "duration": 91
      },
      "testFirstByTag": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFirstByTag",
        "duration": 2
      },
      "testToHex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToHex",
        "duration": 1
      },
      "test_inDoc": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_inDoc",
        "duration": 2
      },
      "test_getScrollbarWidth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getScrollbarWidth",
        "duration": 3
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:00:59 PM"
  },
  {
    "name": "State",
    "passed": 9,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 9,
    "duration": 120,
    "type": "report",
    "State Tests": {
      "name": "State Tests",
      "passed": 9,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 9,
      "duration": 47,
      "type": "testcase",
      "testInstantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInstantiation",
        "duration": 1
      },
      "testAdd": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdd",
        "duration": 2
      },
      "testGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGet",
        "duration": 1
      },
      "testAddAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddAll",
        "duration": 1
      },
      "testGetAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAll",
        "duration": 0
      },
      "testRemove": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemove",
        "duration": 1
      },
      "testRemoveAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveAll",
        "duration": 1
      },
      "testRemoveAllArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveAllArray",
        "duration": 1
      },
      "testRemoveAllObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveAllObject",
        "duration": 1
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:00 PM"
  },
  {
    "name": "Attribute Core",
    "passed": 40,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 40,
    "duration": 272,
    "type": "report",
    "Core Base Class Tests": {
      "name": "Core Base Class Tests",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 60,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 2
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 2
      },
      "testWriteOncePostInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOncePostInit",
        "duration": 1
      },
      "testWriteOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnce",
        "duration": 1
      },
      "testWriteOnceInitOnly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnly",
        "duration": 2
      },
      "testWriteOnceInitOnlyNotProvided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnlyNotProvided",
        "duration": 1
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 2
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 3
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 1
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 2
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 1
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 2
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 4
      },
      "testInitialValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitialValidation",
        "duration": 1
      },
      "testProtect": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testProtect",
        "duration": 4
      }
    },
    "Augment Tests": {
      "name": "Augment Tests",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 14,
      "type": "testcase",
      "testSetGetNoAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetGetNoAttrs",
        "duration": 1
      },
      "testSetGetWithAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetGetWithAttrs",
        "duration": 1
      },
      "testCustomAugment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomAugment",
        "duration": 2
      },
      "testObjectAugment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testObjectAugment",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:01 PM"
  },
  {
    "name": "Attribute",
    "passed": 154,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 154,
    "duration": 986,
    "type": "report",
    "Core Base Class Tests": {
      "name": "Core Base Class Tests",
      "passed": 40,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 40,
      "duration": 208,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 3
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 4
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 5
      },
      "testWriteOncePostInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOncePostInit",
        "duration": 3
      },
      "testWriteOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnce",
        "duration": 2
      },
      "testWriteOnceInitOnly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnly",
        "duration": 3
      },
      "testWriteOnceInitOnlyNotProvided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnlyNotProvided",
        "duration": 3
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 4
      },
      "testAdHocConstructorEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorEnabled",
        "duration": 4
      },
      "testAdHocConstructorDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorDisabled",
        "duration": 3
      },
      "testReset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReset",
        "duration": 7
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 6
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 3
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 5
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 4
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 3
      },
      "testComplexConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexConstructor",
        "duration": 4
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 5
      },
      "testComplexEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexEvents",
        "duration": 5
      },
      "testBroadcast": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBroadcast",
        "duration": 5
      },
      "testInitialValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitialValidation",
        "duration": 3
      },
      "testRemoveAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveAttr",
        "duration": 2
      },
      "testGetAttrCfg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAttrCfg",
        "duration": 2
      },
      "testGetAllAttrCfgs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAllAttrCfgs",
        "duration": 3
      },
      "testModifyAttrLazy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttrLazy",
        "duration": 3
      },
      "testModifyAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttr",
        "duration": 4
      },
      "testProtect": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testProtect",
        "duration": 5
      },
      "testCloneWithNodeValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneWithNodeValue",
        "duration": 14
      },
      "testCloneWithNodeValueConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneWithNodeValueConstructor",
        "duration": 13
      },
      "testValueFnNotCalledIfUserValueProvided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValueFnNotCalledIfUserValueProvided",
        "duration": 2
      },
      "testValueFnCalledIfUserValueNotProvided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValueFnCalledIfUserValueNotProvided",
        "duration": 2
      },
      "testEventPrevent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventPrevent",
        "duration": 5
      },
      "testEventBasic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventBasic",
        "duration": 4
      },
      "testEventStopImmediatePropagation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventStopImmediatePropagation",
        "duration": 5
      },
      "testEventValidationReadonlyWriteOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventValidationReadonlyWriteOnce",
        "duration": 4
      },
      "testEventModify": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventModify",
        "duration": 4
      },
      "testEventSameValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventSameValue",
        "duration": 8
      },
      "testEventRegistrationThroughConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventRegistrationThroughConstructor",
        "duration": 4
      },
      "testSetOptionalPayload": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetOptionalPayload",
        "duration": 3
      },
      "testSetAttrsEventOptionalPayload": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetAttrsEventOptionalPayload",
        "duration": 5
      }
    },
    "Core Extended Class Tests": {
      "name": "Core Extended Class Tests",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 157,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 4
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 4
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 6
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 4
      },
      "testAdHocConstructorEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorEnabled",
        "duration": 4
      },
      "testAdHocConstructorDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorDisabled",
        "duration": 4
      },
      "testReset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testReset",
        "duration": 10
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 9
      },
      "testGetAllAttrCfgs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetAllAttrCfgs",
        "duration": 3
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 5
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 6
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 5
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 3
      },
      "testComplexConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexConstructor",
        "duration": 3
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 6
      },
      "testComplexEvents": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexEvents",
        "duration": 6
      },
      "testOnDemandInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testOnDemandInit",
        "duration": 3
      },
      "testGetterSetterValidatorNameArg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetterSetterValidatorNameArg",
        "duration": 4
      },
      "testBroadcast": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBroadcast",
        "duration": 6
      },
      "testModifyAttr": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifyAttr",
        "duration": 4
      },
      "testEventSameValueExt": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventSameValueExt",
        "duration": 4
      },
      "testEventPrevent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventPrevent",
        "duration": 4
      },
      "testEventBasic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventBasic",
        "duration": 4
      },
      "testEventStopImmediatePropagation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventStopImmediatePropagation",
        "duration": 5
      },
      "testEventValidationReadonlyWriteOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventValidationReadonlyWriteOnce",
        "duration": 4
      },
      "testEventModify": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventModify",
        "duration": 4
      },
      "testEventSameValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventSameValue",
        "duration": 9
      },
      "testEventRegistrationThroughConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventRegistrationThroughConstructor",
        "duration": 4
      },
      "testSetOptionalPayload": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetOptionalPayload",
        "duration": 4
      },
      "testSetAttrsEventOptionalPayload": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetAttrsEventOptionalPayload",
        "duration": 5
      }
    },
    "Augment Tests": {
      "name": "Augment Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 43,
      "type": "testcase",
      "testSetGetNoAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetGetNoAttrs",
        "duration": 2
      },
      "testSetGetWithAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetGetWithAttrs",
        "duration": 1
      },
      "testCustomAugment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomAugment",
        "duration": 2
      },
      "testObjectAugment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testObjectAugment",
        "duration": 2
      },
      "testNodeInstanceAugment": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNodeInstanceAugment",
        "duration": 7
      },
      "testAugmentedCloneWithNodeValue": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAugmentedCloneWithNodeValue",
        "duration": 9
      },
      "testAugmentedCloneWithNodeValueConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAugmentedCloneWithNodeValueConstructor",
        "duration": 7
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:03 PM"
  },
  {
    "name": "AutoComplete",
    "passed": 113,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 113,
    "duration": 3836,
    "type": "report",
    "Base": {
      "name": "Base",
      "passed": 52,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 52,
      "duration": 1707,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 53,
        "type": "testcase",
        "Initializer should accept an inputNode": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Initializer should accept an inputNode",
          "duration": 26
        },
        "destructor should detach events": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should detach events",
          "duration": 18
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 27,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 27,
        "duration": 843,
        "type": "testcase",
        "Browser autocomplete should be off by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Browser autocomplete should be off by default",
          "duration": 73
        },
        "Browser autocomplete should be turned on when enabled": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Browser autocomplete should be turned on when enabled",
          "duration": 25
        },
        "Browser autocomplete should be settable after init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Browser autocomplete should be settable after init",
          "duration": 28
        },
        "inputNode should be writable only on init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "inputNode should be writable only on init",
          "duration": 32
        },
        "maxResults should enforce a maximum number of results": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "maxResults should enforce a maximum number of results",
          "duration": 23
        },
        "maxResults should do nothing if <= 0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "maxResults should do nothing if <= 0",
          "duration": 22
        },
        "minQueryLength should enforce a minimum query length": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "minQueryLength should enforce a minimum query length",
          "duration": 25
        },
        "minQueryLength should allow empty queries if set to 0": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "minQueryLength should allow empty queries if set to 0",
          "duration": 24
        },
        "minQueryLength should prevent queries if negative": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "minQueryLength should prevent queries if negative",
          "duration": 23
        },
        "queryDelay should delay query events": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "queryDelay should delay query events",
          "duration": 65
        },
        "_parseValue should return the rightmost token when using a queryDelimiter": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_parseValue should return the rightmost token when using a queryDelimiter",
          "duration": 30
        },
        "requestTemplate should accept a custom template function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate should accept a custom template function",
          "duration": 20
        },
        "requestTemplate should generate a template function when set to a string": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate should generate a template function when set to a string",
          "duration": 19
        },
        "requestTemplate function should replace {query} with the URI-encoded query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate function should replace {query} with the URI-encoded query",
          "duration": 20
        },
        "`this` object in requestTemplate functions should be the AutoComplete instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`this` object in requestTemplate functions should be the AutoComplete instance",
          "duration": 22
        },
        "resultFilters should accept a function, array of functions, string, array of strings, or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultFilters should accept a function, array of functions, string, array of strings, or null",
          "duration": 23
        },
        "result filters should receive the query and an array of result objects as parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "result filters should receive the query and an array of result objects as parameters",
          "duration": 31
        },
        "resultFormatter should accept a function or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultFormatter should accept a function or null",
          "duration": 20
        },
        "result formatters should receive the query and an array of result objects as parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "result formatters should receive the query and an array of result objects as parameters",
          "duration": 21
        },
        "resultHighlighter should accept a function, string, or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultHighlighter should accept a function, string, or null",
          "duration": 22
        },
        "result highlighters should receive the query and an array of result objects as parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "result highlighters should receive the query and an array of result objects as parameters",
          "duration": 25
        },
        "resultListLocator should accept a function, string, or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultListLocator should accept a function, string, or null",
          "duration": 22
        },
        "resultListLocator should locate results": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultListLocator should locate results",
          "duration": 22
        },
        "resultTextLocator should locate result text": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "resultTextLocator should locate result text",
          "duration": 23
        },
        "_parseResponse should preserve duplicates in text when using resultTextLocator": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_parseResponse should preserve duplicates in text when using resultTextLocator",
          "duration": 23
        },
        "value attribute should update the inputNode value and query attribute when set via the API, but should not fire a query event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "value attribute should update the inputNode value and query attribute when set via the API, but should not fire a query event",
          "duration": 27
        },
        "_functionValidator() should accept a function or null": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_functionValidator() should accept a function or null",
          "duration": 21
        }
      },
      "Events": {
        "name": "Events",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 210,
        "type": "testcase",
        "clear event should fire when the query is cleared": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clear event should fire when the query is cleared",
          "duration": 28
        },
        "clear event should fire when the value attribute is cleared via the API": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clear event should fire when the value attribute is cleared via the API",
          "duration": 32
        },
        "clear event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clear event should be preventable",
          "duration": 23
        },
        "query event should fire when the value attribute is changed via the UI": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "query event should fire when the value attribute is changed via the UI",
          "duration": 24
        },
        "query event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "query event should be preventable",
          "duration": 21
        },
        "results event should fire when a source returns results": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "results event should fire when a source returns results",
          "duration": 28
        },
        "results event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "results event should be preventable",
          "duration": 28
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 29,
        "type": "testcase",
        "sendRequest should provide a complete request object to source.sendRequest": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sendRequest should provide a complete request object to source.sendRequest",
          "duration": 26
        }
      },
      "Built-in sources": {
        "name": "Built-in sources",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 306,
        "type": "testcase",
        "Array sources should return the full array regardless of query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Array sources should return the full array regardless of query",
          "duration": 24
        },
        "DataSource sources should work": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "DataSource sources should work",
          "duration": 35
        },
        "Function sources should support synchronous return values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Function sources should support synchronous return values",
          "duration": 101
        },
        "Function sources should support asynchronous return values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Function sources should support asynchronous return values",
          "duration": 58
        },
        "Object sources should work": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Object sources should work",
          "duration": 36
        },
        "sourceType should override source type detection for built-in types": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sourceType should override source type detection for built-in types",
          "duration": 22
        }
      },
      "Extra sources (autocomplete-sources)": {
        "name": "Extra sources (autocomplete-sources)",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 252,
        "type": "testcase",
        "<select> nodes should be turned into select source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "<select> nodes should be turned into select source objects",
          "duration": 32
        },
        "A <select> result should be an object with convenient properties": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A <select> result should be an object with convenient properties",
          "duration": 32
        },
        "XHR strings should be turned into IO source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "XHR strings should be turned into IO source objects",
          "duration": 20
        },
        "JSONP strings should be turned into JSONP source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "JSONP strings should be turned into JSONP source objects",
          "duration": 21
        },
        "Y.JSONPRequest instances should be turned into JSONP source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.JSONPRequest instances should be turned into JSONP source objects",
          "duration": 21
        },
        "YQL strings should be turned into YQL source objects": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "YQL strings should be turned into YQL source objects",
          "duration": 21
        },
        "sourceType should override source type detection for extra types": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sourceType should override source type detection for extra types",
          "duration": 21
        },
        "_jsonpFormatter should correctly format URLs both with and without a requestTemplate set": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_jsonpFormatter should correctly format URLs both with and without a requestTemplate set",
          "duration": 22
        },
        "requestTemplate should be appended to XHR source URLs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "requestTemplate should be appended to XHR source URLs",
          "duration": 24
        }
      }
    },
    "Filters": {
      "name": "Filters",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 82,
      "type": "testsuite",
      "API": {
        "name": "API",
        "passed": 20,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 20,
        "duration": 79,
        "type": "testcase",
        "charMatch() should match all characters in the query, in any order": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should match all characters in the query, in any order",
          "duration": 1
        },
        "charMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should be case-insensitive",
          "duration": 1
        },
        "charMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchCase() should be case-sensitive",
          "duration": 1
        },
        "charMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "phraseMatch() should match the complete query as a phrase": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should match the complete query as a phrase",
          "duration": 1
        },
        "phraseMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should be case-insensitive",
          "duration": 1
        },
        "phraseMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchCase() should be case-sensitive",
          "duration": 1
        },
        "phraseMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "startsWith() should match the complete query at the start of a result": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should match the complete query at the start of a result",
          "duration": 1
        },
        "startsWith() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should be case-insensitive",
          "duration": 1
        },
        "startsWithCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithCase() should be case-sensitive",
          "duration": 1
        },
        "startsWithFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithFold() should match accent-folded characters",
          "duration": 4
        },
        "subWordMatch() should match results where all words in the query - ignoring whitespace and punctuation - occur partially in the text": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should match results where all words in the query - ignoring whitespace and punctuation - occur partially in the text",
          "duration": 2
        },
        "subWordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should be case-insensitive",
          "duration": 1
        },
        "subWordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "subWordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "wordMatch() should match results that contain all words in the query in any order": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should match results that contain all words in the query in any order",
          "duration": 3
        },
        "wordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should be case-insensitive",
          "duration": 1
        },
        "wordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "wordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchFold() should match accent-folded characters",
          "duration": 4
        }
      }
    },
    "Highlighters": {
      "name": "Highlighters",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 90,
      "type": "testsuite",
      "API": {
        "name": "API",
        "passed": 20,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 20,
        "duration": 86,
        "type": "testcase",
        "charMatch() should highlight all characters in the query, in any order": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should highlight all characters in the query, in any order",
          "duration": 1
        },
        "charMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatch() should be case-insensitive",
          "duration": 1
        },
        "charMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchCase() should be case-sensitive",
          "duration": 1
        },
        "charMatchFold() should highlight accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "charMatchFold() should highlight accent-folded characters",
          "duration": 5
        },
        "phraseMatch() should highlight the complete query as a phrase": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should highlight the complete query as a phrase",
          "duration": 2
        },
        "phraseMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatch() should be case-insensitive",
          "duration": 1
        },
        "phraseMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchCase() should be case-sensitive",
          "duration": 1
        },
        "phraseMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "phraseMatchFold() should match accent-folded characters",
          "duration": 4
        },
        "startsWith() should highlight the complete query at the start of a result": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should highlight the complete query at the start of a result",
          "duration": 2
        },
        "startsWith() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWith() should be case-insensitive",
          "duration": 1
        },
        "startsWithCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithCase() should be case-sensitive",
          "duration": 1
        },
        "startsWithFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "startsWithFold() should match accent-folded characters",
          "duration": 4
        },
        "subWordMatch() should highlight partial words in the query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should highlight partial words in the query",
          "duration": 2
        },
        "subWordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatch() should be case-insensitive",
          "duration": 1
        },
        "subWordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "subWordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subWordMatchFold() should match accent-folded characters",
          "duration": 7
        },
        "wordMatch() should highlight complete words in the query": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should highlight complete words in the query",
          "duration": 2
        },
        "wordMatch() should be case-insensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatch() should be case-insensitive",
          "duration": 1
        },
        "wordMatchCase() should be case-sensitive": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchCase() should be case-sensitive",
          "duration": 1
        },
        "wordMatchFold() should match accent-folded characters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "wordMatchFold() should match accent-folded characters",
          "duration": 4
        }
      }
    },
    "List": {
      "name": "List",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 1622,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 444,
        "type": "testcase",
        "List should render inside the same parent as the inputNode by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List should render inside the same parent as the inputNode by default",
          "duration": 56
        },
        "List width should match the width of the inputNode by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List width should match the width of the inputNode by default",
          "duration": 57
        },
        "Explicit list widths should be supported": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Explicit list widths should be supported",
          "duration": 53
        },
        "List should default to a sane width if the inputNode width is 0 or unknown": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List should default to a sane width if the inputNode width is 0 or unknown",
          "duration": 51
        },
        "List should not appear automatically when attached to an inputNode with text": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "List should not appear automatically when attached to an inputNode with text",
          "duration": 65
        },
        "test: verify list markup": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: verify list markup",
          "duration": 53
        },
        "test: verify result item markup": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: verify result item markup",
          "duration": 74
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 797,
        "type": "testcase",
        "test: activateFirstItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: activateFirstItem",
          "duration": 100
        },
        "test: activeItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: activeItem",
          "duration": 193
        },
        "test: alwaysShowList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: alwaysShowList",
          "duration": 70
        },
        "test: circular": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: circular",
          "duration": 95
        },
        "test: hoveredItem": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: hoveredItem",
          "duration": 96
        },
        "test: tabSelect": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: tabSelect",
          "duration": 115
        },
        "test: visible": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "test: visible",
          "duration": 75
        }
      },
      "Events": {
        "name": "Events",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 179,
        "type": "testcase",
        "select event should fire when a result is selected": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "select event should fire when a result is selected",
          "duration": 97
        },
        "list events should be detached when the list is destroyed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "list events should be detached when the list is destroyed",
          "duration": 71
        }
      },
      "API": {
        "name": "API",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 196,
        "type": "testcase",
        "hide() should hide the list, except when alwaysShowList is true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hide() should hide the list, except when alwaysShowList is true",
          "duration": 75
        },
        "_ariaSay() should insert text only, not HTML": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_ariaSay() should insert text only, not HTML",
          "duration": 94
        }
      }
    },
    "Plugin": {
      "name": "Plugin",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 220,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 217,
        "type": "testcase",
        "inputNode.ac should be an instance of Y.Plugin.AutoComplete": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "inputNode.ac should be an instance of Y.Plugin.AutoComplete",
          "duration": 65
        },
        "inputNode.ac should extend Y.AutoCompleteList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "inputNode.ac should extend Y.AutoCompleteList",
          "duration": 62
        },
        "The plugin should render itself immediately": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "The plugin should render itself immediately",
          "duration": 67
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:08 PM"
  },
  {
    "name": "Console",
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 26,
    "duration": 205,
    "type": "report",
    "Lifecycle": {
      "name": "Lifecycle",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 1,
      "type": "testcase",
      "test default construction": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test default construction",
        "duration": 1
      }
    },
    "API": {
      "name": "API",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 32,
      "type": "testcase",
      "test log": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test log",
        "duration": 1
      },
      "test clearConsole": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test clearConsole",
        "duration": 0
      },
      "test reset": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test reset",
        "duration": 0
      },
      "test collapse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test collapse",
        "duration": 0
      },
      "test expand": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test expand",
        "duration": 1
      },
      "test scrollToLatest": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test scrollToLatest",
        "duration": 1
      },
      "test render": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test render",
        "duration": 1
      },
      "test printBuffer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test printBuffer",
        "duration": 0
      }
    },
    "Attributes": {
      "name": "Attributes",
      "passed": 15,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 15,
      "duration": 61,
      "type": "testcase",
      "logEvent should be writeOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "logEvent should be writeOnce",
        "duration": 1
      },
      "logSource should be writeOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "logSource should be writeOnce",
        "duration": 1
      },
      "test strings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test strings",
        "duration": 1
      },
      "test paused": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test paused",
        "duration": 1
      },
      "test defaultCategory": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test defaultCategory",
        "duration": 1
      },
      "test defaultSource": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test defaultSource",
        "duration": 1
      },
      "test entryTemplate": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test entryTemplate",
        "duration": 1
      },
      "test logLevel": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test logLevel",
        "duration": 1
      },
      "test printTimeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test printTimeout",
        "duration": 1
      },
      "test printLimit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test printLimit",
        "duration": 1
      },
      "test consoleLimit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test consoleLimit",
        "duration": 1
      },
      "test newestOnTop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test newestOnTop",
        "duration": 1
      },
      "test scrollIntoView": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test scrollIntoView",
        "duration": 1
      },
      "test collapsed": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test collapsed",
        "duration": 1
      },
      "test style": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test style",
        "duration": 1
      }
    },
    "Runtime expectations": {
      "name": "Runtime expectations",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 6,
      "type": "testcase",
      "test ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ",
        "duration": 1
      }
    },
    "Bugs": {
      "name": "Bugs",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 9,
      "type": "testcase",
      "test ": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test ",
        "duration": 0
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:09 PM"
  },
  {
    "name": "Cookie",
    "passed": 166,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 166,
    "duration": 873,
    "type": "report",
    "Cookie Parsing Tests": {
      "name": "Cookie Parsing Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 89,
      "type": "testcase",
      "testParseCookieStringEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringEmpty",
        "duration": 1
      },
      "testParseCookieStringNull": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringNull",
        "duration": 0
      },
      "testParseCookieStringBoolean": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringBoolean",
        "duration": 1
      },
      "testParseCookieStringUndefined": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringUndefined",
        "duration": 1
      },
      "testParseCookieStringInvalid": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringInvalid",
        "duration": 1
      },
      "testParseCookieStringSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringSimple",
        "duration": 1
      },
      "testParseCookieStringNumber": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringNumber",
        "duration": 1
      },
      "testParseCookieStringSimpleMulti": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringSimpleMulti",
        "duration": 1
      },
      "testParseCookieStringComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringComplex",
        "duration": 1
      },
      "testParseCookieStringNetwork": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringNetwork",
        "duration": 1
      },
      "testParseCookieStringWithEscapedCharactersInCookieName": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringWithEscapedCharactersInCookieName",
        "duration": 1
      },
      "testParseCookieStringIncorrectFormat": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringIncorrectFormat",
        "duration": 1
      },
      "testParseCookieStringInvalidEncoding": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringInvalidEncoding",
        "duration": 20
      },
      "testParseCookieStringBooleanCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringBooleanCookie",
        "duration": 0
      },
      "testParseCookieStringWithHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieStringWithHash",
        "duration": 2
      },
      "testParseCookieHash": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieHash",
        "duration": 1
      },
      "testParseCookieHashComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieHashComplex",
        "duration": 1
      },
      "testParseCookieHashEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testParseCookieHashEmpty",
        "duration": 1
      }
    },
    "Cookie String Creation Tests": {
      "name": "Cookie String Creation Tests",
      "passed": 21,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 21,
      "duration": 86,
      "type": "testcase",
      "testCreateCookieStringSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimple",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithPath",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidPath1",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidPath2",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithDomain",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidDomain1",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidDomain2",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithSecure",
        "duration": 0
      },
      "testCreateCookieStringSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithExpiry",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithInvalidExpiry",
        "duration": 1
      },
      "testCreateCookieStringSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringSimpleWithAll",
        "duration": 1
      },
      "testCreateCookieStringComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplex",
        "duration": 1
      },
      "testCreateCookieStringComplexWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithPath",
        "duration": 1
      },
      "testCreateCookieStringComplexWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithDomain",
        "duration": 1
      },
      "testCreateCookieStringComplexWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithSecure",
        "duration": 1
      },
      "testCreateCookieStringComplexWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithExpiry",
        "duration": 1
      },
      "testCreateCookieStringComplexWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieStringComplexWithAll",
        "duration": 1
      },
      "testCreateCookieHashString1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieHashString1",
        "duration": 1
      },
      "testCreateCookieHashString2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCreateCookieHashString2",
        "duration": 1
      }
    },
    "Get Cookie Tests": {
      "name": "Get Cookie Tests",
      "passed": 23,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 23,
      "duration": 99,
      "type": "testcase",
      "testGetSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSimple",
        "duration": 1
      },
      "testGetUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetUnknown",
        "duration": 1
      },
      "testGetComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetComplex",
        "duration": 1
      },
      "testGetInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName1",
        "duration": 5
      },
      "testGetInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName2",
        "duration": 4
      },
      "testGetInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName3",
        "duration": 4
      },
      "testGetInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName4",
        "duration": 4
      },
      "testGetInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetInvalidName5",
        "duration": 4
      },
      "testGetWithBooleanConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithBooleanConverter",
        "duration": 1
      },
      "testGetWithNumberConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithNumberConverter",
        "duration": 1
      },
      "testGetWithCustomConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithCustomConverter",
        "duration": 1
      },
      "testGetWithInvalidConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithInvalidConverter",
        "duration": 1
      },
      "testGetWithConverterAndUnknownCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithConverterAndUnknownCookie",
        "duration": 1
      },
      "testGetWithBooleanConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithBooleanConverterOption",
        "duration": 1
      },
      "testGetWithNumberConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithNumberConverterOption",
        "duration": 1
      },
      "testGetWithCustomConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithCustomConverterOption",
        "duration": 1
      },
      "testGetWithInvalidConverterOption": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithInvalidConverterOption",
        "duration": 1
      },
      "testGetWithConverterOptionAndUnknownCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithConverterOptionAndUnknownCookie",
        "duration": 1
      },
      "testGetWithEmptyOptions": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetWithEmptyOptions",
        "duration": 1
      },
      "testGetSimpleWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSimpleWithFalseRaw",
        "duration": 1
      },
      "testGetSimpleWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSimpleWithTrueRaw",
        "duration": 1
      },
      "testGetComplexWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetComplexWithFalseRaw",
        "duration": 1
      },
      "testGetComplexWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetComplexWithTrueRaw",
        "duration": 1
      }
    },
    "Cookie Exists Tests": {
      "name": "Cookie Exists Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 14,
      "type": "testcase",
      "testExistsSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExistsSimple",
        "duration": 1
      },
      "testExistsUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExistsUnknown",
        "duration": 1
      },
      "testExistsBooleanCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testExistsBooleanCookie",
        "duration": 1
      }
    },
    "Get Cookie Subs Tests": {
      "name": "Get Cookie Subs Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 16,
      "type": "testcase",
      "testGetSubsSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubsSimple",
        "duration": 1
      },
      "testGetSubsUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubsUnknown",
        "duration": 1
      },
      "testGetSubsComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubsComplex",
        "duration": 1
      }
    },
    "Get Cookie Sub Tests": {
      "name": "Get Cookie Sub Tests",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 96,
      "type": "testcase",
      "testGetSubSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubSimple",
        "duration": 1
      },
      "testGetSubUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubUnknown",
        "duration": 1
      },
      "testGetSubComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubComplex",
        "duration": 1
      },
      "testGetSubInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName1",
        "duration": 5
      },
      "testGetSubInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName2",
        "duration": 5
      },
      "testGetSubInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName3",
        "duration": 5
      },
      "testGetSubInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName4",
        "duration": 4
      },
      "testGetSubInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidName5",
        "duration": 5
      },
      "testGetSubInvalidSubName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName1",
        "duration": 4
      },
      "testGetSubInvalidSubName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName2",
        "duration": 4
      },
      "testGetSubInvalidSubName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName3",
        "duration": 5
      },
      "testGetSubInvalidSubName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName4",
        "duration": 4
      },
      "testGetSubInvalidSubName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubInvalidSubName5",
        "duration": 5
      },
      "testGetSubOnNonExistantCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubOnNonExistantCookie",
        "duration": 1
      },
      "testGetSubWithBooleanConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithBooleanConverter",
        "duration": 1
      },
      "testGetSubWithNumberConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithNumberConverter",
        "duration": 0
      },
      "testGetSubWithCustomConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithCustomConverter",
        "duration": 1
      },
      "testGetSubWithInvalidConverter": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetSubWithInvalidConverter",
        "duration": 1
      },
      "testSubGetWithConverterAndUnknownCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSubGetWithConverterAndUnknownCookie",
        "duration": 1
      },
      "testSubGetSpecial": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSubGetSpecial",
        "duration": 9
      }
    },
    "Remove Cookie Sub Tests": {
      "name": "Remove Cookie Sub Tests",
      "passed": 19,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 19,
      "duration": 118,
      "type": "testcase",
      "testRemoveSubSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubSimple",
        "duration": 1
      },
      "testRemoveSubUnknown": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubUnknown",
        "duration": 1
      },
      "testRemoveSubInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName1",
        "duration": 5
      },
      "testRemoveSubInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName2",
        "duration": 4
      },
      "testRemoveSubInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName3",
        "duration": 5
      },
      "testRemoveSubInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName4",
        "duration": 5
      },
      "testRemoveSubInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidName5",
        "duration": 4
      },
      "testRemoveSubInvalidSubName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName1",
        "duration": 5
      },
      "testRemoveSubInvalidSubName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName2",
        "duration": 4
      },
      "testRemoveSubInvalidSubName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName3",
        "duration": 5
      },
      "testRemoveSubInvalidSubName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName4",
        "duration": 4
      },
      "testRemoveSubInvalidSubName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubInvalidSubName5",
        "duration": 4
      },
      "testRemoveSubOnNonExistantCookie": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSubOnNonExistantCookie",
        "duration": 0
      },
      "testRemoveLastSub": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveLastSub",
        "duration": 1
      },
      "testRemoveLastSubWithTrueRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveLastSubWithTrueRemoveIfEmpty",
        "duration": 1
      },
      "testRemoveLastSubWithFalseRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveLastSubWithFalseRemoveIfEmpty",
        "duration": 1
      },
      "testRemoveNotLastSubWithTrueRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveNotLastSubWithTrueRemoveIfEmpty",
        "duration": 2
      },
      "testRemoveNotLastSubWithFalseRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveNotLastSubWithFalseRemoveIfEmpty",
        "duration": 2
      },
      "testRemoveNotLastSubWithInvalidRemoveIfEmpty": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveNotLastSubWithInvalidRemoveIfEmpty",
        "duration": 1
      }
    },
    "Remove Cookie Tests": {
      "name": "Remove Cookie Tests",
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 7,
      "duration": 33,
      "type": "testcase",
      "testRemoveSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveSimple",
        "duration": 1
      },
      "testRemoveInvalidName1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName1",
        "duration": 5
      },
      "testRemoveInvalidName2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName2",
        "duration": 4
      },
      "testRemoveInvalidName3": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName3",
        "duration": 5
      },
      "testRemoveInvalidName4": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName4",
        "duration": 5
      },
      "testRemoveInvalidName5": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveInvalidName5",
        "duration": 4
      },
      "testRemoveWithOptionsIntact": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRemoveWithOptionsIntact",
        "duration": 1
      }
    },
    "Set Cookie Tests": {
      "name": "Set Cookie Tests",
      "passed": 24,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 24,
      "duration": 98,
      "type": "testcase",
      "testSetSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimple",
        "duration": 1
      },
      "testSetSimpleWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithFalseRaw",
        "duration": 1
      },
      "testSetSimpleWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithTrueRaw",
        "duration": 1
      },
      "testSetSimpleWithInvalidRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidRaw",
        "duration": 1
      },
      "testSetSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithPath",
        "duration": 1
      },
      "testSetSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidPath1",
        "duration": 1
      },
      "testSetSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidPath2",
        "duration": 1
      },
      "testSetSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithDomain",
        "duration": 1
      },
      "testSetSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidDomain1",
        "duration": 0
      },
      "testSetSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidDomain2",
        "duration": 1
      },
      "testSetSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithSecure",
        "duration": 1
      },
      "testSetSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testSetSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testSetSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithExpiry",
        "duration": 1
      },
      "testSetSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithInvalidExpiry",
        "duration": 1
      },
      "testSetSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSimpleWithAll",
        "duration": 1
      },
      "testSetComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplex",
        "duration": 1
      },
      "testSetComplexWithFalseRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithFalseRaw",
        "duration": 1
      },
      "testSetComplexWithTrueRaw": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithTrueRaw",
        "duration": 1
      },
      "testSetComplexWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithPath",
        "duration": 1
      },
      "testSetComplexWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithDomain",
        "duration": 1
      },
      "testSetComplexWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithSecure",
        "duration": 1
      },
      "testSetComplexWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithExpiry",
        "duration": 1
      },
      "testSetComplexWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetComplexWithAll",
        "duration": 1
      }
    },
    "Set Subcookie Tests": {
      "name": "Set Subcookie Tests",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 58,
      "type": "testcase",
      "testSetSubSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimple",
        "duration": 1
      },
      "testSetSubSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithPath",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidPath1",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidPath2",
        "duration": 1
      },
      "testSetSubSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithDomain",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidDomain1",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidDomain2",
        "duration": 1
      },
      "testSetSubSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithSecure",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testSetSubSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithExpiry",
        "duration": 1
      },
      "testSetSubSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithInvalidExpiry",
        "duration": 1
      },
      "testSetSubSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSimpleWithAll",
        "duration": 1
      },
      "testSetSubSpecial": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubSpecial",
        "duration": 1
      }
    },
    "Set Complete Subcookie Tests": {
      "name": "Set Complete Subcookie Tests",
      "passed": 14,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 14,
      "duration": 59,
      "type": "testcase",
      "testSetSubsSimple": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimple",
        "duration": 1
      },
      "testSetSubsSimpleWithPath": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithPath",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidPath1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidPath1",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidPath2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidPath2",
        "duration": 1
      },
      "testSetSubsSimpleWithDomain": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithDomain",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidDomain1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidDomain1",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidDomain2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidDomain2",
        "duration": 1
      },
      "testSetSubsSimpleWithSecure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithSecure",
        "duration": 0
      },
      "testSetSubsSimpleWithInvalidSecure1": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidSecure1",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidSecure2": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidSecure2",
        "duration": 1
      },
      "testSetSubsSimpleWithExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithExpiry",
        "duration": 1
      },
      "testSetSubsSimpleWithInvalidExpiry": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithInvalidExpiry",
        "duration": 1
      },
      "testSetSubsSimpleWithAll": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsSimpleWithAll",
        "duration": 1
      },
      "testSetSubsValues": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSetSubsValues",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:11 PM"
  },
  {
    "name": "App",
    "passed": 354,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 354,
    "duration": 5642,
    "type": "report",
    "App Base": {
      "name": "App Base",
      "passed": 86,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 86,
      "duration": 1768,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 13,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 13,
        "duration": 183,
        "type": "testcase",
        "`container` should default to the `<body>`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`container` should default to the `<body>`",
          "duration": 10
        },
        "A specified `container` should be used during construction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A specified `container` should be used during construction",
          "duration": 13
        },
        "`viewContainer` should be a new `<div\/>` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`viewContainer` should be a new `<div\/>` by default",
          "duration": 11
        },
        "A specified `viewContainer` should be used during construction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A specified `viewContainer` should be used during construction",
          "duration": 10
        },
        "`activeView` should be undefined by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should be undefined by default",
          "duration": 7
        },
        "`activeView` should not be overrideable in the constructor config": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should not be overrideable in the constructor config",
          "duration": 8
        },
        "`linkSelector` should be `\"a\"` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`linkSelector` should be `\"a\"` by default",
          "duration": 6
        },
        "`serverRouting` should default to undefined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should default to undefined",
          "duration": 6
        },
        "`serverRouting` should be overrideable via the constructor": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should be overrideable via the constructor",
          "duration": 7
        },
        "`views` property should be empty by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`views` property should be empty by default",
          "duration": 6
        },
        "`views` should be a copy of the `views` object on the prototype": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`views` should be a copy of the `views` object on the prototype",
          "duration": 6
        },
        "Destroying an app with `{remove: true}` should destroy its `container` and `viewContainer`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Destroying an app with `{remove: true}` should destroy its `container` and `viewContainer`",
          "duration": 61
        },
        "Destroying an app with `{remove: true}` with the `<body>` for a container should only remove its CSS classes, not the body from the DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Destroying an app with `{remove: true}` with the `<body>` for a container should only remove its CSS classes, not the body from the DOM",
          "duration": 11
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 251,
        "type": "testcase",
        "`activeView` should be read-only": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should be read-only",
          "duration": 16
        },
        "`activeView` should be modifiable via the `showView()` method": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeView` should be modifiable via the `showView()` method",
          "duration": 19
        },
        "`container` and `viewContainer` should be able to be the same node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`container` and `viewContainer` should be able to be the same node",
          "duration": 8
        },
        "`container` should be stamped with the App CSS class": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`container` should be stamped with the App CSS class",
          "duration": 14
        },
        "`viewContainer` should be stamped with the App Views CSS class when the app is rendered": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`viewContainer` should be stamped with the App Views CSS class when the app is rendered",
          "duration": 15
        },
        "`viewContainer` should only be settable during initialization": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`viewContainer` should only be settable during initialization",
          "duration": 14
        },
        "`Y.App.serverRouting` should be `undefined` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.serverRouting` should be `undefined` by default",
          "duration": 1
        },
        "`serverRouting` should default to the value of `Y.App.serverRouting`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should default to the value of `Y.App.serverRouting`",
          "duration": 18
        },
        "`serverRouting` should only be settable during initialization": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should only be settable during initialization",
          "duration": 14
        },
        "`serverRouting` should only be settable with a user-specified value during initialization": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`serverRouting` should only be settable with a user-specified value during initialization",
          "duration": 14
        },
        "Setting `serverRouting` to `false` should force `html5` to default to `false` in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `false` should force `html5` to default to `false` in HTML5 browsers",
          "duration": 14
        },
        "Setting `serverRouting` to `false` should force `html5` to default to `false` in non-HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `false` should force `html5` to default to `false` in non-HTML5 browsers",
          "duration": 14
        },
        "Setting `serverRouting` to `true` should allow `html5` to default to `true` in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `true` should allow `html5` to default to `true` in HTML5 browsers",
          "duration": 16
        },
        "Setting `serverRouting` to `true` should allow `html5` to default to `false` in non-HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `true` should allow `html5` to default to `false` in non-HTML5 browsers",
          "duration": 13
        },
        "Setting `serverRouting` to `undefined` should allow `html5` to default to `true` in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `undefined` should allow `html5` to default to `true` in HTML5 browsers",
          "duration": 13
        },
        "Setting `serverRouting` to `undefined` should allow `html5` to default to `false` in non-HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Setting `serverRouting` to `undefined` should allow `html5` to default to `false` in non-HTML5 browsers",
          "duration": 13
        },
        "`html5` should be overridable on construction even when `serverRouting` is false": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`html5` should be overridable on construction even when `serverRouting` is false",
          "duration": 13
        }
      },
      "Events": {
        "name": "Events",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 252,
        "type": "testcase",
        "`navigate` should fire when `serverRouting` is falsy, even when `html5` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate` should fire when `serverRouting` is falsy, even when `html5` is `false`",
          "duration": 226
        },
        "`navigate` event should fire when a link is clicked": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate` event should fire when a link is clicked",
          "duration": 11
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 121,
        "type": "testcase",
        "`createView()` should always return a new `Y.View` instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should always return a new `Y.View` instance",
          "duration": 9
        },
        "`createView()` should return a new instance of a named, registered view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should return a new instance of a named, registered view",
          "duration": 7
        },
        "`createView()` should apply the specified `config` to the new `Y.View` instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should apply the specified `config` to the new `Y.View` instance",
          "duration": 12
        },
        "`createView()` should apply the specified `config` to the new instance of a named, registered view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`createView()` should apply the specified `config` to the new instance of a named, registered view",
          "duration": 12
        },
        "`getViewInfo()` should return the metadata for a named, registered view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`getViewInfo()` should return the metadata for a named, registered view",
          "duration": 6
        },
        "`getViewInfo()` should return the metadata for a view constructed by `createView()`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`getViewInfo()` should return the metadata for a view constructed by `createView()`",
          "duration": 8
        },
        "`render()` should append the `viewContainer` into the `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should append the `viewContainer` into the `container`",
          "duration": 11
        },
        "`render()` should properly handle the `container` already containing the `viewContainer": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should properly handle the `container` already containing the `viewContainer",
          "duration": 17
        },
        "`render()` should properly handle the `container` and `viewContainer` being the same node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should properly handle the `container` and `viewContainer` being the same node",
          "duration": 11
        },
        "`render()` should append the `activeView` to the `viewContainer`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`render()` should append the `activeView` to the `viewContainer`",
          "duration": 17
        }
      },
      "Views": {
        "name": "Views",
        "passed": 34,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 34,
        "duration": 862,
        "type": "testcase",
        "A registered view with falsy `type` should default to `Y.View`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view with falsy `type` should default to `Y.View`",
          "duration": 14
        },
        "A registered view with a function `type` should return an instance of that function": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view with a function `type` should return an instance of that function",
          "duration": 9
        },
        "A registered view with a string `type` should look on the `Y` object for the constructor": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view with a string `type` should look on the `Y` object for the constructor",
          "duration": 12
        },
        "A View instance should be preserved when registered with `preserve` as `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A View instance should be preserved when registered with `preserve` as `true`",
          "duration": 24
        },
        "A view registered with a specified `instance` should be preserved when `preserve` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A view registered with a specified `instance` should be preserved when `preserve` is `true`",
          "duration": 25
        },
        "A View instance should not be preserved when registered with `preserve` as `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A View instance should not be preserved when registered with `preserve` as `false`",
          "duration": 31
        },
        "A registered view should not be preserved by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A registered view should not be preserved by default",
          "duration": 31
        },
        "Parent\/child view relationships should be determinable from the `views` metadata": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Parent\/child view relationships should be determinable from the `views` metadata",
          "duration": 6
        },
        "Parent\/child view relationships should be determinable from view instances": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Parent\/child view relationships should be determinable from view instances",
          "duration": 8
        },
        "`Y.App` subclasses should be able to specify view metadata on the `prototype`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App` subclasses should be able to specify view metadata on the `prototype`",
          "duration": 7
        },
        "The `views` metadata on the `prototype` should be merged with the specified `views` during construction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "The `views` metadata on the `prototype` should be merged with the specified `views` during construction",
          "duration": 7
        },
        "`showView()` should set the specified view instance or name as the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should set the specified view instance or name as the `activeView`",
          "duration": 28
        },
        "`showView()` should construct a registered view instance with the specified `config`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should construct a registered view instance with the specified `config`",
          "duration": 21
        },
        "`showView()` should accept a `null` `view`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should accept a `null` `view`",
          "duration": 20
        },
        "`showView()` should prepend the new `activeView` when `options.prepend` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should prepend the new `activeView` when `options.prepend` is `true`",
          "duration": 128
        },
        "`showView()` should update the attributes of the `view` with the `config` when `options.update` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should update the attributes of the `view` with the `config` when `options.update` is `true`",
          "duration": 22
        },
        "`showView()` should not update the attributes of the `view` with the `config` when `options.update` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not update the attributes of the `view` with the `config` when `options.update` is `false`",
          "duration": 18
        },
        "`showView()` should not update the attributes of the `view` with the `config` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not update the attributes of the `view` with the `config` by default",
          "duration": 19
        },
        "`showView()` should render a newly-created `view` when `options.render` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should render a newly-created `view` when `options.render` is `true`",
          "duration": 22
        },
        "`showView()` should render an existing `view` when `options.render` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should render an existing `view` when `options.render` is `true`",
          "duration": 29
        },
        "`showView()` should not render a newly-created `view` when `options.render` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not render a newly-created `view` when `options.render` is `false`",
          "duration": 21
        },
        "`showView()` should not render an existing `view` when `options.render` is `false`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not render an existing `view` when `options.render` is `false`",
          "duration": 27
        },
        "`showView()` should render a newly-created `view` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should render a newly-created `view` by default",
          "duration": 22
        },
        "`showView()` should not render an existing `view` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should not render an existing `view` by default",
          "duration": 26
        },
        "`options` passed to `showView()` should be mixed into the `activeViewChange` event facade": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`options` passed to `showView()` should be mixed into the `activeViewChange` event facade",
          "duration": 22
        },
        "`showView()` should accept a `callback` as either the third or fourth param": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should accept a `callback` as either the third or fourth param",
          "duration": 35
        },
        "`showView()` should call the specified `callback` with `this` context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should call the specified `callback` with `this` context",
          "duration": 17
        },
        "`showView()` should pass the new `activeView` to the `callback`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should pass the new `activeView` to the `callback`",
          "duration": 18
        },
        "`showView()` should call the specified `callback` even when the `activeView` did not change": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should call the specified `callback` even when the `activeView` did not change",
          "duration": 18
        },
        "`activeViewChange` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`activeViewChange` event should be preventable",
          "duration": 9
        },
        "An `activeView` should bubble events to the app": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "An `activeView` should bubble events to the app",
          "duration": 18
        },
        "The previous `activeView` should no longer bubble events to the app": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "The previous `activeView` should no longer bubble events to the app",
          "duration": 26
        },
        "A preserved view should not be destroyed when its no longer the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A preserved view should not be destroyed when its no longer the `activeView`",
          "duration": 38
        },
        "A non preserved view should be destroyed when its no longer the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "A non preserved view should be destroyed when its no longer the `activeView`",
          "duration": 29
        }
      },
      "Naivation": {
        "name": "Naivation",
        "passed": 10,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 10,
        "duration": 88,
        "type": "testcase",
        "`_upgradeURL()` should upgrade a path-like hash-based URL to a full URL": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should upgrade a path-like hash-based URL to a full URL",
          "duration": 7
        },
        "`_upgradeURL()` should not upgrade a hash-based URL which is not path-like": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should not upgrade a hash-based URL which is not path-like",
          "duration": 6
        },
        "`_upgradeURL()` should strip any hash-prefix from the hash-based URL": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should strip any hash-prefix from the hash-based URL",
          "duration": 7
        },
        "`_upgradeURL()` should not upgrade URLs of a different origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_upgradeURL()` should not upgrade URLs of a different origin",
          "duration": 7
        },
        "`navigate()` should upgrade hash-based URLs when `serverRouting` is falsy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should upgrade hash-based URLs when `serverRouting` is falsy",
          "duration": 9
        },
        "`navigate()` should upgrade hash-based URLs when `serverRouting` is `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should upgrade hash-based URLs when `serverRouting` is `true`",
          "duration": 8
        },
        "`navigate()` should force the firing of the `navigate` event when `serverRouting` is falsy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should force the firing of the `navigate` event when `serverRouting` is falsy",
          "duration": 7
        },
        "`navigate()` should replace the history entry when the new and current URLs are the \"same\"": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should replace the history entry when the new and current URLs are the \"same\"",
          "duration": 9
        },
        "`navigate()` should not override user-specified values for `force` and `replace`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`navigate()` should not override user-specified values for `force` and `replace`",
          "duration": 7
        },
        "`_save()` should throw an error when the specified URL is not of the same origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_save()` should throw an error when the specified URL is not of the same origin",
          "duration": 15
        }
      }
    },
    "App Content": {
      "name": "App Content",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 439,
      "type": "testsuite",
      "Properties": {
        "name": "Properties",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 1,
        "type": "testcase",
        "Y.App.Content.route should be a stack of middleware": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Y.App.Content.route should be a stack of middleware",
          "duration": 1
        }
      },
      "Views": {
        "name": "Views",
        "passed": 11,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 11,
        "duration": 231,
        "type": "testcase",
        "`showContent()` should set the `activeView` of an app based on the specified `content`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should set the `activeView` of an app based on the specified `content`",
          "duration": 18
        },
        "`showContent()` should accept an HTMLElement, String, or Node as the content": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should accept an HTMLElement, String, or Node as the content",
          "duration": 28
        },
        "`showContent()` should use the only child of a document fragment as the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should use the only child of a document fragment as the view `container`",
          "duration": 16
        },
        "`showContent()` should not use the only text node child of a document fragment as the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should not use the only text node child of a document fragment as the view `container`",
          "duration": 17
        },
        "`showContent()` should wrap the children nodes of a document fragment with the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should wrap the children nodes of a document fragment with the view `container`",
          "duration": 22
        },
        "`showContent()` should accept a `callback` as either the second or third argument": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should accept a `callback` as either the second or third argument",
          "duration": 18
        },
        "`showContent()` should create an instance of the specified `view`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should create an instance of the specified `view`",
          "duration": 15
        },
        "`showContent() should not render the view by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent() should not render the view by default",
          "duration": 22
        },
        "`showContent()` should use the `contentTemplate` of the view when a document fragment has multiple children": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should use the `contentTemplate` of the view when a document fragment has multiple children",
          "duration": 22
        },
        "`showView()` should apply the `options.view.config` to the view": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showView()` should apply the `options.view.config` to the view",
          "duration": 15
        },
        "`showContent()` should _always_ use `content` as the view `container`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`showContent()` should _always_ use `content` as the view `container`",
          "duration": 18
        }
      },
      "Routes": {
        "name": "Routes",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 194,
        "type": "testcase",
        "`Y.App.Content.route` should load HTML content from the server and set the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.Content.route` should load HTML content from the server and set the `activeView`",
          "duration": 30
        },
        "`Y.App.Content.route` should load text content from the server and set the `activeView`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.Content.route` should load text content from the server and set the `activeView`",
          "duration": 29
        },
        "`Y.App.Content.route` should default the document `title` to `<title>`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`Y.App.Content.route` should default the document `title` to `<title>`",
          "duration": 29
        },
        "`loadContent()` middleware should put `ioURL` on the `req` object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`loadContent()` middleware should put `ioURL` on the `req` object",
          "duration": 20
        },
        "`loadContent()` middleware should put `content` and `ioResponse` on the `res` object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`loadContent()` middleware should put `content` and `ioResponse` on the `res` object",
          "duration": 65
        }
      }
    },
    "LazyModelList": {
      "name": "LazyModelList",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 132,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 16,
        "type": "testcase",
        "destructor should detach all revived models from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should detach all revived models from the list",
          "duration": 6
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 109,
        "type": "testcase",
        "add() should add everything as objects, not models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add everything as objects, not models",
          "duration": 8
        },
        "add() should generate a clientId for added objects if necessary": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should generate a clientId for added objects if necessary",
          "duration": 3
        },
        "free() should free the given model or model index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "free() should free the given model or model index",
          "duration": 5
        },
        "free() with no args should free all models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "free() with no args should free all models",
          "duration": 6
        },
        "get() should get properties, not attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "get() should get properties, not attributes",
          "duration": 3
        },
        "getAsHTML() should get properties, not attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should get properties, not attributes",
          "duration": 4
        },
        "getAsURL() should get properties, not attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should get properties, not attributes",
          "duration": 3
        },
        "indexOf() should find objects in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should find objects in the list",
          "duration": 3
        },
        "indexOf() should find revived models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "indexOf() should find revived models in the list",
          "duration": 7
        },
        "remove() should accept both objects and models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should accept both objects and models",
          "duration": 5
        },
        "remove() should maintain indices for revived models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should maintain indices for revived models",
          "duration": 7
        },
        "reset() should accept an array of objects\/models or a ModelList": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should accept an array of objects\/models or a ModelList",
          "duration": 14
        },
        "revive() should revive an index into a model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "revive() should revive an index into a model",
          "duration": 5
        },
        "revive() should revive an object into a model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "revive() should revive an object into a model",
          "duration": 5
        },
        "revive() with no args should revive all models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "revive() with no args should revive all models in the list",
          "duration": 7
        },
        "_isInList() should indicate whether an item is in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_isInList() should indicate whether an item is in the list",
          "duration": 3
        },
        "_modelToObject() should convert a model instance to a plain object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_modelToObject() should convert a model instance to a plain object",
          "duration": 5
        }
      }
    },
    "Model": {
      "name": "Model",
      "passed": 48,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 48,
      "duration": 332,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 44,
        "type": "testcase",
        "destroy() should destroy the model instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should destroy the model instance",
          "duration": 3
        },
        "destroy() should call a callback if provided as the only arg": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should call a callback if provided as the only arg",
          "duration": 3
        },
        "destroy() should call a callback if provided as the second arg": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should call a callback if provided as the second arg",
          "duration": 13
        },
        "destroy() should delete the model if the `remove` option is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should delete the model if the `remove` option is truthy",
          "duration": 4
        },
        "destroy() should remove the model from all lists": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy() should remove the model from all lists",
          "duration": 12
        }
      },
      "Attributes and Properties": {
        "name": "Attributes and Properties",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 126,
        "type": "testcase",
        "Attributes should be settable at instantiation time": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Attributes should be settable at instantiation time",
          "duration": 4
        },
        "Models should allow ad-hoc attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Models should allow ad-hoc attributes",
          "duration": 34
        },
        "Custom id attribute should be settable at instantiation time": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Custom id attribute should be settable at instantiation time",
          "duration": 12
        },
        "`_isYUIModel` property should be true": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`_isYUIModel` property should be true",
          "duration": 3
        },
        "`id` attribute should be an alias for the custom id attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`id` attribute should be an alias for the custom id attribute",
          "duration": 5
        },
        "`changed` property should be a hash of attributes that have changed since last save() or load()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`changed` property should be a hash of attributes that have changed since last save() or load()",
          "duration": 6
        },
        "clientId attribute should be automatically generated": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "clientId attribute should be automatically generated",
          "duration": 2
        },
        "`lastChange` property should contain attributes that changed in the last `change` event": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`lastChange` property should contain attributes that changed in the last `change` event",
          "duration": 4
        },
        "`lists` property should be an array of ModelList instances that contain this model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`lists` property should be an array of ModelList instances that contain this model",
          "duration": 8
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 25,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 25,
        "duration": 109,
        "type": "testcase",
        "generateClientId() should generate a unique client id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "generateClientId() should generate a unique client id",
          "duration": 3
        },
        "getAsHTML() should return an HTML-escaped attribute value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should return an HTML-escaped attribute value",
          "duration": 3
        },
        "getAsURL() should return a URL-encoded attribute value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should return a URL-encoded attribute value",
          "duration": 2
        },
        "isModified() should return true if the model is new": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "isModified() should return true if the model is new",
          "duration": 3
        },
        "isModified() should return true if the model has changed since it was last saved": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "isModified() should return true if the model has changed since it was last saved",
          "duration": 4
        },
        "isNew() should return true if the model is new": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "isNew() should return true if the model is new",
          "duration": 5
        },
        "load() should delegate to sync()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should delegate to sync()",
          "duration": 3
        },
        "load() should reset this.changed when loading succeeds": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should reset this.changed when loading succeeds",
          "duration": 3
        },
        "load() should be chainable and should call the callback if one was provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should be chainable and should call the callback if one was provided",
          "duration": 3
        },
        "parse() should parse a JSON string and return an object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should parse a JSON string and return an object",
          "duration": 2
        },
        "parse() should not try to parse non-strings": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should not try to parse non-strings",
          "duration": 2
        },
        "save() should delegate to sync()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should delegate to sync()",
          "duration": 4
        },
        "save() should reset this.changed when saving succeeds": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should reset this.changed when saving succeeds",
          "duration": 4
        },
        "save() should be chainable and should call the callback if one was provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should be chainable and should call the callback if one was provided",
          "duration": 4
        },
        "set() should set the value of a single attribute": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "set() should set the value of a single attribute",
          "duration": 3
        },
        "setAttrs() should set the values of multiple attributes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "setAttrs() should set the values of multiple attributes",
          "duration": 3
        },
        "sync() should just call the supplied callback by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sync() should just call the supplied callback by default",
          "duration": 2
        },
        "toJSON() should return a copy of the model's attributes, minus excluded ones": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "toJSON() should return a copy of the model's attributes, minus excluded ones",
          "duration": 6
        },
        "undo() should revert the previous change to the model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should revert the previous change to the model",
          "duration": 5
        },
        "undo() should revert only the specified attributes when attributes are specified": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should revert only the specified attributes when attributes are specified",
          "duration": 4
        },
        "undo() should pass options to setAttrs()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should pass options to setAttrs()",
          "duration": 4
        },
        "undo() should do nothing when there is no previous change to revert": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "undo() should do nothing when there is no previous change to revert",
          "duration": 2
        },
        "validate() should only be called on save()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "validate() should only be called on save()",
          "duration": 4
        },
        "a validation failure should abort a save() call": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "a validation failure should abort a save() call",
          "duration": 3
        },
        "validate() should be backwards compatible with the 3.4.x synchronous style": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "validate() should be backwards compatible with the 3.4.x synchronous style",
          "duration": 5
        }
      },
      "Events": {
        "name": "Events",
        "passed": 9,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 9,
        "duration": 44,
        "type": "testcase",
        "`change` event should contain coalesced attribute changes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event should contain coalesced attribute changes",
          "duration": 4
        },
        "`change` event should not fire when the _silent_ option is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event should not fire when the _silent_ option is truthy",
          "duration": 3
        },
        "`change` event facade should contain options passed to set()\/setAttrs()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event facade should contain options passed to set()\/setAttrs()",
          "duration": 4
        },
        "`error` event should fire when validation fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when validation fails",
          "duration": 4
        },
        "`error` event should fire when parsing fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when parsing fails",
          "duration": 7
        },
        "`error` event should fire when a load operation fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a load operation fails",
          "duration": 3
        },
        "`error` event should fire when a save operation fails": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a save operation fails",
          "duration": 3
        },
        "`load` event should fire after a successful load operation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`load` event should fire after a successful load operation",
          "duration": 3
        },
        "`save` event should fire after a successful save operation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`save` event should fire after a successful save operation",
          "duration": 4
        }
      }
    },
    "ModelList": {
      "name": "ModelList",
      "passed": 84,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 84,
      "duration": 760,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 28,
        "type": "testcase",
        "constructor: should add a model instance, array of model instances, or ModelList instance to the list when passed in the `items` config property": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "constructor: should add a model instance, array of model instances, or ModelList instance to the list when passed in the `items` config property",
          "duration": 20
        },
        "destructor should detach all models from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should detach all models from the list",
          "duration": 5
        }
      },
      "Attributes & Properties": {
        "name": "Attributes & Properties",
        "passed": 5,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 5,
        "duration": 24,
        "type": "testcase",
        "ModelList instances should have an `_isYUIModelList` property": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ModelList instances should have an `_isYUIModelList` property",
          "duration": 2
        },
        "ModelList instances should have a `model` property that defaults to Y.Model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "ModelList instances should have a `model` property that defaults to Y.Model",
          "duration": 2
        },
        "`model` property should be customizable on init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`model` property should be customizable on init",
          "duration": 4
        },
        "`model` property should evaluate a string to a namespaced class on `Y`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`model` property should evaluate a string to a namespaced class on `Y`",
          "duration": 4
        },
        "`model` property should support deeply-nested names": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`model` property should support deeply-nested names",
          "duration": 3
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 55,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 55,
        "duration": 525,
        "type": "testcase",
        "add() should add a model to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add a model to the list",
          "duration": 7
        },
        "add() should add a model to the list at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add a model to the list at the specified index",
          "duration": 10
        },
        "add() should add an array of models to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add an array of models to the list",
          "duration": 10
        },
        "add() should add an array of models to the list at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add an array of models to the list at the specified index",
          "duration": 13
        },
        "add() should add models in another ModelList to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add models in another ModelList to the list",
          "duration": 8
        },
        "add() should add models in another ModelList to the list at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should add models in another ModelList to the list at the specified index",
          "duration": 15
        },
        "add() should support models created in other windows": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "add() should support models created in other windows",
          "duration": 3
        },
        "comparator() should be undefined by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "comparator() should be undefined by default",
          "duration": 2
        },
        "models should be added in the proper position based on the comparator": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "models should be added in the proper position based on the comparator",
          "duration": 10
        },
        "create() should create or update a model, then add it to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should create or update a model, then add it to the list",
          "duration": 8
        },
        "create() should call the callback if one is provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should call the callback if one is provided",
          "duration": 8
        },
        "create() should pass an error to the callback if one occurs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should pass an error to the callback if one occurs",
          "duration": 5
        },
        "create() should support models created in other windows": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should support models created in other windows",
          "duration": 4
        },
        "each() should iterate over the models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should iterate over the models in the list",
          "duration": 8
        },
        "each() should accept an optional context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should accept an optional context",
          "duration": 8
        },
        "each() should iterate over a copy of the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "each() should iterate over a copy of the list",
          "duration": 9
        },
        "filter() should filter the list and return an array": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "filter() should filter the list and return an array",
          "duration": 11
        },
        "filter() should return an empty array if the callback never returns a truthy value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "filter() should return an empty array if the callback never returns a truthy value",
          "duration": 4
        },
        "filter() should return a new ModelList when options.asList is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "filter() should return a new ModelList when options.asList is truthy",
          "duration": 13
        },
        "get() should return an array of attribute values from all models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "get() should return an array of attribute values from all models in the list",
          "duration": 6
        },
        "get() should return a list attribute if there is one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "get() should return a list attribute if there is one",
          "duration": 6
        },
        "getAsHTML() should return an array of HTML-escaped attribute values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should return an array of HTML-escaped attribute values",
          "duration": 6
        },
        "getAsHTML() should return a list attribute if there is one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsHTML() should return a list attribute if there is one",
          "duration": 6
        },
        "getAsURL() should return an array of URL-encoded attribute values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should return an array of URL-encoded attribute values",
          "duration": 7
        },
        "getAsURL() should return a list attribute if there is one": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getAsURL() should return a list attribute if there is one",
          "duration": 6
        },
        "getByClientId() should look up a model by its clientId": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByClientId() should look up a model by its clientId",
          "duration": 4
        },
        "getById() should look up a model by its id": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getById() should look up a model by its id",
          "duration": 5
        },
        "getById() should work with numeric ids": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getById() should work with numeric ids",
          "duration": 4
        },
        "getById() should work with custom ids": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getById() should work with custom ids",
          "duration": 5
        },
        "invoke() should call the named method on every model in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "invoke() should call the named method on every model in the list",
          "duration": 7
        },
        "item() should return the model at the specified index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "item() should return the model at the specified index",
          "duration": 6
        },
        "load() should delegate to sync()": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should delegate to sync()",
          "duration": 3
        },
        "load() should be chainable and should call the callback if one was provided": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should be chainable and should call the callback if one was provided",
          "duration": 4
        },
        "load() should reset the list with the loaded items": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should reset the list with the loaded items",
          "duration": 6
        },
        "load() callback should receive an error when a sync error occurs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() callback should receive an error when a sync error occurs",
          "duration": 3
        },
        "map() should execute a function on every model in the list and return an array of return values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "map() should execute a function on every model in the list and return an array of return values",
          "duration": 6
        },
        "parse() should parse a JSON string and return an object": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should parse a JSON string and return an object",
          "duration": 2
        },
        "parse() should not try to parse non-strings": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should not try to parse non-strings",
          "duration": 2
        },
        "remove() should remove a single model from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove a single model from the list",
          "duration": 6
        },
        "remove() should remove a single model from the list by index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove a single model from the list by index",
          "duration": 7
        },
        "remove() should remove an array of models from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove an array of models from the list",
          "duration": 6
        },
        "remove() should remove an array of models from the list by index": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove an array of models from the list by index",
          "duration": 9
        },
        "remove() should remove models in another ModelList from the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove models in another ModelList from the list",
          "duration": 8
        },
        "reset() should replace all models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should replace all models in the list",
          "duration": 139
        },
        "reset() should sort the new models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should sort the new models in the list",
          "duration": 14
        },
        "reset() with no args should clear the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() with no args should clear the list",
          "duration": 7
        },
        "reset() should add models in another ModelList to the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should add models in another ModelList to the list",
          "duration": 9
        },
        "reset() should support models created in other windows": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "reset() should support models created in other windows",
          "duration": 3
        },
        "some() should iterate over the models in the list and stop when the callback returns `true`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should iterate over the models in the list and stop when the callback returns `true`",
          "duration": 9
        },
        "some() should accept an optional context": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should accept an optional context",
          "duration": 8
        },
        "some() should iterate over a copy of the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "some() should iterate over a copy of the list",
          "duration": 9
        },
        "sort() should re-sort the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sort() should re-sort the list",
          "duration": 11
        },
        "sync() should just call the supplied callback by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sync() should just call the supplied callback by default",
          "duration": 3
        },
        "toArray() should return an array containing all the models in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "toArray() should return an array containing all the models in the list",
          "duration": 7
        },
        "toJSON() should return an array of model hashes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "toJSON() should return an array of model hashes",
          "duration": 7
        }
      },
      "Events": {
        "name": "Events",
        "passed": 22,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 22,
        "duration": 178,
        "type": "testcase",
        "`add` event should fire when a model is added": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`add` event should fire when a model is added",
          "duration": 8
        },
        "`add` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`add` event should be preventable",
          "duration": 5
        },
        "`add` event should not fire when a model is added silently": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`add` event should not fire when a model is added silently",
          "duration": 7
        },
        "`change` event should bubble up from models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`change` event should bubble up from models",
          "duration": 6
        },
        "`create` event should fire when a model is created": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`create` event should fire when a model is created",
          "duration": 6
        },
        "`create` event should receive options passed to the create() method": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`create` event should receive options passed to the create() method",
          "duration": 5
        },
        "`error` event should bubble up from models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should bubble up from models",
          "duration": 6
        },
        "`error` event should fire when a model with a duplicate clientId is added": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a model with a duplicate clientId is added",
          "duration": 9
        },
        "`error` event should fire when a model with a duplicate id is added": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a model with a duplicate id is added",
          "duration": 11
        },
        "`error` event should fire when a model that isn't in the list is removed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a model that isn't in the list is removed",
          "duration": 5
        },
        "`error` event should fire when a sync layer response can't be parsed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`error` event should fire when a sync layer response can't be parsed",
          "duration": 7
        },
        "`load` event should fire after a successful load operation": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`load` event should fire after a successful load operation",
          "duration": 5
        },
        "`reset` event should fire when the list is reset or sorted": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should fire when the list is reset or sorted",
          "duration": 6
        },
        "`reset` event facade should contain sorted models": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event facade should contain sorted models",
          "duration": 13
        },
        "`reset` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should be preventable",
          "duration": 4
        },
        "`reset` event should not fire when the list is reset silently": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should not fire when the list is reset silently",
          "duration": 4
        },
        "`reset` event should allow the caller to override the `src` property on the event facade": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`reset` event should allow the caller to override the `src` property on the event facade",
          "duration": 3
        },
        "`remove` event should fire when a model is removed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`remove` event should fire when a model is removed",
          "duration": 9
        },
        "`remove` event should be preventable": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`remove` event should be preventable",
          "duration": 5
        },
        "`remove` event should not fire when a model is removed silently": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`remove` event should not fire when a model is removed silently",
          "duration": 8
        },
        "list should update its id map when a model id changes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "list should update its id map when a model id changes",
          "duration": 8
        },
        "list should ignore id changes for models not in the list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "list should ignore id changes for models not in the list",
          "duration": 9
        }
      }
    },
    "ModelSync.REST": {
      "name": "ModelSync.REST",
      "passed": 30,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 30,
      "duration": 158,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 13,
        "type": "testcase",
        "initializer should set the `root` property on the instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should set the `root` property on the instance",
          "duration": 4
        },
        "initializer should set the `url` property on the instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should set the `url` property on the instance",
          "duration": 4
        }
      },
      "Properties": {
        "name": "Properties",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 15,
        "type": "testcase",
        "`root` property should be an empty string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`root` property should be an empty string by default",
          "duration": 4
        },
        "`url` property should be an empty string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`url` property should be an empty string by default",
          "duration": 4
        },
        "Static `CSRF_TOKEN` should default to the value of `YUI.Env.CSRF_TOKEN`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Static `CSRF_TOKEN` should default to the value of `YUI.Env.CSRF_TOKEN`",
          "duration": 1
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 74,
        "type": "testcase",
        "getURL() should return an empty string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should return an empty string by default",
          "duration": 4
        },
        "getURL() of a model list should return the `root` of its model by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model list should return the `root` of its model by default",
          "duration": 3
        },
        "getURL() of a model list should return its `url` if defined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model list should return its `url` if defined",
          "duration": 3
        },
        "getURL() of a new model should return its `root` if defined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a new model should return its `root` if defined",
          "duration": 3
        },
        "getURL() of a model should return its `root` when the `action` is \"create\"": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `root` when the `action` is \"create\"",
          "duration": 3
        },
        "getURL() of a model should return its `root` joined with its `id` by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `root` joined with its `id` by default",
          "duration": 2
        },
        "getURL() of a model should return its `root` joined with its `id` and normalize slashes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `root` joined with its `id` and normalize slashes",
          "duration": 3
        },
        "getURL() of a model should return its `url` if defined": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() of a model should return its `url` if defined",
          "duration": 4
        },
        "getURL() should substitute tokenized `url`s with attribute values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should substitute tokenized `url`s with attribute values",
          "duration": 5
        },
        "getURL() should substitute tokenized `url`s with `options` values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should substitute tokenized `url`s with `options` values",
          "duration": 4
        },
        "getURL() should substitute tokenized `url`s with attribute and `options` values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should substitute tokenized `url`s with attribute and `options` values",
          "duration": 5
        },
        "getURL() should URL-encode the `url` substitution values": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should URL-encode the `url` substitution values",
          "duration": 3
        },
        "getURL() should not substitute Arrays, Objects, or Boolean values into the `url`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getURL() should not substitute Arrays, Objects, or Boolean values into the `url`",
          "duration": 3
        },
        "parse() should receive the full Y.io response object when `parseIOResponse is falsy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parse() should receive the full Y.io response object when `parseIOResponse is falsy",
          "duration": 4
        },
        "parseIOResponse() should alter the response passed to `parse()`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "parseIOResponse() should alter the response passed to `parse()`",
          "duration": 4
        },
        "serialize() should return a JSON string by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "serialize() should return a JSON string by default",
          "duration": 4
        },
        "serialize() should be passed the `sync()` `action`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "serialize() should be passed the `sync()` `action`",
          "duration": 3
        }
      },
      "Sync": {
        "name": "Sync",
        "passed": 8,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 8,
        "duration": 49,
        "type": "testcase",
        "load() should perform a GET XHR the `url` of the model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should perform a GET XHR the `url` of the model",
          "duration": 4
        },
        "load() should perform a GET XHR the `root` of the model list": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "load() should perform a GET XHR the `root` of the model list",
          "duration": 5
        },
        "save() should perform a POST XHR to the `root` of a new model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should perform a POST XHR to the `root` of a new model",
          "duration": 5
        },
        "save() should perform a PUT XHR to the `url` an exiting model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should perform a PUT XHR to the `url` an exiting model",
          "duration": 8
        },
        "destroy({remove: true}) should perform a DELETE XHR to the `url` an exiting model": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destroy({remove: true}) should perform a DELETE XHR to the `url` an exiting model",
          "duration": 4
        },
        "EMULATE_HTTP should use POST instead of PUT or DELETE XHRs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "EMULATE_HTTP should use POST instead of PUT or DELETE XHRs",
          "duration": 9
        },
        "sync() should accept `csrfToken`, `headers`, and `timeout` options": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "sync() should accept `csrfToken`, `headers`, and `timeout` options",
          "duration": 4
        },
        "Failed sync() calls should pass the HTTP status code and message to the callback": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "Failed sync() calls should pass the HTTP status code and message to the callback",
          "duration": 3
        }
      }
    },
    "Router": {
      "name": "Router",
      "passed": 50,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 50,
      "duration": 1676,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 14,
        "type": "testcase",
        "initializer should set attributes based on config options": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should set attributes based on config options",
          "duration": 4
        },
        "subclass with default routes should work": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "subclass with default routes should work",
          "duration": 5
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 6,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 6,
        "duration": 30,
        "type": "testcase",
        "`html5` attribute should have a default value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`html5` attribute should have a default value",
          "duration": 4
        },
        "`root` attribute should have a default value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`root` attribute should have a default value",
          "duration": 4
        },
        "`routes` attribute should have a default value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`routes` attribute should have a default value",
          "duration": 4
        },
        "setting the `routes` attribute should reset all routes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "setting the `routes` attribute should reset all routes",
          "duration": 5
        },
        "`routes` should support both `callback` and `callbacks` properties": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`routes` should support both `callback` and `callbacks` properties",
          "duration": 4
        },
        "`callbacks` should supercede `callback` property for `routes`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`callbacks` should supercede `callback` property for `routes`",
          "duration": 5
        }
      },
      "Events": {
        "name": "Events",
        "passed": 2,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 2,
        "duration": 77,
        "type": "testcase",
        "`ready` event should fire when the router is ready to dispatch": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`ready` event should fire when the router is ready to dispatch",
          "duration": 27
        },
        "`ready` event should set e.dispatched to true if called after dispatch": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "`ready` event should set e.dispatched to true if called after dispatch",
          "duration": 22
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 23,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 23,
        "duration": 361,
        "type": "testcase",
        "getPath() should return the current location `pathname` when no hash is set in all browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getPath() should return the current location `pathname` when no hash is set in all browsers",
          "duration": 8
        },
        "getPath() should return the `pathname` in HTML5 browsers and otherwise return the hash path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getPath() should return the `pathname` in HTML5 browsers and otherwise return the hash path",
          "duration": 7
        },
        "getPath() should return the hash path in non HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getPath() should return the hash path in non HTML5 browsers",
          "duration": 5
        },
        "route() should add a route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "route() should add a route",
          "duration": 4
        },
        "match() should return an array of routes that match the given path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "match() should return an array of routes that match the given path",
          "duration": 4
        },
        "hasRoute() should return `true` if one or more routes match the given path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasRoute() should return `true` if one or more routes match the given path",
          "duration": 8
        },
        "hasRoute() should support full URLs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasRoute() should support full URLs",
          "duration": 5
        },
        "hasRoute() should always return `false` for URLs with different origins": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "hasRoute() should always return `false` for URLs with different origins",
          "duration": 4
        },
        "dispatch() should dispatch to the first route that matches the current URL": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "dispatch() should dispatch to the first route that matches the current URL",
          "duration": 45
        },
        "dispatch() should upgrade hash URLs to HTML5 URLs in HTML5 browsers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "dispatch() should upgrade hash URLs to HTML5 URLs in HTML5 browsers",
          "duration": 62
        },
        "removeRoot() should remove the root URL from a given path": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "removeRoot() should remove the root URL from a given path",
          "duration": 5
        },
        "removeRoot() should strip the origin (\"http:\/\/foo.com\") portion of the URL, if any": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "removeRoot() should strip the origin (\"http:\/\/foo.com\") portion of the URL, if any",
          "duration": 5
        },
        "replace() should replace the current history entry": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "replace() should replace the current history entry",
          "duration": 13
        },
        "save() should create a new history entry": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should create a new history entry",
          "duration": 10
        },
        "consecutive save() calls should dispatch to the correct routes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "consecutive save() calls should dispatch to the correct routes",
          "duration": 11
        },
        "save() should not include the `root` in the hash path if it is already in the `pathname`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should not include the `root` in the hash path if it is already in the `pathname`",
          "duration": 10
        },
        "save() should include the `root` in the hash path if it is not already in the `pathname`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should include the `root` in the hash path if it is not already in the `pathname`",
          "duration": 17
        },
        "save() should dispath in non HTML5 browsers even when the `hash` does not change": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should dispath in non HTML5 browsers even when the `hash` does not change",
          "duration": 18
        },
        "replace() should error when the URL is not from the same origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "replace() should error when the URL is not from the same origin",
          "duration": 9
        },
        "save() should error when the URL is not from the same origin": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "save() should error when the URL is not from the same origin",
          "duration": 13
        },
        "_joinURL() should normalize \"\/\" separators": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_joinURL() should normalize \"\/\" separators",
          "duration": 5
        },
        "_dispatch() should pass `src` through to request object passed to route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_dispatch() should pass `src` through to request object passed to route handlers",
          "duration": 4
        },
        "_getRegex() should return regexes that do not match too much": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "_getRegex() should return regexes that do not match too much",
          "duration": 15
        }
      },
      "Routes": {
        "name": "Routes",
        "passed": 17,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 17,
        "duration": 1182,
        "type": "testcase",
        "routes should be called in the context of the router": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should be called in the context of the router",
          "duration": 6
        },
        "routes should receive a request object, response object, and `next` function as params": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should receive a request object, response object, and `next` function as params",
          "duration": 6
        },
        "routes should support multiple callback functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support multiple callback functions",
          "duration": 5
        },
        "routes should support an array of callback functions": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support an array of callback functions",
          "duration": 5
        },
        "routes should support an array of callback function string names": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support an array of callback function string names",
          "duration": 34
        },
        "routes should support nested arrays of mixed function and string callbacks": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes should support nested arrays of mixed function and string callbacks",
          "duration": 5
        },
        "route middleware should be able to skip to the next route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "route middleware should be able to skip to the next route",
          "duration": 6
        },
        "request object should contain captured route parameters": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "request object should contain captured route parameters",
          "duration": 6
        },
        "request object should contain a `pendingRoutes` property": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "request object should contain a `pendingRoutes` property",
          "duration": 7
        },
        "calling `res()` should have the same result as calling `next()`": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "calling `res()` should have the same result as calling `next()`",
          "duration": 6
        },
        "calling `next()` should pass control to the next matching route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "calling `next()` should pass control to the next matching route",
          "duration": 9
        },
        "\"*\" should be a catch-all route": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "\"*\" should be a catch-all route",
          "duration": 4
        },
        "routes containing a \"*\" should match the segments which follow it": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "routes containing a \"*\" should match the segments which follow it",
          "duration": 4
        },
        "multiple routers should be able to coexist and have duplicate route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple routers should be able to coexist and have duplicate route handlers",
          "duration": 235
        },
        "multiple nested routers should be able to coexist and duplicate route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple nested routers should be able to coexist and duplicate route handlers",
          "duration": 262
        },
        "multiple nested non-HTML5 routers should be able to coexist and duplicate route handlers": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple nested non-HTML5 routers should be able to coexist and duplicate route handlers",
          "duration": 274
        },
        "multiple routers should respond to history events after one router is destroyed": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "multiple routers should respond to history events after one router is destroyed",
          "duration": 226
        }
      }
    },
    "View": {
      "name": "View",
      "passed": 17,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 17,
      "duration": 146,
      "type": "testsuite",
      "Lifecycle": {
        "name": "Lifecycle",
        "passed": 13,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 13,
        "duration": 92,
        "type": "testcase",
        "container should be a <div> node by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "container should be a <div> node by default",
          "duration": 9
        },
        "default container should be created lazily": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "default container should be created lazily",
          "duration": 9
        },
        "container events should be attached lazily when specified via a valueFn": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "container events should be attached lazily when specified via a valueFn",
          "duration": 11
        },
        "container events should be attached lazily when specified via an attr value": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "container events should be attached lazily when specified via an attr value",
          "duration": 7
        },
        "events property should be an empty object by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "events property should be an empty object by default",
          "duration": 2
        },
        "events with missing handler functions should not cause an error during destruction": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "events with missing handler functions should not cause an error during destruction",
          "duration": 8
        },
        "initializer should allow setting a ad-hoc attrs": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting a ad-hoc attrs",
          "duration": 4
        },
        "initializer should allow setting a containerTemplate at init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting a containerTemplate at init",
          "duration": 3
        },
        "initializer should allow setting events at init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting events at init",
          "duration": 2
        },
        "initializer should allow setting a template at init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "initializer should allow setting a template at init",
          "duration": 3
        },
        "create() should not be called on init": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should not be called on init",
          "duration": 2
        },
        "destructor should not remove the container by default": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should not remove the container by default",
          "duration": 9
        },
        "destructor should remove the container from the DOM if `remove` options is truthy": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "destructor should remove the container from the DOM if `remove` options is truthy",
          "duration": 9
        }
      },
      "Attributes": {
        "name": "Attributes",
        "passed": 1,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 1,
        "duration": 12,
        "type": "testcase",
        "attachEvents() should be called when the container attr changes": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "attachEvents() should be called when the container attr changes",
          "duration": 11
        }
      },
      "Methods": {
        "name": "Methods",
        "passed": 3,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 3,
        "duration": 24,
        "type": "testcase",
        "create() should create and return a container node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "create() should create and return a container node",
          "duration": 7
        },
        "remove() should remove the container node from the DOM": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "remove() should remove the container node from the DOM",
          "duration": 7
        },
        "render() should be a chainable noop": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "render() should be a chainable noop",
          "duration": 3
        }
      }
    },
    "View.NodeMap": {
      "name": "View.NodeMap",
      "passed": 4,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 4,
      "duration": 141,
      "type": "testsuite",
      "General": {
        "name": "General",
        "passed": 4,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 4,
        "duration": 139,
        "type": "testcase",
        "getByNode() should return a View instance associated with the given Node": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByNode() should return a View instance associated with the given Node",
          "duration": 23
        },
        "getByNode() should return the nearest View instance": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByNode() should return the nearest View instance",
          "duration": 34
        },
        "getByNode() should return null when no View is found": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "getByNode() should return null when no View is found",
          "duration": 14
        },
        "View should be removed from the instances map when destroy() is called": {
          "result": "pass",
          "message": "Test passed",
          "type": "test",
          "name": "View should be removed from the instances map when destroy() is called",
          "duration": 8
        }
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:18 PM"
  },
  {
    "name": "Calendar",
    "passed": 15,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 15,
    "duration": 9124,
    "type": "report",
    "Basic Calendar Tests": {
      "name": "Basic Calendar Tests",
      "passed": 15,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 15,
      "duration": 9045,
      "type": "testcase",
      "testCalendarBase": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCalendarBase",
        "duration": 68
      },
      "testBasicCalendar": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBasicCalendar",
        "duration": 213
      },
      "testAddMonths": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAddMonths",
        "duration": 834
      },
      "testMaxMinDates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMaxMinDates",
        "duration": 650
      },
      "testSelection": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSelection",
        "duration": 778
      },
      "testRules": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testRules",
        "duration": 500
      },
      "testPrevAndNextMonth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrevAndNextMonth",
        "duration": 77
      },
      "testTwoCalendars": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testTwoCalendars",
        "duration": 238
      },
      "testCalendarClick": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCalendarClick",
        "duration": 233
      },
      "testFebruaries": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFebruaries",
        "duration": 2598
      },
      "testFocus": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testFocus",
        "duration": 518
      },
      "testSelectionModes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSelectionModes",
        "duration": 245
      },
      "testCalendarNavigation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCalendarNavigation",
        "duration": 1612
      },
      "testCustomHeader": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCustomHeader",
        "duration": 229
      },
      "testMultiplePanes": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMultiplePanes",
        "duration": 120
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:29 PM"
  },
  {
    "name": "Base Core",
    "passed": 72,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 72,
    "duration": 394,
    "type": "report",
    "Core Tests": {
      "name": "Core Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 57,
      "type": "testcase",
      "testInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInit",
        "duration": 2
      },
      "testDestroy": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestroy",
        "duration": 2
      },
      "testToString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testToString",
        "duration": 3
      },
      "testCloneDefaultValueObject": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultValueObject",
        "duration": 3
      },
      "testCloneDefaultValueArray": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultValueArray",
        "duration": 2
      },
      "testCloneDefaultValueString": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultValueString",
        "duration": 2
      },
      "testCloneDefaultComplex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultComplex",
        "duration": 2
      },
      "testCloneDefaultShallow": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultShallow",
        "duration": 2
      },
      "testCloneDefaultDeep": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultDeep",
        "duration": 2
      },
      "testCloneDefaultOverride": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testCloneDefaultOverride",
        "duration": 2
      },
      "testValueValueFnOverride": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValueValueFnOverride",
        "duration": 12
      },
      "testInitializerDestructorInvocation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitializerDestructorInvocation",
        "duration": 2
      }
    },
    "Base Class Tests": {
      "name": "Base Class Tests",
      "passed": 18,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 18,
      "duration": 75,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 2
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 3
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 3
      },
      "testWriteOncePostInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOncePostInit",
        "duration": 2
      },
      "testWriteOnce": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnce",
        "duration": 2
      },
      "testWriteOnceInitOnly": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnly",
        "duration": 2
      },
      "testWriteOnceInitOnlyNotProvided": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testWriteOnceInitOnlyNotProvided",
        "duration": 2
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 2
      },
      "testAdHocConstructorEnabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorEnabled",
        "duration": 2
      },
      "testAdHocConstructorDisabled": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocConstructorDisabled",
        "duration": 2
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 3
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 2
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 3
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 2
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 2
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 4
      },
      "testInitialValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitialValidation",
        "duration": 2
      },
      "testProtect": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testProtect",
        "duration": 4
      }
    },
    "Extended Class Tests": {
      "name": "Extended Class Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 51,
      "type": "testcase",
      "testDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDefault",
        "duration": 3
      },
      "testConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testConstructor",
        "duration": 3
      },
      "testSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testSet",
        "duration": 4
      },
      "testAdHocGetSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testAdHocGetSet",
        "duration": 3
      },
      "testMassSetGet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMassSetGet",
        "duration": 5
      },
      "testModifiedAttrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testModifiedAttrs",
        "duration": 3
      },
      "testValidation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testValidation",
        "duration": 4
      },
      "testPrivateSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testPrivateSet",
        "duration": 3
      },
      "testComplexDefault": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexDefault",
        "duration": 4
      },
      "testComplexSet": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testComplexSet",
        "duration": 5
      },
      "testOnDemandInit": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testOnDemandInit",
        "duration": 3
      },
      "testGetterSetterValidatorNameArg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testGetterSetterValidatorNameArg",
        "duration": 4
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:30 PM"
  },
  {
    "name": "Base",
    "passed": 25,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 25,
    "duration": 187,
    "type": "report",
    "Base Event Tests": {
      "name": "Base Event Tests",
      "passed": 5,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 5,
      "duration": 21,
      "type": "testcase",
      "testEventPrefix": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventPrefix",
        "duration": 3
      },
      "testEventRegistrationThroughConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testEventRegistrationThroughConstructor",
        "duration": 3
      },
      "testBubbleTargetsThroughConstructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testBubbleTargetsThroughConstructor",
        "duration": 5
      },
      "testInitEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testInitEvent",
        "duration": 2
      },
      "testDestroyEvent": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testDestroyEvent",
        "duration": 2
      }
    },
    "BaseBuild": {
      "name": "BaseBuild",
      "passed": 20,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 20,
      "duration": 92,
      "type": "testcase",
      "test:create-basic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:create-basic",
        "duration": 3
      },
      "test:mix-basic": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mix-basic",
        "duration": 3
      },
      "test:initializer": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:initializer",
        "duration": 3
      },
      "test:destructor": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:destructor",
        "duration": 4
      },
      "test:attrs": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:attrs",
        "duration": 4
      },
      "test:nonAttrsCfg": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:nonAttrsCfg",
        "duration": 2
      },
      "test:aggregates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:aggregates",
        "duration": 2
      },
      "test:overrides-ext-wins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:overrides-ext-wins",
        "duration": 4
      },
      "test:overrides-host-wins": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:overrides-host-wins",
        "duration": 5
      },
      "test:multiext-complex": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:multiext-complex",
        "duration": 5
      },
      "test:classstructure": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:classstructure",
        "duration": 5
      },
      "test:mutli-inheritance-from-base": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mutli-inheritance-from-base",
        "duration": 3
      },
      "test:extend": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extend",
        "duration": 2
      },
      "test:mainclass-statics": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mainclass-statics",
        "duration": 2
      },
      "test:mainclass-aggregates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mainclass-aggregates",
        "duration": 2
      },
      "test:mainclass-custom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:mainclass-custom",
        "duration": 4
      },
      "test:extCfg-custom": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extCfg-custom",
        "duration": 4
      },
      "test:extCfg-statics": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extCfg-statics",
        "duration": 2
      },
      "test:extCfg-aggregates": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:extCfg-aggregates",
        "duration": 4
      },
      "test:deprecated": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test:deprecated",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:32 PM"
  },
  {
    "name": "AsyncQueue",
    "passed": 18,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 18,
    "duration": 646,
    "type": "report",
    "Queue isntantiation": {
      "name": "Queue isntantiation",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 16,
      "type": "testcase",
      "test_instantiation": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_instantiation",
        "duration": 3
      }
    },
    "queue-base": {
      "name": "queue-base",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 18,
      "type": "testcase",
      "test_next": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_next",
        "duration": 14
      }
    },
    "Test API": {
      "name": "Test API",
      "passed": 8,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 8,
      "duration": 307,
      "type": "testcase",
      "test_chaining": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_chaining",
        "duration": 3
      },
      "test_add": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_add",
        "duration": 7
      },
      "test_remove": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_remove",
        "duration": 21
      },
      "test_promote": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_promote",
        "duration": 20
      },
      "test_pause": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_pause",
        "duration": 52
      },
      "test_stop": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_stop",
        "duration": 120
      },
      "test_getCallback": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_getCallback",
        "duration": 6
      },
      "test_isRunning": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_isRunning",
        "duration": 19
      }
    },
    "Test callback config": {
      "name": "Test callback config",
      "passed": 6,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 6,
      "duration": 170,
      "type": "testcase",
      "test_fn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_fn",
        "duration": 6
      },
      "test_context": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_context",
        "duration": 6
      },
      "test_args": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_args",
        "duration": 3
      },
      "test_iterations": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_iterations",
        "duration": 52
      },
      "test_until": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_until",
        "duration": 39
      },
      "test_timeout": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_timeout",
        "duration": 47
      }
    },
    "Test Events": {
      "name": "Test Events",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 56,
      "type": "testcase",
      "test_events": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_events",
        "duration": 32
      },
      "test_preventCallback": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test_preventCallback",
        "duration": 15
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:33 PM"
  },
  {
    "name": "ArraySort",
    "passed": 3,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 3,
    "duration": 111,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 3,
      "duration": 24,
      "type": "testcase",
      "testNumbers": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testNumbers",
        "duration": 1
      },
      "testStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testStrings",
        "duration": 1
      },
      "testMixedStrings": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "testMixedStrings",
        "duration": 2
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:01:34 PM"
  },
  {
    "name": "Graphics: Shape Anim Transform",
    "passed": 48,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 48,
    "duration": 26640,
    "type": "report",
    "ShapeAnimTests": {
      "name": "ShapeAnimTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 552,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 528
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:02:02 PM"
  },
  {
    "name": "Anim: Shape",
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 12,
    "duration": 6721,
    "type": "report",
    "AnimShapeTests": {
      "name": "AnimShapeTests",
      "passed": 1,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 1,
      "duration": 567,
      "type": "testcase",
      "test": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "test",
        "duration": 562
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:02:10 PM"
  },
  {
    "name": "Anim",
    "passed": 30,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 30,
    "duration": 7345,
    "type": "report",
    "Basic Tests": {
      "name": "Basic Tests",
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 2,
      "duration": 1042,
      "type": "testcase",
      "should find node via selector string": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should find node via selector string",
        "duration": 3
      },
      "should end at default duration": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at default duration",
        "duration": 1022
      }
    },
    "Event Tests": {
      "name": "Event Tests",
      "passed": 12,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 12,
      "duration": 1705,
      "type": "testcase",
      "should set initial value prior to running first frame": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set initial value prior to running first frame",
        "duration": 31
      },
      "should fire the tween event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the tween event",
        "duration": 12
      },
      "should fire the end event": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the end event",
        "duration": 514
      },
      "should fire the pause event when pause is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the pause event when pause is called",
        "duration": 5
      },
      "should fire the end event when stop is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the end event when stop is called",
        "duration": 6
      },
      "should run in reverse": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run in reverse",
        "duration": 528
      },
      "should fire the end event and set \"to\" values when stop(true) is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the end event and set \"to\" values when stop(true) is called",
        "duration": 8
      },
      "should fire the resume event when run called while paused": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should fire the resume event when run called while paused",
        "duration": 5
      },
      "should run the onstart prior to setting target values": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should run the onstart prior to setting target values",
        "duration": 6
      },
      "should set \"running\" to true when run is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set \"running\" to true when run is called",
        "duration": 4
      },
      "should set \"running\" to false when stop is called": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should set \"running\" to false when stop is called",
        "duration": 5
      },
      "should animate DOM properties": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should animate DOM properties",
        "duration": 510
      }
    },
    "Anim Easing": {
      "name": "Anim Easing",
      "passed": 16,
      "failed": 0,
      "errors": 0,
      "ignored": 0,
      "total": 16,
      "duration": 4445,
      "type": "testcase",
      "should end at the final value for easeNone": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeNone",
        "duration": 260
      },
      "should end at the final value for easeIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeIn",
        "duration": 272
      },
      "should end at the final value for easeOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeOut",
        "duration": 259
      },
      "should end at the final value for easeBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeBoth",
        "duration": 265
      },
      "should end at the final value for easeInStrong": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeInStrong",
        "duration": 280
      },
      "should end at the final value for easeOutStrong": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeOutStrong",
        "duration": 274
      },
      "should end at the final value for easeBothStrong": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for easeBothStrong",
        "duration": 280
      },
      "should end at the final value for elasticIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for elasticIn",
        "duration": 258
      },
      "should end at the final value for elasticOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for elasticOut",
        "duration": 281
      },
      "should end at the final value for elasticBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for elasticBoth",
        "duration": 261
      },
      "should end at the final value for backIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for backIn",
        "duration": 278
      },
      "should end at the final value for backOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for backOut",
        "duration": 257
      },
      "should end at the final value for backBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for backBoth",
        "duration": 272
      },
      "should end at the final value for bounceIn": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for bounceIn",
        "duration": 261
      },
      "should end at the final value for bounceOut": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for bounceOut",
        "duration": 268
      },
      "should end at the final value for bounceBoth": {
        "result": "pass",
        "message": "Test passed",
        "type": "test",
        "name": "should end at the final value for bounceBoth",
        "duration": 266
      }
    },
    "timestamp": "Wednesday, October 10, 2012 8:02:18 PM"
  }
]